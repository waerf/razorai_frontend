{"ast":null,"code":"import { adminLogin as apiAdminLogin } from '../utils/api';\nimport Storage from '../utils/storage';\nconst state = {\n  // 审核机器人状态变更通知\n  robotReviewStatusChanged: false,\n  adminToken: Storage.get('admin_token'),\n  adminId: Storage.get('admin_id'),\n  adminName: Storage.get('admin_name'),\n  isAdminLoggedIn: !!Storage.get('admin_token')\n};\nconst mutations = {\n  SET_ROBOT_REVIEW_STATUS_CHANGED(state, changed) {\n    state.robotReviewStatusChanged = changed;\n  },\n  SET_ADMIN_INFO(state, {\n    token,\n    adminId,\n    adminName\n  }) {\n    state.adminToken = token;\n    state.adminId = adminId;\n    state.adminName = adminName;\n    state.isAdminLoggedIn = !!token;\n    const TTL = 1 * 24 * 60 * 60 * 1000; // 1天过期\n    Storage.set('admin_token', token, TTL);\n    Storage.set('admin_id', adminId, TTL);\n    Storage.set('admin_name', adminName, TTL);\n  },\n  ADMIN_LOGOUT(state) {\n    state.adminToken = null;\n    state.adminId = null;\n    state.adminName = null;\n    state.isAdminLoggedIn = false;\n    Storage.remove('admin_token');\n    Storage.remove('admin_id');\n    Storage.remove('admin_name');\n  }\n};\nconst actions = {\n  setRobotReviewStatusChanged({\n    commit\n  }, changed) {\n    commit('SET_ROBOT_REVIEW_STATUS_CHANGED', changed);\n  },\n  async adminLogin({\n    commit\n  }, payload) {\n    try {\n      const response = await apiAdminLogin(payload);\n      const {\n        token,\n        adminId,\n        adminName\n      } = response.data;\n      commit('SET_ADMIN_INFO', {\n        token,\n        adminId,\n        adminName\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message\n      };\n    }\n  },\n  adminLogout({\n    commit\n  }) {\n    commit('ADMIN_LOGOUT');\n    return {\n      success: true\n    };\n  }\n};\nconst getters = {\n  robotReviewStatusChanged: state => state.robotReviewStatusChanged,\n  isAdminLoggedIn: state => state.isAdminLoggedIn,\n  adminId: state => state.adminId,\n  adminName: state => state.adminName\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["adminLogin","apiAdminLogin","Storage","state","robotReviewStatusChanged","adminToken","get","adminId","adminName","isAdminLoggedIn","mutations","SET_ROBOT_REVIEW_STATUS_CHANGED","changed","SET_ADMIN_INFO","token","TTL","set","ADMIN_LOGOUT","remove","actions","setRobotReviewStatusChanged","commit","payload","response","data","success","error","message","adminLogout","getters","namespaced"],"sources":["D:/1/razorai_frontend/RAZOR-AI--Frontend-main/src/store/admin.js"],"sourcesContent":["import { adminLogin as apiAdminLogin } from '../utils/api';\nimport Storage from '../utils/storage';\n\nconst state = {\n  // 审核机器人状态变更通知\n  robotReviewStatusChanged: false,\n  adminToken: Storage.get('admin_token'),\n  adminId: Storage.get('admin_id'),\n  adminName: Storage.get('admin_name'),\n  isAdminLoggedIn: !!Storage.get('admin_token'),\n};\n\nconst mutations = {\n  SET_ROBOT_REVIEW_STATUS_CHANGED(state, changed) {\n    state.robotReviewStatusChanged = changed;\n  },\n  SET_ADMIN_INFO(state, { token, adminId, adminName }) {\n    state.adminToken = token;\n    state.adminId = adminId;\n    state.adminName = adminName;\n    state.isAdminLoggedIn = !!token;\n\n    const TTL = 1 * 24 * 60 * 60 * 1000; // 1天过期\n    Storage.set('admin_token', token, TTL);\n    Storage.set('admin_id', adminId, TTL);\n    Storage.set('admin_name', adminName, TTL);\n  },\n  ADMIN_LOGOUT(state) {\n    state.adminToken = null;\n    state.adminId = null;\n    state.adminName = null;\n    state.isAdminLoggedIn = false;\n    Storage.remove('admin_token');\n    Storage.remove('admin_id');\n    Storage.remove('admin_name');\n  },\n};\n\nconst actions = {\n  setRobotReviewStatusChanged({ commit }, changed) {\n    commit('SET_ROBOT_REVIEW_STATUS_CHANGED', changed);\n  },\n  async adminLogin({ commit }, payload) {\n    try {\n      const response = await apiAdminLogin(payload);\n      const { token, adminId, adminName } = response.data;\n      commit('SET_ADMIN_INFO', { token, adminId, adminName });\n      return { success: true };\n    } catch (error) {\n      return { success: false, message: error.message };\n    }\n  },\n  adminLogout({ commit }) {\n    commit('ADMIN_LOGOUT');\n    return { success: true };\n  },\n};\n\nconst getters = {\n  robotReviewStatusChanged: (state) => state.robotReviewStatusChanged,\n  isAdminLoggedIn: (state) => state.isAdminLoggedIn,\n  adminId: (state) => state.adminId,\n  adminName: (state) => state.adminName,\n};\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}