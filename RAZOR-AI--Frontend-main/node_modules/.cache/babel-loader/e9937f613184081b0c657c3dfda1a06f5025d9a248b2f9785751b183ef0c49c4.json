{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport MyStorage from '@/utils/storage';\nimport { adminLogin } from '@/utils/api';\nexport default {\n  name: 'AdminLoginPage',\n  data() {\n    return {\n      loginForm: {\n        identifier: '',\n        password: ''\n      },\n      loginRules: {\n        identifier: [{\n          required: true,\n          message: '请输入账号/邮箱/手机号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      },\n      isLoading: false\n    };\n  },\n  methods: {\n    handleOutsideClick() {\n      // 空方法处理点击外部事件\n    },\n    goToRegister() {\n      this.$router.push('/admin/register');\n    },\n    async onSubmit() {\n      this.$refs.loginForm.validate(async valid => {\n        if (valid) {\n          this.isLoading = true;\n          try {\n            const response = await adminLogin({\n              identifier: this.loginForm.identifier,\n              password: this.loginForm.password\n            });\n            if (response.data.success) {\n              this.$message.success('登录成功！');\n              MyStorage.set('admin_token', response.data.token);\n              this.$router.push('/admin');\n            } else {\n              this.$message.error(response.data.message || '登录失败');\n            }\n          } catch (error) {\n            console.error(error);\n            this.$message.error(error.message || '登录失败，请检查控制台');\n          } finally {\n            this.isLoading = false;\n          }\n        } else {\n          this.$message.error('请正确填写表单');\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["MyStorage","adminLogin","name","data","loginForm","identifier","password","loginRules","required","message","trigger","isLoading","methods","handleOutsideClick","goToRegister","$router","push","onSubmit","$refs","validate","valid","response","success","$message","set","token","error","console"],"sources":["src/views/AdminLoginPage.vue"],"sourcesContent":["<template>\n  <div class=\"admin-login\" @click.self=\"handleOutsideClick\">\n    <div class=\"login-container\">\n      <el-form\n        :model=\"loginForm\"\n        :rules=\"loginRules\"\n        ref=\"loginForm\"\n        @keyup.enter.native=\"onSubmit\"\n        v-loading=\"isLoading\"\n      >\n        <el-form-item label=\"账号 (ID/邮箱/手机号)\" prop=\"identifier\">\n          <el-input\n            v-model=\"loginForm.identifier\"\n            placeholder=\"请输入管理员账号、邮箱或手机号\"\n            prefix-icon=\"el-icon-user\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input\n            v-model=\"loginForm.password\"\n            type=\"password\"\n            placeholder=\"密码\"\n            prefix-icon=\"el-icon-lock\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button\n            type=\"primary\"\n            @click=\"onSubmit\"\n            class=\"login-button\"\n            :loading=\"isLoading\"\n            >登录</el-button\n          >\n          <el-button type=\"text\" @click=\"goToRegister\" class=\"register-button\"\n            >注册</el-button\n          >\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport MyStorage from '@/utils/storage';\nimport { adminLogin } from '@/utils/api';\nexport default {\n  name: 'AdminLoginPage',\n  data() {\n    return {\n      loginForm: {\n        identifier: '',\n        password: '',\n      },\n      loginRules: {\n        identifier: [\n          {\n            required: true,\n            message: '请输入账号/邮箱/手机号',\n            trigger: 'blur',\n          },\n        ],\n        password: [{ required: true, message: '请输入密码', trigger: 'blur' }],\n      },\n      isLoading: false,\n    };\n  },\n  methods: {\n    handleOutsideClick() {\n      // 空方法处理点击外部事件\n    },\n    goToRegister() {\n      this.$router.push('/admin/register');\n    },\n    async onSubmit() {\n      this.$refs.loginForm.validate(async (valid) => {\n        if (valid) {\n          this.isLoading = true;\n          try {\n            const response = await adminLogin({\n              identifier: this.loginForm.identifier,\n              password: this.loginForm.password,\n            });\n\n            if (response.data.success) {\n              this.$message.success('登录成功！');\n              MyStorage.set('admin_token', response.data.token);\n              this.$router.push('/admin');\n            } else {\n              this.$message.error(response.data.message || '登录失败');\n            }\n          } catch (error) {\n            console.error(error);\n            this.$message.error(error.message || '登录失败，请检查控制台');\n          } finally {\n            this.isLoading = false;\n          }\n        } else {\n          this.$message.error('请正确填写表单');\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.admin-login {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 2000;\n}\n\n.login-container {\n  background: #fff;\n  padding: 30px;\n  border-radius: 5px;\n  width: 400px;\n}\n\n.login-button {\n  width: 100%;\n  margin-top: 20px;\n}\n</style>\n"],"mappings":";AA2CA,OAAAA,SAAA;AACA,SAAAC,UAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,UAAA;QACAC,QAAA;MACA;MACAC,UAAA;QACAF,UAAA,GACA;UACAG,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACAJ,QAAA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;MACAC,SAAA;IACA;EACA;EACAC,OAAA;IACAC,mBAAA;MACA;IAAA,CACA;IACAC,aAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IACA,MAAAC,SAAA;MACA,KAAAC,KAAA,CAAAd,SAAA,CAAAe,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAT,SAAA;UACA;YACA,MAAAU,QAAA,SAAApB,UAAA;cACAI,UAAA,OAAAD,SAAA,CAAAC,UAAA;cACAC,QAAA,OAAAF,SAAA,CAAAE;YACA;YAEA,IAAAe,QAAA,CAAAlB,IAAA,CAAAmB,OAAA;cACA,KAAAC,QAAA,CAAAD,OAAA;cACAtB,SAAA,CAAAwB,GAAA,gBAAAH,QAAA,CAAAlB,IAAA,CAAAsB,KAAA;cACA,KAAAV,OAAA,CAAAC,IAAA;YACA;cACA,KAAAO,QAAA,CAAAG,KAAA,CAAAL,QAAA,CAAAlB,IAAA,CAAAM,OAAA;YACA;UACA,SAAAiB,KAAA;YACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;YACA,KAAAH,QAAA,CAAAG,KAAA,CAAAA,KAAA,CAAAjB,OAAA;UACA;YACA,KAAAE,SAAA;UACA;QACA;UACA,KAAAY,QAAA,CAAAG,KAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}