{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { mapState } from 'vuex';\nimport { deleteChat as apideleteChat } from '../utils/api'; // 删除对话\nexport default {\n  name: 'ConversationHistory',\n  data() {\n    return {\n      title: '历史对话',\n      conversations: [],\n      selectedConversations: [],\n      deleteDialogVisible: false,\n      selectAll: false\n    };\n  },\n  mounted() {\n    const robotId = this.$route.params.id; // 获取机器人 ID\n    for (let chat of this.chats) {\n      if (Number(chat.agent_id) === Number(robotId)) {\n        this.conversations.push(chat);\n      }\n    }\n  },\n  computed: {\n    ...mapState('chat', ['chats']) // 从 Vuex 状态中获取 chats\n  },\n  methods: {\n    viewConversation(conversationId) {\n      // 跳转到详细对话页面\n      this.$router.push({\n        name: 'ChatRobot',\n        params: {\n          id: conversationId\n        }\n      });\n    },\n    toggleSelectAll() {\n      this.selectedConversations = this.selectAll ? this.conversations.map(conversation => conversation.id) : [];\n    },\n    confirmDelete() {\n      this.deleteDialogVisible = true;\n    },\n    async deleteConversations() {\n      for (let conversationId of this.selectedConversations) {\n        // 删除对话\n        try {\n          const response = await apideleteChat({\n            chat_id: conversationId\n          });\n          if (response.status === 200) {\n            console.log('删除对话成功:', response);\n          } else {\n            console.error('删除对话失败:', response);\n          }\n        } catch (error) {\n          console.error('删除对话失败:', error);\n        } finally {\n          location.reload(); // 刷新页面\n        }\n        this.conversations = this.conversations.filter(conversation => !this.selectedConversations.includes(conversation.id));\n        this.selectedConversations = [];\n        this.deleteDialogVisible = false;\n        this.selectAll = false;\n      }\n    },\n    clearSelection() {\n      this.selectAll = false;\n    }\n  }\n};","map":{"version":3,"names":["mapState","deleteChat","apideleteChat","name","data","title","conversations","selectedConversations","deleteDialogVisible","selectAll","mounted","robotId","$route","params","id","chat","chats","Number","agent_id","push","computed","methods","viewConversation","conversationId","$router","toggleSelectAll","map","conversation","confirmDelete","deleteConversations","response","chat_id","status","console","log","error","location","reload","filter","includes","clearSelection"],"sources":["src/views/ConversationHistory.vue"],"sourcesContent":["<template>\n  <div class=\"conversation-history\">\n    <h1 class=\"title\">{{ title }}</h1>\n    <div class=\"actions\">\n      <el-checkbox v-model=\"selectAll\" @change=\"toggleSelectAll\"\n        >全选</el-checkbox\n      >\n      <el-button\n        type=\"danger\"\n        @click=\"confirmDelete\"\n        :disabled=\"selectedConversations.length === 0\"\n        >删除选中</el-button\n      >\n    </div>\n    <div class=\"history-list\">\n      <div\n        v-for=\"conversation in conversations\"\n        :key=\"conversation.id\"\n        class=\"conversation-item\"\n      >\n        <el-checkbox\n          v-model=\"selectedConversations\"\n          :label=\"conversation.id\"\n        ></el-checkbox>\n        <div\n          class=\"conversation-details\"\n          @click=\"viewConversation(conversation.id)\"\n        >\n          <strong>会话名称:</strong> {{ conversation.name }}\n        </div>\n      </div>\n      <div v-if=\"conversations.length === 0\" class=\"no-conversations\">\n        暂无相关的会话。\n      </div>\n    </div>\n    <el-dialog\n      title=\"确认删除\"\n      :visible.sync=\"deleteDialogVisible\"\n      width=\"30%\"\n      @close=\"clearSelection\"\n    >\n      <span>确定要删除选中的对话吗？</span>\n      <template #footer>\n        <el-button @click=\"deleteDialogVisible = false\">取消</el-button>\n        <el-button type=\"danger\" @click=\"deleteConversations\">确定</el-button>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport { deleteChat as apideleteChat } from '../utils/api'; // 删除对话\nexport default {\n  name: 'ConversationHistory',\n  data() {\n    return {\n      title: '历史对话',\n      conversations: [],\n      selectedConversations: [],\n      deleteDialogVisible: false,\n      selectAll: false,\n    };\n  },\n  mounted() {\n    const robotId = this.$route.params.id; // 获取机器人 ID\n    for (let chat of this.chats) {\n      if (Number(chat.agent_id) === Number(robotId)) {\n        this.conversations.push(chat);\n      }\n    }\n  },\n\n  computed: {\n    ...mapState('chat', ['chats']), // 从 Vuex 状态中获取 chats\n  },\n  methods: {\n    viewConversation(conversationId) {\n      // 跳转到详细对话页面\n      this.$router.push({\n        name: 'ChatRobot',\n        params: { id: conversationId },\n      });\n    },\n    toggleSelectAll() {\n      this.selectedConversations = this.selectAll\n        ? this.conversations.map((conversation) => conversation.id)\n        : [];\n    },\n    confirmDelete() {\n      this.deleteDialogVisible = true;\n    },\n    async deleteConversations() {\n      for (let conversationId of this.selectedConversations) {\n        // 删除对话\n        try {\n          const response = await apideleteChat({\n            chat_id: conversationId,\n          });\n          if (response.status === 200) {\n            console.log('删除对话成功:', response);\n          } else {\n            console.error('删除对话失败:', response);\n          }\n        } catch (error) {\n          console.error('删除对话失败:', error);\n        } finally {\n          location.reload(); // 刷新页面\n        }\n        this.conversations = this.conversations.filter(\n          (conversation) =>\n            !this.selectedConversations.includes(conversation.id)\n        );\n        this.selectedConversations = [];\n        this.deleteDialogVisible = false;\n        this.selectAll = false;\n      }\n    },\n    clearSelection() {\n      this.selectAll = false;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@use '@/assets/styles/mixins.scss' as *;\n@use '@/assets/styles/variables.scss' as *;\n.conversation-history {\n  background-color: $background-color;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.actions {\n  display: flex;\n  justify-content: space-between;\n  width: 60%;\n  margin: 1em 0;\n}\n\n.title {\n  font-size: 2.5em;\n  text-align: center;\n  margin: 1em 0;\n}\n\n.history-list {\n  display: flex;\n  flex-direction: column;\n  width: 60%;\n  justify-content: center;\n  align-items: center;\n}\n\n.conversation-item {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  padding: $small-spacing $base-spacing;\n  margin-bottom: $small-spacing;\n  background: $hover-background-color;\n  border-radius: $border-radius;\n  box-shadow: $box-shadow-light;\n  cursor: pointer;\n}\n\n.conversation-item:hover {\n  background: $hover-background-color;\n  box-shadow: $box-shadow-medium;\n}\n\n.no-conversations {\n  color: $secondary-color;\n  font-size: $body-font-size;\n  margin-top: 1em;\n  text-align: center;\n}\n</style>\n"],"mappings":";;;;AAmDA,SAAAA,QAAA;AACA,SAAAC,UAAA,IAAAC,aAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,aAAA;MACAC,qBAAA;MACAC,mBAAA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACA,MAAAC,OAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;IACA,SAAAC,IAAA,SAAAC,KAAA;MACA,IAAAC,MAAA,CAAAF,IAAA,CAAAG,QAAA,MAAAD,MAAA,CAAAN,OAAA;QACA,KAAAL,aAAA,CAAAa,IAAA,CAAAJ,IAAA;MACA;IACA;EACA;EAEAK,QAAA;IACA,GAAApB,QAAA;EACA;EACAqB,OAAA;IACAC,iBAAAC,cAAA;MACA;MACA,KAAAC,OAAA,CAAAL,IAAA;QACAhB,IAAA;QACAU,MAAA;UAAAC,EAAA,EAAAS;QAAA;MACA;IACA;IACAE,gBAAA;MACA,KAAAlB,qBAAA,QAAAE,SAAA,GACA,KAAAH,aAAA,CAAAoB,GAAA,CAAAC,YAAA,IAAAA,YAAA,CAAAb,EAAA,IACA;IACA;IACAc,cAAA;MACA,KAAApB,mBAAA;IACA;IACA,MAAAqB,oBAAA;MACA,SAAAN,cAAA,SAAAhB,qBAAA;QACA;QACA;UACA,MAAAuB,QAAA,SAAA5B,aAAA;YACA6B,OAAA,EAAAR;UACA;UACA,IAAAO,QAAA,CAAAE,MAAA;YACAC,OAAA,CAAAC,GAAA,YAAAJ,QAAA;UACA;YACAG,OAAA,CAAAE,KAAA,YAAAL,QAAA;UACA;QACA,SAAAK,KAAA;UACAF,OAAA,CAAAE,KAAA,YAAAA,KAAA;QACA;UACAC,QAAA,CAAAC,MAAA;QACA;QACA,KAAA/B,aAAA,QAAAA,aAAA,CAAAgC,MAAA,CACAX,YAAA,IACA,MAAApB,qBAAA,CAAAgC,QAAA,CAAAZ,YAAA,CAAAb,EAAA,CACA;QACA,KAAAP,qBAAA;QACA,KAAAC,mBAAA;QACA,KAAAC,SAAA;MACA;IACA;IACA+B,eAAA;MACA,KAAA/B,SAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}