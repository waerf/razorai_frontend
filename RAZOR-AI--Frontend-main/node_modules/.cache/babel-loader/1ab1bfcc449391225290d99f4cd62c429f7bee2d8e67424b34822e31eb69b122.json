{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  name: 'LoginForm',\n  data() {\n    return {\n      loginForm: {\n        userid: '',\n        password: '',\n        rememberMe: false,\n        isAdmin: false\n      },\n      loginRules: {\n        userid: [{\n          required: true,\n          message: '请输入您的用户ID',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入您的密码',\n          trigger: 'blur'\n        }]\n      },\n      isLoading: true\n    };\n  },\n  computed: {\n    ...mapGetters('user', ['isLoggedIn', 'user_id']) // 指定 user 命名空间\n  },\n  methods: {\n    ...mapActions('user', ['login']),\n    // 映射 user 模块中的 login 方法\n    async onSubmit() {\n      this.$refs.loginForm.validate(async valid => {\n        if (valid) {\n          this.isLoading = true; // 开始加载状态\n          try {\n            this.closeDialog(); // 关闭对话框\n            this.$router.push({\n              name: 'AdminPage'\n            });\n          } catch (error) {\n            console.error(error); // 打印错误信息\n            this.$message.error(error.message || '跳转失败，打开控制台检查');\n          } finally {\n            this.isLoading = false; // 结束加载状态\n          }\n        } else {\n          this.$message.error('请正确填写表单');\n        }\n      });\n    },\n    closeDialog() {\n      this.$emit('close'); // 触发关闭事件\n      this.resetForm(); // 重置表单\n    },\n    resetForm() {\n      this.loginForm.userid = '';\n      this.loginForm.password = '';\n      this.loginForm.rememberMe = false;\n    },\n    navigateTo(route) {\n      if (this.$route.name !== route) {\n        this.$router.push({\n          name: route\n        });\n      }\n    },\n    handleRegister() {\n      this.closeDialog(); // 关闭对话框\n      this.navigateTo('Register'); // 跳转到注册页面\n    }\n  }\n};","map":{"version":3,"names":["mapActions","mapGetters","name","data","loginForm","userid","password","rememberMe","isAdmin","loginRules","required","message","trigger","isLoading","computed","methods","onSubmit","$refs","validate","valid","closeDialog","$router","push","error","console","$message","$emit","resetForm","navigateTo","route","$route","handleRegister"],"sources":["src/components/LoginForm.vue"],"sourcesContent":["<!-- src/components/LoginForm.vue -->\n<template>\n  <el-form\n    :model=\"loginForm\"\n    :rules=\"loginRules\"\n    ref=\"loginForm\"\n    @keyup.enter.native=\"onSubmit\"\n    v-loading=\"isLoading\"\n  >\n    <el-form-item label=\"用户ID\" prop=\"userid\">\n      <el-input\n        v-model=\"loginForm.userid\"\n        placeholder=\"用户ID\"\n        prefix-icon=\"el-icon-user\"\n      ></el-input>\n    </el-form-item>\n    <el-form-item label=\"密码\" prop=\"password\">\n      <el-input\n        v-model=\"loginForm.password\"\n        type=\"password\"\n        placeholder=\"密码\"\n        prefix-icon=\"el-icon-lock\"\n      ></el-input>\n    </el-form-item>\n    <el-form-item>\n      <div class=\"form-footer\">\n        <div>\n          <el-checkbox v-model=\"loginForm.rememberMe\">记住我</el-checkbox>\n          <el-checkbox v-model=\"loginForm.isAdmin\" style=\"margin-left: 10px\"\n            >管理员登录</el-checkbox\n          >\n        </div>\n        <div class=\"register-prompt\">\n          <span>没有账户？</span>\n          <el-button type=\"text\" @click=\"handleRegister\">点击注册</el-button>\n        </div>\n      </div>\n    </el-form-item>\n    <el-form-item>\n      <el-button\n        type=\"primary\"\n        @click=\"onSubmit\"\n        class=\"login-button\"\n        :loading=\"isLoading\"\n        >登录</el-button\n      >\n      <el-button class=\"login-button\" @click=\"closeDialog\">取消</el-button>\n    </el-form-item>\n  </el-form>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n  name: 'LoginForm',\n  data() {\n    return {\n      loginForm: {\n        userid: '',\n        password: '',\n        rememberMe: false,\n        isAdmin: false,\n      },\n      loginRules: {\n        userid: [\n          { required: true, message: '请输入您的用户ID', trigger: 'blur' },\n        ],\n        password: [\n          { required: true, message: '请输入您的密码', trigger: 'blur' },\n        ],\n      },\n      isLoading: true,\n    };\n  },\n  computed: {\n    ...mapGetters('user', ['isLoggedIn', 'user_id']), // 指定 user 命名空间\n  },\n  methods: {\n    ...mapActions('user', ['login']), // 映射 user 模块中的 login 方法\n    async onSubmit() {\n      this.$refs.loginForm.validate(async (valid) => {\n        if (valid) {\n          this.isLoading = true; // 开始加载状态\n          try {\n            this.closeDialog(); // 关闭对话框\n            this.$router.push({ name: 'AdminPage' });\n          } catch (error) {\n            console.error(error); // 打印错误信息\n            this.$message.error(error.message || '跳转失败，打开控制台检查');\n          } finally {\n            this.isLoading = false; // 结束加载状态\n          }\n        } else {\n          this.$message.error('请正确填写表单');\n        }\n      });\n    },\n    closeDialog() {\n      this.$emit('close'); // 触发关闭事件\n      this.resetForm(); // 重置表单\n    },\n    resetForm() {\n      this.loginForm.userid = '';\n      this.loginForm.password = '';\n      this.loginForm.rememberMe = false;\n    },\n    navigateTo(route) {\n      if (this.$route.name !== route) {\n        this.$router.push({ name: route });\n      }\n    },\n    handleRegister() {\n      this.closeDialog(); // 关闭对话框\n      this.navigateTo('Register'); // 跳转到注册页面\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@use '@/assets/styles/mixins.scss' as *;\n@use '@/assets/styles/variables.scss' as *;\n.login-button {\n  margin-right: 10px;\n  color: $text-color; /* 文字颜色 */\n  background-color: $primary-color; /* 主色调背景 */\n  border-color: $text-color; /* 边框颜色 */\n  &:hover {\n    color: $text-color; /* 文字颜色 */\n    background-color: $hover-text-color; /* 主色调背景 */\n    border-color: $text-color; /* 边框颜色 */\n  }\n}\n.form-footer {\n  display: flex;\n  justify-content: space-between; /* 在左右两边对齐 */\n  align-items: center; /* 垂直居中对齐 */\n}\n\n.register-prompt {\n  display: flex;\n  align-items: center; /* 垂直居中对齐 */\n}\n</style>\n"],"mappings":";AAoDA,SAAAA,UAAA,EAAAC,UAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,MAAA;QACAC,QAAA;QACAC,UAAA;QACAC,OAAA;MACA;MACAC,UAAA;QACAJ,MAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAN,QAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAb,UAAA;EACA;EACAc,OAAA;IACA,GAAAf,UAAA;IAAA;IACA,MAAAgB,SAAA;MACA,KAAAC,KAAA,CAAAb,SAAA,CAAAc,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAN,SAAA;UACA;YACA,KAAAO,WAAA;YACA,KAAAC,OAAA,CAAAC,IAAA;cAAApB,IAAA;YAAA;UACA,SAAAqB,KAAA;YACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;YACA,KAAAE,QAAA,CAAAF,KAAA,CAAAA,KAAA,CAAAZ,OAAA;UACA;YACA,KAAAE,SAAA;UACA;QACA;UACA,KAAAY,QAAA,CAAAF,KAAA;QACA;MACA;IACA;IACAH,YAAA;MACA,KAAAM,KAAA;MACA,KAAAC,SAAA;IACA;IACAA,UAAA;MACA,KAAAvB,SAAA,CAAAC,MAAA;MACA,KAAAD,SAAA,CAAAE,QAAA;MACA,KAAAF,SAAA,CAAAG,UAAA;IACA;IACAqB,WAAAC,KAAA;MACA,SAAAC,MAAA,CAAA5B,IAAA,KAAA2B,KAAA;QACA,KAAAR,OAAA,CAAAC,IAAA;UAAApB,IAAA,EAAA2B;QAAA;MACA;IACA;IACAE,eAAA;MACA,KAAAX,WAAA;MACA,KAAAQ,UAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}