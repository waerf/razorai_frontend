{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState } from 'vuex';\nimport { createCommunityPost } from '@/utils/api';\nexport default {\n  data() {\n    return {\n      post: {\n        title: '',\n        content: '',\n        tags: []\n      },\n      allTags: ['订阅管理', '效率工具', '信息整理', '专栏推荐', '2025精选', '内容推荐', 'AI编程', '工具对比', '编程技巧', '技术分享', '性能优化', '前端布局'],\n      submitting: false\n    };\n  },\n  computed: {\n    ...mapState('user', ['isLoggedIn', 'userId', 'userName'])\n  },\n  methods: {\n    toggleTag(tag) {\n      if (this.post.tags.includes(tag)) {\n        this.post.tags = this.post.tags.filter(t => t !== tag);\n      } else if (this.post.tags.length < 5) {\n        this.post.tags.push(tag);\n      }\n    },\n    async submitPost() {\n      if (!this.isLoggedIn || !this.userId) {\n        this.$message.warning('请先登录后再发布帖子');\n        this.$router.push('/login');\n        return;\n      }\n      if (!this.post.title.trim() || !this.post.content.trim()) {\n        return this.$message.warning('标题和内容不能为空');\n      }\n      if (this.post.tags.length === 0) {\n        return this.$message.warning('请至少选择一个标签');\n      }\n      this.submitting = true;\n      try {\n        const payload = {\n          userId: this.userId,\n          postContent: JSON.stringify({\n            title: this.post.title,\n            content: this.post.content,\n            tags: this.post.tags,\n            author: this.userName\n          })\n        };\n        const res = await createCommunityPost(payload); // ✅ 使用封装的 API\n\n        if (res.data && res.data.success !== false) {\n          this.$message.success('帖子发布成功！');\n          this.$router.push('/community');\n        } else {\n          this.$message.error(res.data.message || '发布失败');\n        }\n      } catch (err) {\n        console.error('发布帖子失败:', err.response ? err.response.data : err);\n        this.$message.error(err.response?.data?.message || '服务器错误，请稍后重试');\n      } finally {\n        this.submitting = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapState","createCommunityPost","data","post","title","content","tags","allTags","submitting","computed","methods","toggleTag","tag","includes","filter","t","length","push","submitPost","isLoggedIn","userId","$message","warning","$router","trim","payload","postContent","JSON","stringify","author","userName","res","success","error","message","err","console","response"],"sources":["src/views/CreatePost.vue"],"sourcesContent":["<template>\n  <div class=\"create-post-container\">\n    <main class=\"main-content container\">\n      <div class=\"page-header\">\n        <h1 class=\"page-title\">发布新帖子</h1>\n        <p class=\"page-description\">分享你的想法和经验，与社区成员交流</p>\n      </div>\n\n      <div class=\"form-card\">\n        <form @submit.prevent=\"submitPost\">\n          <!-- 帖子标题 -->\n          <div class=\"form-group\">\n            <label for=\"title\" class=\"form-label\">帖子标题</label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              v-model=\"post.title\"\n              class=\"form-input\"\n              placeholder=\"请输入帖子标题\"\n              required\n            />\n          </div>\n\n          <!-- 帖子内容 -->\n          <div class=\"form-group\">\n            <label for=\"content\" class=\"form-label\">帖子内容</label>\n            <textarea\n              id=\"content\"\n              v-model=\"post.content\"\n              class=\"form-textarea\"\n              placeholder=\"请输入帖子内容...\"\n              rows=\"10\"\n              required\n            ></textarea>\n          </div>\n\n          <!-- 帖子标签 -->\n          <div class=\"form-group\">\n            <label class=\"form-label\">帖子标签</label>\n            <div class=\"tags-container\">\n              <div\n                class=\"tag-option\"\n                v-for=\"tag in allTags\"\n                :key=\"tag\"\n                :class=\"{ 'tag-selected': post.tags.includes(tag) }\"\n                @click=\"toggleTag(tag)\"\n              >\n                {{ tag }}\n              </div>\n            </div>\n            <p class=\"tags-hint\">选择相关标签，最多选择5个</p>\n          </div>\n\n          <!-- 提交按钮 -->\n          <div class=\"form-actions\">\n            <button type=\"button\" class=\"secondary-btn\" @click=\"$router.go(-1)\">\n              取消\n            </button>\n            <button type=\"submit\" class=\"primary-btn\" :disabled=\"submitting\">\n              <span v-if=\"!submitting\">发布帖子</span>\n              <span v-if=\"submitting\">发布中...</span>\n            </button>\n          </div>\n        </form>\n      </div>\n    </main>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport { createCommunityPost } from '@/utils/api';\n\nexport default {\n  data() {\n    return {\n      post: {\n        title: '',\n        content: '',\n        tags: [],\n      },\n      allTags: [\n        '订阅管理',\n        '效率工具',\n        '信息整理',\n        '专栏推荐',\n        '2025精选',\n        '内容推荐',\n        'AI编程',\n        '工具对比',\n        '编程技巧',\n        '技术分享',\n        '性能优化',\n        '前端布局',\n      ],\n      submitting: false,\n    };\n  },\n  computed: {\n    ...mapState('user', ['isLoggedIn', 'userId', 'userName']),\n  },\n  methods: {\n    toggleTag(tag) {\n      if (this.post.tags.includes(tag)) {\n        this.post.tags = this.post.tags.filter((t) => t !== tag);\n      } else if (this.post.tags.length < 5) {\n        this.post.tags.push(tag);\n      }\n    },\n\n    async submitPost() {\n      if (!this.isLoggedIn || !this.userId) {\n        this.$message.warning('请先登录后再发布帖子');\n        this.$router.push('/login');\n        return;\n      }\n\n      if (!this.post.title.trim() || !this.post.content.trim()) {\n        return this.$message.warning('标题和内容不能为空');\n      }\n      if (this.post.tags.length === 0) {\n        return this.$message.warning('请至少选择一个标签');\n      }\n\n      this.submitting = true;\n      try {\n        const payload = {\n          userId: this.userId,\n          postContent: JSON.stringify({\n            title: this.post.title,\n            content: this.post.content,\n            tags: this.post.tags,\n            author: this.userName,\n          }),\n        };\n\n        const res = await createCommunityPost(payload); // ✅ 使用封装的 API\n\n        if (res.data && res.data.success !== false) {\n          this.$message.success('帖子发布成功！');\n          this.$router.push('/community');\n        } else {\n          this.$message.error(res.data.message || '发布失败');\n        }\n      } catch (err) {\n        console.error('发布帖子失败:', err.response ? err.response.data : err);\n        this.$message.error(\n          err.response?.data?.message || '服务器错误，请稍后重试'\n        );\n      } finally {\n        this.submitting = false;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.create-post-container {\n  background-color: #f8fafc;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n  color: #333;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.container {\n  max-width: 900px;\n  margin: 0 auto;\n  padding: 0 20px;\n  width: 100%;\n}\n\n.main-content {\n  padding: 30px 0;\n  flex: 1;\n}\n\n.page-header {\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid #f1f3f5;\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: 600;\n  color: #1a1a1a;\n  margin-bottom: 8px;\n}\n\n.page-description {\n  color: #666;\n  font-size: 14px;\n}\n\n.form-card {\n  background: #fff;\n  border-radius: 8px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n  padding: 24px;\n}\n\n.form-group {\n  margin-bottom: 24px;\n}\n\n.form-label {\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 500;\n  color: #1a1a1a;\n}\n\n.form-input {\n  width: 100%;\n  padding: 10px 12px;\n  border: 1px solid #e2e8f0;\n  border-radius: 6px;\n  font-size: 16px;\n  transition: border-color 0.2s ease;\n}\n\n.form-input:focus {\n  outline: none;\n  border-color: #0f88eb;\n}\n\n.form-textarea {\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #e2e8f0;\n  border-radius: 6px;\n  font-family: inherit;\n  font-size: 15px;\n  resize: vertical;\n  transition: border-color 0.2s ease;\n}\n\n.form-textarea:focus {\n  outline: none;\n  border-color: #0f88eb;\n}\n\n.tags-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-bottom: 8px;\n}\n\n.tag-option {\n  padding: 6px 12px;\n  border-radius: 16px;\n  font-size: 13px;\n  background-color: #f1f5f9;\n  color: #64748b;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.tag-selected {\n  background-color: rgba(15, 136, 235, 0.1);\n  color: #0f88eb;\n}\n\n.tags-hint {\n  color: #94a3b8;\n  font-size: 12px;\n  margin: 0;\n}\n\n.form-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n  margin-top: 30px;\n}\n\n.primary-btn {\n  background-color: #0f88eb;\n  color: white;\n  padding: 8px 16px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  border: none;\n  display: inline-flex;\n  align-items: center;\n}\n\n.primary-btn:hover {\n  background-color: #0a6fcc;\n  box-shadow: 0 4px 8px rgba(15, 136, 235, 0.2);\n}\n\n.secondary-btn {\n  background-color: #f8f9fa;\n  color: #495057;\n  padding: 8px 16px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  border: none;\n}\n\n.secondary-btn:hover {\n  background-color: #e9ecef;\n}\n</style>\n"],"mappings":";AAsEA,SAAAA,QAAA;AACA,SAAAC,mBAAA;AAEA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,KAAA;QACAC,OAAA;QACAC,IAAA;MACA;MACAC,OAAA,GACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAT,QAAA;EACA;EACAU,OAAA;IACAC,UAAAC,GAAA;MACA,SAAAT,IAAA,CAAAG,IAAA,CAAAO,QAAA,CAAAD,GAAA;QACA,KAAAT,IAAA,CAAAG,IAAA,QAAAH,IAAA,CAAAG,IAAA,CAAAQ,MAAA,CAAAC,CAAA,IAAAA,CAAA,KAAAH,GAAA;MACA,gBAAAT,IAAA,CAAAG,IAAA,CAAAU,MAAA;QACA,KAAAb,IAAA,CAAAG,IAAA,CAAAW,IAAA,CAAAL,GAAA;MACA;IACA;IAEA,MAAAM,WAAA;MACA,UAAAC,UAAA,UAAAC,MAAA;QACA,KAAAC,QAAA,CAAAC,OAAA;QACA,KAAAC,OAAA,CAAAN,IAAA;QACA;MACA;MAEA,UAAAd,IAAA,CAAAC,KAAA,CAAAoB,IAAA,YAAArB,IAAA,CAAAE,OAAA,CAAAmB,IAAA;QACA,YAAAH,QAAA,CAAAC,OAAA;MACA;MACA,SAAAnB,IAAA,CAAAG,IAAA,CAAAU,MAAA;QACA,YAAAK,QAAA,CAAAC,OAAA;MACA;MAEA,KAAAd,UAAA;MACA;QACA,MAAAiB,OAAA;UACAL,MAAA,OAAAA,MAAA;UACAM,WAAA,EAAAC,IAAA,CAAAC,SAAA;YACAxB,KAAA,OAAAD,IAAA,CAAAC,KAAA;YACAC,OAAA,OAAAF,IAAA,CAAAE,OAAA;YACAC,IAAA,OAAAH,IAAA,CAAAG,IAAA;YACAuB,MAAA,OAAAC;UACA;QACA;QAEA,MAAAC,GAAA,SAAA9B,mBAAA,CAAAwB,OAAA;;QAEA,IAAAM,GAAA,CAAA7B,IAAA,IAAA6B,GAAA,CAAA7B,IAAA,CAAA8B,OAAA;UACA,KAAAX,QAAA,CAAAW,OAAA;UACA,KAAAT,OAAA,CAAAN,IAAA;QACA;UACA,KAAAI,QAAA,CAAAY,KAAA,CAAAF,GAAA,CAAA7B,IAAA,CAAAgC,OAAA;QACA;MACA,SAAAC,GAAA;QACAC,OAAA,CAAAH,KAAA,YAAAE,GAAA,CAAAE,QAAA,GAAAF,GAAA,CAAAE,QAAA,CAAAnC,IAAA,GAAAiC,GAAA;QACA,KAAAd,QAAA,CAAAY,KAAA,CACAE,GAAA,CAAAE,QAAA,EAAAnC,IAAA,EAAAgC,OAAA,iBACA;MACA;QACA,KAAA1B,UAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}