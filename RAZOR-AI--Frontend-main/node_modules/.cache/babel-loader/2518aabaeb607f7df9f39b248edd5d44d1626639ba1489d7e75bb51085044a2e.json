{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  props: ['id'],\n  data() {\n    return {\n      // 帖子数据\n      post: {\n        authorAvatar: 'https://picsum.photos/id/1005/48/48',\n        authorName: '张小明',\n        isAuthor: true,\n        postTime: '2小时前',\n        category: '订阅专栏',\n        title: '如何高效管理订阅内容？分享几个实用技巧',\n        tags: ['订阅管理', '效率工具', '信息整理'],\n        likes: 128,\n        comments: 32,\n        bookmarks: 45,\n        views: '5.2k'\n      },\n      // 当前用户信息\n      currentUser: {\n        avatar: 'https://picsum.photos/id/1000/40/40',\n        name: '王小红' // 用户自己的名字\n      },\n      // 评论数据\n      comments: [{\n        avatar: 'https://picsum.photos/id/1012/40/40',\n        author: '李华',\n        time: '1小时前',\n        content: '非常实用的方法！',\n        likes: 15,\n        liked: false,\n        isMine: false,\n        replies: [{\n          avatar: 'https://picsum.photos/id/1015/40/40',\n          author: '小王',\n          time: '50分钟前',\n          content: '我也觉得很棒！',\n          likes: 3,\n          liked: false,\n          replyTo: null,\n          isMine: false\n        }, {\n          avatar: 'https://picsum.photos/id/1020/40/40',\n          author: '张三',\n          time: '45分钟前',\n          content: '同意，特别是Feedly这个工具推荐得很好',\n          likes: 5,\n          liked: false,\n          replyTo: '李华',\n          isMine: false\n        }, {\n          avatar: 'https://picsum.photos/id/1000/40/40',\n          author: '王小红',\n          time: '40分钟前',\n          content: '请问有具体的使用教程吗？',\n          likes: 2,\n          liked: false,\n          replyTo: '张三',\n          isMine: true\n        }],\n        showReplyBox: false,\n        replyText: ''\n      }, {\n        avatar: 'https://picsum.photos/id/1025/40/40',\n        author: '科技前沿',\n        time: '1.5小时前',\n        content: '请问你是如何处理不同平台的订阅内容同步问题的？比如有些专栏只在特定平台发布。',\n        likes: 8,\n        liked: false,\n        isMine: false,\n        replies: [],\n        showReplyBox: false,\n        replyText: ''\n      }, {\n        avatar: 'https://picsum.photos/id/1000/40/40',\n        author: '王小红',\n        time: '2小时前',\n        content: 'Notion确实是个好工具，但对于新手来说可能有点复杂。有没有更简单的替代方案推荐？',\n        likes: 5,\n        liked: false,\n        isMine: true,\n        // 这是用户自己的评论\n        replies: [],\n        showReplyBox: false,\n        replyText: ''\n      }],\n      // 新评论\n      newComment: '',\n      // 删除确认弹窗状态\n      showDeleteModal: false,\n      deleteTarget: null // 存储要删除的目标信息 {type: 'comment'|'reply', commentIndex: number, replyIndex?: number}\n    };\n  },\n  watch: {\n    // 监听路由参数变化，重新加载帖子数据\n    $route(to, from) {\n      if (to.params.id && to.params.id !== from.params.id) {\n        this.loadPostData(to.params.id);\n      }\n    }\n  },\n  created() {\n    console.log('PostDetail组件被创建');\n    // 获取路由参数中的帖子ID\n    const postId = this.$route.params.id || this.id;\n    console.log('获取到的帖子ID:', postId);\n    // 加载对应ID的帖子数据\n    if (postId) {\n      this.loadPostData(postId);\n    } else {\n      console.warn('没有获取到有效的帖子ID');\n    }\n  },\n  mounted() {\n    // 这里可以添加根据this.id加载帖子详情的逻辑\n    if (this.id) {\n      console.log('加载帖子ID:', this.id);\n    }\n  },\n  methods: {\n    // 点赞功能\n    likePost() {\n      this.post.likes++;\n    },\n    // 收藏功能\n    bookmarkPost() {\n      this.post.bookmarks++;\n    },\n    // 分享功能\n    sharePost() {\n      console.log(`分享帖子: ${this.post.title}`);\n      alert('分享功能已触发');\n    },\n    // 关注作者\n    followAuthor() {\n      console.log(`关注作者: ${this.post.authorName}`);\n      alert(`已关注 ${this.post.authorName}`);\n    },\n    // 发布评论\n    publishComment() {\n      if (!this.newComment.trim()) return;\n      this.comments.unshift({\n        avatar: this.currentUser.avatar,\n        author: this.currentUser.name,\n        time: '刚刚',\n        content: this.newComment,\n        likes: 0,\n        liked: false,\n        isMine: true,\n        // 新发布的评论标记为用户自己的\n        replies: [],\n        showReplyBox: false,\n        replyText: ''\n      });\n      this.post.comments++;\n      this.newComment = '';\n    },\n    // 加载更多评论\n    loadMoreComments() {\n      console.log('加载更多评论');\n      // 模拟加载更多评论\n      this.comments.push({\n        avatar: 'https://picsum.photos/id/1074/40/40',\n        author: '效率控',\n        time: '昨天',\n        content: '每月总结的方法很棒，我之前试过但没坚持下来，看来需要找个 accountability partner 一起坚持。',\n        likes: 3,\n        replies: [],\n        showReplyBox: false,\n        replyText: ''\n      }, {\n        avatar: 'https://picsum.photos/id/1066/40/40',\n        author: '信息过载患者',\n        time: '昨天',\n        content: '感谢分享！我已经把Feedly和Pocket都下载好了，准备开始整理我的订阅列表。',\n        likes: 2,\n        replies: [],\n        showReplyBox: false,\n        replyText: ''\n      });\n    },\n    likeComment(index) {\n      const comment = this.comments[index];\n      if (comment.liked) {\n        comment.likes = Math.max(0, comment.likes - 1);\n        comment.liked = false;\n      } else {\n        comment.likes++;\n        comment.liked = true;\n      }\n    },\n    toggleReplyBox(index) {\n      const comment = this.comments[index];\n      comment.showReplyBox = !comment.showReplyBox;\n      // 直接回复评论时，清除回复目标\n      if (comment.showReplyBox) {\n        comment.replyTarget = null;\n      }\n    },\n    replyToReply(commentIndex, replyToAuthor) {\n      // 直接在该评论下显示回复框，并预设回复目标\n      const comment = this.comments[commentIndex];\n      comment.showReplyBox = true;\n      comment.replyText = '';\n      comment.replyTarget = replyToAuthor; // 记录回复目标\n    },\n    publishReply(index) {\n      const comment = this.comments[index];\n      if (!comment.replyText.trim()) return;\n      const replyContent = comment.replyText;\n      const replyTo = comment.replyTarget || null;\n      comment.replies.push({\n        avatar: this.currentUser.avatar,\n        author: this.currentUser.name,\n        time: '刚刚',\n        content: replyContent,\n        likes: 0,\n        liked: false,\n        replyTo: replyTo,\n        isMine: true // 新发布的回复标记为用户自己的\n      });\n      comment.replyText = '';\n      comment.showReplyBox = false;\n      comment.replyTarget = null; // 清除回复目标\n    },\n    likeReply(commentIndex, replyIndex) {\n      const reply = this.comments[commentIndex].replies[replyIndex];\n      if (reply.liked) {\n        reply.likes = Math.max(0, reply.likes - 1);\n        reply.liked = false;\n      } else {\n        reply.likes++;\n        reply.liked = true;\n      }\n    },\n    deleteComment(index) {\n      this.deleteTarget = {\n        type: 'comment',\n        commentIndex: index\n      };\n      this.showDeleteModal = true;\n    },\n    deleteReply(commentIndex, replyIndex) {\n      this.deleteTarget = {\n        type: 'reply',\n        commentIndex: commentIndex,\n        replyIndex: replyIndex\n      };\n      this.showDeleteModal = true;\n    },\n    confirmDelete() {\n      if (this.deleteTarget?.type === 'comment') {\n        this.comments.splice(this.deleteTarget.commentIndex, 1);\n        this.post.comments--;\n      } else if (this.deleteTarget?.type === 'reply') {\n        this.comments[this.deleteTarget.commentIndex].replies.splice(this.deleteTarget.replyIndex, 1);\n      }\n      this.cancelDelete();\n    },\n    cancelDelete() {\n      this.showDeleteModal = false;\n      this.deleteTarget = null;\n    },\n    // 根据帖子ID加载帖子数据\n    loadPostData(postId) {\n      // 根据postId获取帖子详情数据\n      console.log('加载帖子数据，ID:', postId);\n\n      // 模拟帖子数据库\n      const postsData = {\n        1: {\n          authorAvatar: 'https://picsum.photos/id/1005/48/48',\n          authorName: '张小明',\n          isAuthor: true,\n          postTime: '2小时前',\n          category: '订阅专栏',\n          title: '如何高效管理订阅内容？分享几个实用技巧',\n          tags: ['订阅管理', '效率工具', '信息整理'],\n          likes: 128,\n          comments: 32,\n          bookmarks: 45,\n          views: '5.2k'\n        },\n        2: {\n          authorAvatar: 'https://picsum.photos/id/1012/48/48',\n          authorName: '李华',\n          isAuthor: true,\n          postTime: '昨天',\n          category: '专栏推荐',\n          title: '2025年值得订阅的10个优质专栏推荐',\n          tags: ['专栏推荐', '2025精选', '内容推荐'],\n          likes: 356,\n          comments: 89,\n          bookmarks: 210,\n          views: '12.8k'\n        },\n        3: {\n          authorAvatar: 'https://picsum.photos/id/1025/48/48',\n          authorName: '科技前沿',\n          isAuthor: false,\n          postTime: '3天前',\n          category: '技术讨论',\n          title: 'AI辅助编程工具对比：GitHub Copilot vs. RAZOR-AI',\n          tags: ['AI编程', '工具对比', '编程技巧'],\n          likes: 247,\n          comments: 63,\n          bookmarks: 178,\n          views: '8.5k'\n        }\n      };\n\n      // 如果找到对应的帖子数据，则更新当前帖子\n      if (postsData[postId]) {\n        this.post = {\n          ...this.post,\n          ...postsData[postId]\n        };\n        console.log('帖子数据加载成功:', this.post);\n      } else {\n        console.warn('未找到对应ID的帖子:', postId);\n        // 设置一个默认的错误帖子\n        this.post = {\n          ...this.post,\n          title: `帖子未找到 (ID: ${postId})`,\n          authorName: '未知作者',\n          authorAvatar: 'https://picsum.photos/id/1000/48/48',\n          postTime: '未知时间',\n          category: '未知分类',\n          tags: ['错误'],\n          likes: 0,\n          comments: 0,\n          bookmarks: 0,\n          views: '0'\n        };\n      }\n    }\n  }\n};","map":{"version":3,"names":["props","data","post","authorAvatar","authorName","isAuthor","postTime","category","title","tags","likes","comments","bookmarks","views","currentUser","avatar","name","author","time","content","liked","isMine","replies","replyTo","showReplyBox","replyText","newComment","showDeleteModal","deleteTarget","watch","$route","to","from","params","id","loadPostData","created","console","log","postId","warn","mounted","methods","likePost","bookmarkPost","sharePost","alert","followAuthor","publishComment","trim","unshift","loadMoreComments","push","likeComment","index","comment","Math","max","toggleReplyBox","replyTarget","replyToReply","commentIndex","replyToAuthor","publishReply","replyContent","likeReply","replyIndex","reply","deleteComment","type","deleteReply","confirmDelete","splice","cancelDelete","postsData"],"sources":["src/views/PostDetail.vue"],"sourcesContent":["<template>\n  <div class=\"community-container\">\n    <!-- 调试信息 -->\n    <div style=\"padding: 20px; background: #f0f0f0; margin: 10px\">\n      <h3>调试信息:</h3>\n      <p>路由参数ID: {{ $route.params.id }}</p>\n      <p>Props ID: {{ id }}</p>\n      <p>帖子标题: {{ post.title || '未加载' }}</p>\n      <p>组件状态: {{ post.title ? '已加载' : '未加载' }}</p>\n    </div>\n\n    <!-- 加载状态 -->\n    <div\n      v-if=\"!post.title\"\n      style=\"padding: 20px; text-align: center; color: #666\"\n    >\n      正在加载帖子详情... (ID: {{ $route.params.id || id || '未知' }})\n    </div>\n\n    <!-- 主内容区 -->\n    <main class=\"main-content container\">\n      <div class=\"content-layout\">\n        <!-- 帖子详情 -->\n        <section class=\"post-detail\">\n          <!-- 帖子头部信息 -->\n          <div class=\"post-header\">\n            <div class=\"post-author\">\n              <img\n                :src=\"post.authorAvatar\"\n                alt=\"用户头像\"\n                class=\"author-avatar\"\n              />\n              <div class=\"author-info\">\n                <div class=\"author-name-wrap\">\n                  <p class=\"author-name\">{{ post.authorName }}</p>\n                  <span v-if=\"post.isAuthor\" class=\"author-badge\"\n                    >专栏作者</span\n                  >\n                </div>\n                <p class=\"post-time\">\n                  {{ post.postTime }} · 发布于 {{ post.category }}\n                </p>\n              </div>\n            </div>\n            <button class=\"more-btn\" aria-label=\"更多操作\">\n              <i class=\"fa fa-ellipsis-h\"></i>\n            </button>\n          </div>\n\n          <!-- 帖子标题 -->\n          <h1 class=\"post-title\">{{ post.title }}</h1>\n\n          <!-- 帖子标签 -->\n          <div class=\"post-tags\">\n            <span class=\"tag-item\" v-for=\"(tag, i) in post.tags\" :key=\"i\">{{\n              tag\n            }}</span>\n          </div>\n\n          <!-- 帖子内容 -->\n          <div class=\"post-content\">\n            <div class=\"content-section\">\n              <p>\n                随着订阅经济的兴起，我们每天都会面对大量的订阅内容 -\n                从技术博客到行业资讯，从专栏文章到视频课程。根据我的观察，一个活跃的学习者平均会订阅5-10个不同类型的内容源，但大多数人都面临着\"订阅了却没时间看\"的困境。\n              </p>\n              <p>\n                本文将分享我经过3年实践总结的订阅内容管理方法，帮助你解决以下问题：\n              </p>\n              <ul>\n                <li>如何筛选真正有价值的订阅源</li>\n                <li>建立高效的内容消费节奏</li>\n                <li>利用工具提高信息处理效率</li>\n                <li>将碎片化信息转化为系统化知识</li>\n              </ul>\n            </div>\n\n            <div class=\"content-section\">\n              <h3>一、订阅源的精简与分类</h3>\n              <p>\n                我的经验是，优质的信息源不在于多而在于精。我会每季度对订阅源进行一次全面梳理，遵循\"80/20原则\"\n                - 80%的价值来自20%的订阅源。\n              </p>\n              <p>具体做法是建立三级分类体系：</p>\n              <ol>\n                <li>核心订阅（每日必看）：不超过5个</li>\n                <li>重要订阅（每周浏览）：10-15个</li>\n                <li>兴趣订阅（月度回顾）：不限数量，但需要定期清理</li>\n              </ol>\n            </div>\n\n            <div class=\"content-section\">\n              <h3>二、高效阅读工具推荐</h3>\n              <p>经过多年试用，我筛选出几款提高阅读效率的工具：</p>\n              <ul>\n                <li><strong>Feedly</strong>：聚合各类订阅源，支持标签和过滤</li>\n                <li><strong> Pocket</strong>：稍后阅读，支持跨设备同步</li>\n                <li>\n                  <strong>Notion</strong>：建立个人知识库，整理有价值的内容\n                </li>\n              </ul>\n              <p>\n                这些工具的组合使用可以形成\"收集-筛选-消化-归档\"的完整流程，大幅提高信息处理效率。\n              </p>\n            </div>\n\n            <div class=\"content-section\">\n              <h3>三、建立个人知识管理系统</h3>\n              <p>订阅内容的最终目的是转化为自己的知识，我的方法是：</p>\n              <p>\n                1. 阅读时使用高亮和批注工具记录即时想法<br />\n                2. 每周日花1小时整理本周有价值的内容<br />\n                3. 每月进行一次知识关联，建立内容之间的联系<br />\n                4. 每季度写一篇学习总结，检验知识吸收情况\n              </p>\n              <p>\n                这个过程虽然需要投入时间，但能让订阅的内容真正发挥价值，而不是成为数字垃圾。\n              </p>\n            </div>\n          </div>\n\n          <!-- 帖子底部操作 -->\n          <div class=\"post-actions\">\n            <div class=\"action-group\">\n              <button class=\"action-btn\" @click=\"likePost\">\n                <i class=\"fa fa-thumbs-o-up mr-1.5\"></i>\n                <span>{{ post.likes }}</span>\n              </button>\n              <button class=\"action-btn\">\n                <i class=\"fa fa-comment-o mr-1.5\"></i>\n                <span>{{ post.comments }}</span>\n              </button>\n              <button class=\"action-btn\" @click=\"bookmarkPost\">\n                <i class=\"fa fa-bookmark-o mr-1.5\"></i>\n                <span>{{ post.bookmarks }}</span>\n              </button>\n            </div>\n            <div class=\"stats-group\">\n              <span class=\"post-views\">阅读 {{ post.views }}</span>\n              <button class=\"share-btn\" @click=\"sharePost\">\n                <i class=\"fa fa-share-alt mr-1.5\"></i>\n                <span>分享</span>\n              </button>\n            </div>\n          </div>\n\n          <!-- 作者信息卡片 -->\n          <div class=\"author-card\">\n            <img\n              :src=\"post.authorAvatar\"\n              alt=\"作者头像\"\n              class=\"author-card-avatar\"\n            />\n            <div class=\"author-card-info\">\n              <div class=\"author-card-name\">{{ post.authorName }}</div>\n              <div class=\"author-card-bio\">\n                内容策略师，专注于信息管理与知识体系构建，曾任职于多家知名科技公司\n              </div>\n              <button class=\"follow-btn\" @click=\"followAuthor\">\n                <i class=\"fa fa-plus mr-1\"></i> 关注作者\n              </button>\n            </div>\n          </div>\n\n          <!-- 评论区 -->\n          <div class=\"comments-section\">\n            <h3 class=\"comments-title\">评论 ({{ post.comments }})</h3>\n\n            <!-- 评论输入框 -->\n            <div class=\"comment-input\">\n              <textarea\n                placeholder=\"分享你的想法...\"\n                class=\"comment-textarea\"\n                v-model=\"newComment\"\n              ></textarea>\n              <button class=\"publish-comment\" @click=\"publishComment\">\n                发布评论\n              </button>\n            </div>\n\n            <!-- 评论列表 -->\n            <div class=\"comments-list\">\n              <div\n                class=\"comment-item\"\n                v-for=\"(comment, index) in comments\"\n                :key=\"index\"\n              >\n                <img\n                  :src=\"comment.avatar\"\n                  alt=\"评论者头像\"\n                  class=\"comment-avatar\"\n                />\n                <div class=\"comment-content\">\n                  <div class=\"comment-header\">\n                    <span class=\"comment-author\">{{ comment.author }}</span>\n                    <span class=\"comment-time\">{{ comment.time }}</span>\n                  </div>\n                  <div class=\"comment-text\">{{ comment.content }}</div>\n                  <div class=\"comment-actions\">\n                    <button\n                      class=\"comment-action-btn bg-razor-lightBlue text-razor-blue px-3 py-1 rounded-full hover:bg-razor-blue hover:text-white transition\"\n                      @click=\"likeComment(index)\"\n                    >\n                      <img\n                        :src=\"\n                          require(\n                            '@/assets/images/community/' +\n                              (comment.liked ? 'like.png' : 'like_empty.png')\n                          )\n                        \"\n                        alt=\"点赞图标\"\n                        class=\"like-icon mr-1\"\n                        style=\"width: 20px; height: 20px\"\n                      />\n                      {{ comment.likes }}\n                    </button>\n                    <button\n                      class=\"comment-action-btn bg-razor-lightBlue text-razor-blue px-3 py-1 rounded-full hover:bg-razor-blue hover:text-white transition\"\n                      @click=\"toggleReplyBox(index)\"\n                    >\n                      回复\n                    </button>\n                    <button\n                      v-if=\"comment.isMine\"\n                      class=\"comment-action-btn delete-comment-btn\"\n                      @click=\"deleteComment(index)\"\n                    >\n                      删除\n                    </button>\n                  </div>\n                  <!-- 回复输入框 -->\n                  <div v-if=\"comment.showReplyBox\" class=\"reply-input\">\n                    <textarea\n                      :placeholder=\"\n                        comment.replyTarget\n                          ? `回复 @${comment.replyTarget}...`\n                          : `回复 ${comment.author}...`\n                      \"\n                      class=\"reply-textarea\"\n                      v-model=\"comment.replyText\"\n                    ></textarea>\n                    <button class=\"publish-reply\" @click=\"publishReply(index)\">\n                      发布回复\n                    </button>\n                  </div>\n                  <!-- 回复列表 -->\n                  <div class=\"reply-list\">\n                    <div\n                      class=\"reply-item\"\n                      v-for=\"(reply, replyIndex) in comment.replies\"\n                      :key=\"replyIndex\"\n                    >\n                      <img\n                        :src=\"reply.avatar\"\n                        alt=\"回复者头像\"\n                        class=\"reply-avatar\"\n                      />\n                      <div class=\"reply-content\">\n                        <div class=\"reply-header\">\n                          <span class=\"comment-author\">{{ reply.author }}</span>\n                          <span class=\"comment-time\">{{ reply.time }}</span>\n                        </div>\n                        <div class=\"reply-text\">\n                          <span v-if=\"reply.replyTo\" class=\"reply-mention\"\n                            >@{{ reply.replyTo }} </span\n                          >{{ reply.content }}\n                        </div>\n                        <div class=\"comment-actions\">\n                          <button\n                            class=\"comment-action-btn bg-razor-lightBlue text-razor-blue px-3 py-1 rounded-full hover:bg-razor-blue hover:text-white transition\"\n                            @click=\"likeReply(index, replyIndex)\"\n                          >\n                            <img\n                              :src=\"\n                                require(\n                                  '@/assets/images/community/' +\n                                    (reply.liked\n                                      ? 'like.png'\n                                      : 'like_empty.png')\n                                )\n                              \"\n                              alt=\"点赞图标\"\n                              class=\"like-icon mr-1\"\n                              style=\"width: 20px; height: 20px\"\n                            />\n                            {{ reply.likes }}\n                          </button>\n                          <button\n                            class=\"comment-action-btn bg-razor-lightBlue text-razor-blue px-3 py-1 rounded-full hover:bg-razor-blue hover:text-white transition\"\n                            @click=\"replyToReply(index, reply.author)\"\n                          >\n                            回复\n                          </button>\n                          <button\n                            v-if=\"reply.isMine\"\n                            class=\"comment-action-btn delete-comment-btn\"\n                            @click=\"deleteReply(index, replyIndex)\"\n                          >\n                            删除\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- 加载更多评论 -->\n            <div class=\"load-more-comments\">\n              <button class=\"secondary-btn\" @click=\"loadMoreComments\">\n                查看更多评论\n              </button>\n            </div>\n          </div>\n        </section>\n      </div>\n    </main>\n\n    <!-- 删除确认弹窗 -->\n    <div\n      v-if=\"showDeleteModal\"\n      class=\"delete-modal-overlay\"\n      @click=\"cancelDelete\"\n    >\n      <div class=\"delete-modal\" @click.stop>\n        <div class=\"delete-modal-header\">\n          <h3 class=\"delete-modal-title\">确认删除</h3>\n        </div>\n        <div class=\"delete-modal-body\">\n          <p>\n            {{\n              deleteTarget?.type === 'comment'\n                ? '确定要删除这条评论吗？'\n                : '确定要删除这条回复吗？'\n            }}\n          </p>\n          <p class=\"delete-modal-warning\">此操作无法撤销</p>\n        </div>\n        <div class=\"delete-modal-footer\">\n          <button class=\"cancel-btn\" @click=\"cancelDelete\">取消</button>\n          <button class=\"confirm-delete-btn\" @click=\"confirmDelete\">\n            删除\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: ['id'],\n  data() {\n    return {\n      // 帖子数据\n      post: {\n        authorAvatar: 'https://picsum.photos/id/1005/48/48',\n        authorName: '张小明',\n        isAuthor: true,\n        postTime: '2小时前',\n        category: '订阅专栏',\n        title: '如何高效管理订阅内容？分享几个实用技巧',\n        tags: ['订阅管理', '效率工具', '信息整理'],\n        likes: 128,\n        comments: 32,\n        bookmarks: 45,\n        views: '5.2k',\n      },\n\n      // 当前用户信息\n      currentUser: {\n        avatar: 'https://picsum.photos/id/1000/40/40',\n        name: '王小红', // 用户自己的名字\n      },\n\n      // 评论数据\n      comments: [\n        {\n          avatar: 'https://picsum.photos/id/1012/40/40',\n          author: '李华',\n          time: '1小时前',\n          content: '非常实用的方法！',\n          likes: 15,\n          liked: false,\n          isMine: false,\n          replies: [\n            {\n              avatar: 'https://picsum.photos/id/1015/40/40',\n              author: '小王',\n              time: '50分钟前',\n              content: '我也觉得很棒！',\n              likes: 3,\n              liked: false,\n              replyTo: null,\n              isMine: false,\n            },\n            {\n              avatar: 'https://picsum.photos/id/1020/40/40',\n              author: '张三',\n              time: '45分钟前',\n              content: '同意，特别是Feedly这个工具推荐得很好',\n              likes: 5,\n              liked: false,\n              replyTo: '李华',\n              isMine: false,\n            },\n            {\n              avatar: 'https://picsum.photos/id/1000/40/40',\n              author: '王小红',\n              time: '40分钟前',\n              content: '请问有具体的使用教程吗？',\n              likes: 2,\n              liked: false,\n              replyTo: '张三',\n              isMine: true,\n            },\n          ],\n          showReplyBox: false,\n          replyText: '',\n        },\n        {\n          avatar: 'https://picsum.photos/id/1025/40/40',\n          author: '科技前沿',\n          time: '1.5小时前',\n          content:\n            '请问你是如何处理不同平台的订阅内容同步问题的？比如有些专栏只在特定平台发布。',\n          likes: 8,\n          liked: false,\n          isMine: false,\n          replies: [],\n          showReplyBox: false,\n          replyText: '',\n        },\n        {\n          avatar: 'https://picsum.photos/id/1000/40/40',\n          author: '王小红',\n          time: '2小时前',\n          content:\n            'Notion确实是个好工具，但对于新手来说可能有点复杂。有没有更简单的替代方案推荐？',\n          likes: 5,\n          liked: false,\n          isMine: true, // 这是用户自己的评论\n          replies: [],\n          showReplyBox: false,\n          replyText: '',\n        },\n      ],\n\n      // 新评论\n      newComment: '',\n\n      // 删除确认弹窗状态\n      showDeleteModal: false,\n      deleteTarget: null, // 存储要删除的目标信息 {type: 'comment'|'reply', commentIndex: number, replyIndex?: number}\n    };\n  },\n  watch: {\n    // 监听路由参数变化，重新加载帖子数据\n    $route(to, from) {\n      if (to.params.id && to.params.id !== from.params.id) {\n        this.loadPostData(to.params.id);\n      }\n    },\n  },\n  created() {\n    console.log('PostDetail组件被创建');\n    // 获取路由参数中的帖子ID\n    const postId = this.$route.params.id || this.id;\n    console.log('获取到的帖子ID:', postId);\n    // 加载对应ID的帖子数据\n    if (postId) {\n      this.loadPostData(postId);\n    } else {\n      console.warn('没有获取到有效的帖子ID');\n    }\n  },\n  mounted() {\n    // 这里可以添加根据this.id加载帖子详情的逻辑\n    if (this.id) {\n      console.log('加载帖子ID:', this.id);\n    }\n  },\n  methods: {\n    // 点赞功能\n    likePost() {\n      this.post.likes++;\n    },\n\n    // 收藏功能\n    bookmarkPost() {\n      this.post.bookmarks++;\n    },\n\n    // 分享功能\n    sharePost() {\n      console.log(`分享帖子: ${this.post.title}`);\n      alert('分享功能已触发');\n    },\n\n    // 关注作者\n    followAuthor() {\n      console.log(`关注作者: ${this.post.authorName}`);\n      alert(`已关注 ${this.post.authorName}`);\n    },\n\n    // 发布评论\n    publishComment() {\n      if (!this.newComment.trim()) return;\n\n      this.comments.unshift({\n        avatar: this.currentUser.avatar,\n        author: this.currentUser.name,\n        time: '刚刚',\n        content: this.newComment,\n        likes: 0,\n        liked: false,\n        isMine: true, // 新发布的评论标记为用户自己的\n        replies: [],\n        showReplyBox: false,\n        replyText: '',\n      });\n\n      this.post.comments++;\n      this.newComment = '';\n    },\n\n    // 加载更多评论\n    loadMoreComments() {\n      console.log('加载更多评论');\n      // 模拟加载更多评论\n      this.comments.push(\n        {\n          avatar: 'https://picsum.photos/id/1074/40/40',\n          author: '效率控',\n          time: '昨天',\n          content:\n            '每月总结的方法很棒，我之前试过但没坚持下来，看来需要找个 accountability partner 一起坚持。',\n          likes: 3,\n          replies: [],\n          showReplyBox: false,\n          replyText: '',\n        },\n        {\n          avatar: 'https://picsum.photos/id/1066/40/40',\n          author: '信息过载患者',\n          time: '昨天',\n          content:\n            '感谢分享！我已经把Feedly和Pocket都下载好了，准备开始整理我的订阅列表。',\n          likes: 2,\n          replies: [],\n          showReplyBox: false,\n          replyText: '',\n        }\n      );\n    },\n    likeComment(index) {\n      const comment = this.comments[index];\n      if (comment.liked) {\n        comment.likes = Math.max(0, comment.likes - 1);\n        comment.liked = false;\n      } else {\n        comment.likes++;\n        comment.liked = true;\n      }\n    },\n    toggleReplyBox(index) {\n      const comment = this.comments[index];\n      comment.showReplyBox = !comment.showReplyBox;\n      // 直接回复评论时，清除回复目标\n      if (comment.showReplyBox) {\n        comment.replyTarget = null;\n      }\n    },\n    replyToReply(commentIndex, replyToAuthor) {\n      // 直接在该评论下显示回复框，并预设回复目标\n      const comment = this.comments[commentIndex];\n      comment.showReplyBox = true;\n      comment.replyText = '';\n      comment.replyTarget = replyToAuthor; // 记录回复目标\n    },\n    publishReply(index) {\n      const comment = this.comments[index];\n      if (!comment.replyText.trim()) return;\n\n      const replyContent = comment.replyText;\n      const replyTo = comment.replyTarget || null;\n\n      comment.replies.push({\n        avatar: this.currentUser.avatar,\n        author: this.currentUser.name,\n        time: '刚刚',\n        content: replyContent,\n        likes: 0,\n        liked: false,\n        replyTo: replyTo,\n        isMine: true, // 新发布的回复标记为用户自己的\n      });\n\n      comment.replyText = '';\n      comment.showReplyBox = false;\n      comment.replyTarget = null; // 清除回复目标\n    },\n    likeReply(commentIndex, replyIndex) {\n      const reply = this.comments[commentIndex].replies[replyIndex];\n      if (reply.liked) {\n        reply.likes = Math.max(0, reply.likes - 1);\n        reply.liked = false;\n      } else {\n        reply.likes++;\n        reply.liked = true;\n      }\n    },\n    deleteComment(index) {\n      this.deleteTarget = { type: 'comment', commentIndex: index };\n      this.showDeleteModal = true;\n    },\n    deleteReply(commentIndex, replyIndex) {\n      this.deleteTarget = {\n        type: 'reply',\n        commentIndex: commentIndex,\n        replyIndex: replyIndex,\n      };\n      this.showDeleteModal = true;\n    },\n    confirmDelete() {\n      if (this.deleteTarget?.type === 'comment') {\n        this.comments.splice(this.deleteTarget.commentIndex, 1);\n        this.post.comments--;\n      } else if (this.deleteTarget?.type === 'reply') {\n        this.comments[this.deleteTarget.commentIndex].replies.splice(\n          this.deleteTarget.replyIndex,\n          1\n        );\n      }\n      this.cancelDelete();\n    },\n    cancelDelete() {\n      this.showDeleteModal = false;\n      this.deleteTarget = null;\n    },\n\n    // 根据帖子ID加载帖子数据\n    loadPostData(postId) {\n      // 根据postId获取帖子详情数据\n      console.log('加载帖子数据，ID:', postId);\n\n      // 模拟帖子数据库\n      const postsData = {\n        1: {\n          authorAvatar: 'https://picsum.photos/id/1005/48/48',\n          authorName: '张小明',\n          isAuthor: true,\n          postTime: '2小时前',\n          category: '订阅专栏',\n          title: '如何高效管理订阅内容？分享几个实用技巧',\n          tags: ['订阅管理', '效率工具', '信息整理'],\n          likes: 128,\n          comments: 32,\n          bookmarks: 45,\n          views: '5.2k',\n        },\n        2: {\n          authorAvatar: 'https://picsum.photos/id/1012/48/48',\n          authorName: '李华',\n          isAuthor: true,\n          postTime: '昨天',\n          category: '专栏推荐',\n          title: '2025年值得订阅的10个优质专栏推荐',\n          tags: ['专栏推荐', '2025精选', '内容推荐'],\n          likes: 356,\n          comments: 89,\n          bookmarks: 210,\n          views: '12.8k',\n        },\n        3: {\n          authorAvatar: 'https://picsum.photos/id/1025/48/48',\n          authorName: '科技前沿',\n          isAuthor: false,\n          postTime: '3天前',\n          category: '技术讨论',\n          title: 'AI辅助编程工具对比：GitHub Copilot vs. RAZOR-AI',\n          tags: ['AI编程', '工具对比', '编程技巧'],\n          likes: 247,\n          comments: 63,\n          bookmarks: 178,\n          views: '8.5k',\n        },\n      };\n\n      // 如果找到对应的帖子数据，则更新当前帖子\n      if (postsData[postId]) {\n        this.post = { ...this.post, ...postsData[postId] };\n        console.log('帖子数据加载成功:', this.post);\n      } else {\n        console.warn('未找到对应ID的帖子:', postId);\n        // 设置一个默认的错误帖子\n        this.post = {\n          ...this.post,\n          title: `帖子未找到 (ID: ${postId})`,\n          authorName: '未知作者',\n          authorAvatar: 'https://picsum.photos/id/1000/48/48',\n          postTime: '未知时间',\n          category: '未知分类',\n          tags: ['错误'],\n          likes: 0,\n          comments: 0,\n          bookmarks: 0,\n          views: '0',\n        };\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* 基础样式继承自社区页面 */\n.community-container {\n  background-color: #f8fafc;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n  color: #333;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.container {\n  max-width: 900px;\n  margin: 0 auto;\n  padding: 0 20px;\n}\n\n.text-primary {\n  color: #0f88eb;\n}\n\n/* 主内容区 */\n.main-content {\n  padding: 25px 0;\n  flex: 1;\n}\n\n.content-layout {\n  display: flex;\n  gap: 24px;\n}\n\n.post-detail {\n  flex: 1;\n  background: #fff;\n  border-radius: 8px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n  padding: 30px;\n}\n\n/* 帖子头部 */\n.post-header {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 24px;\n  align-items: center;\n}\n\n.post-author {\n  display: flex;\n  align-items: center;\n}\n\n.author-avatar {\n  width: 56px;\n  height: 56px;\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n.author-info {\n  margin-left: 16px;\n}\n\n.author-name-wrap {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.author-name {\n  font-weight: 600;\n  color: #1a1a1a;\n  font-size: 16px;\n}\n\n.author-badge {\n  font-size: 12px;\n  padding: 2px 8px;\n  border-radius: 12px;\n  background-color: rgba(15, 136, 235, 0.1);\n  color: #0f88eb;\n}\n\n.post-time {\n  color: #666;\n  margin-top: 4px;\n  font-size: 14px;\n}\n\n.more-btn {\n  background: transparent;\n  border: none;\n  color: #999;\n  cursor: pointer;\n  transition: color 0.2s ease;\n}\n\n.more-btn:hover {\n  color: #333;\n}\n\n/* 帖子标题 */\n.post-title {\n  font-size: 24px;\n  font-weight: 700;\n  color: #1a1a1a;\n  margin-bottom: 16px;\n  line-height: 1.4;\n}\n\n/* 帖子标签 */\n.post-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid #f1f3f5;\n}\n\n.tag-item {\n  display: inline-block;\n  padding: 4px 12px;\n  border-radius: 16px;\n  font-size: 13px;\n  background-color: rgba(15, 136, 235, 0.1);\n  color: #0f88eb;\n}\n\n/* 帖子内容 */\n.post-content {\n  margin-bottom: 32px;\n  line-height: 1.8;\n  color: #333;\n}\n\n.content-section {\n  margin-bottom: 28px;\n}\n\n.post-content h3 {\n  font-size: 18px;\n  font-weight: 600;\n  margin: 20px 0 12px;\n  color: #1a1a1a;\n}\n\n.post-content p {\n  margin-bottom: 16px;\n}\n\n.post-content ul,\n.post-content ol {\n  margin: 0 0 16px 24px;\n  padding: 0;\n}\n\n.post-content ul {\n  list-style-type: disc;\n}\n\n.post-content ol {\n  list-style-type: decimal;\n}\n\n.post-content li {\n  margin-bottom: 8px;\n}\n\n.post-content strong {\n  font-weight: 600;\n}\n\n/* 帖子操作区 */\n.post-actions {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px 0;\n  border-top: 1px solid #f1f3f5;\n  border-bottom: 1px solid #f1f3f5;\n  margin-bottom: 32px;\n  color: #666;\n}\n\n.action-group {\n  display: flex;\n  gap: 30px;\n}\n\n.action-btn {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  background: transparent;\n  border: none;\n  color: #666;\n  cursor: pointer;\n  transition: color 0.2s ease;\n  font-size: 15px;\n  padding: 6px 0;\n}\n\n.action-btn:hover {\n  color: #0f88eb;\n}\n\n.stats-group {\n  display: flex;\n  align-items: center;\n  gap: 20px;\n}\n\n.post-views {\n  font-size: 14px;\n}\n\n.share-btn {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  background: transparent;\n  border: none;\n  color: #666;\n  cursor: pointer;\n  transition: color 0.2s ease;\n  font-size: 15px;\n  padding: 6px 0;\n}\n\n.share-btn:hover {\n  color: #0f88eb;\n}\n\n/* 作者信息卡片 */\n.author-card {\n  display: flex;\n  align-items: center;\n  background-color: #f8fafc;\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 32px;\n}\n\n.author-card-avatar {\n  width: 64px;\n  height: 64px;\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n.author-card-info {\n  margin-left: 16px;\n  flex: 1;\n}\n\n.author-card-name {\n  font-weight: 600;\n  font-size: 16px;\n  margin-bottom: 4px;\n}\n\n.author-card-bio {\n  color: #666;\n  font-size: 14px;\n  margin-bottom: 8px;\n}\n\n.follow-btn {\n  background-color: #0f88eb;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  padding: 6px 16px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n}\n\n.follow-btn:hover {\n  background-color: #0a6fca;\n}\n\n/* 评论区 */\n.comments-section {\n  margin-top: 40px;\n}\n\n.comments-title {\n  font-size: 18px;\n  font-weight: 600;\n  margin-bottom: 20px;\n  color: #1a1a1a;\n}\n\n.comment-input {\n  margin-bottom: 30px;\n}\n\n.comment-textarea {\n  width: 100%;\n  padding: 12px 16px;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  resize: vertical;\n  min-height: 100px;\n  font-family: inherit;\n  font-size: 14px;\n  transition: border-color 0.2s ease;\n}\n\n.comment-textarea:focus {\n  outline: none;\n  border-color: #0f88eb;\n}\n\n.publish-comment {\n  background-color: #0f88eb;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  padding: 8px 16px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n  margin-top: 12px;\n}\n\n.publish-comment:hover {\n  background-color: #0a6fca;\n}\n\n.comments-list {\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  margin-bottom: 30px;\n}\n\n.comment-item {\n  display: flex;\n  gap: 12px;\n}\n\n.comment-avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n.comment-content {\n  flex: 1;\n}\n\n.comment-header {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 6px;\n}\n\n.comment-author {\n  font-weight: 500;\n  font-size: 14px;\n}\n\n.comment-time {\n  color: #999;\n  font-size: 12px;\n}\n\n.comment-text {\n  color: #333;\n  font-size: 14px;\n  line-height: 1.6;\n  margin-bottom: 8px;\n}\n\n.comment-actions {\n  display: flex;\n  gap: 16px;\n}\n\n.comment-action-btn {\n  background: transparent;\n  border: none;\n  color: #999;\n  cursor: pointer;\n  transition: color 0.2s ease;\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n}\n\n.comment-action-btn:hover {\n  color: #0f88eb;\n}\n\n.load-more-comments {\n  text-align: center;\n  margin-top: 16px;\n}\n\n.secondary-btn {\n  background-color: #f8f9fa;\n  color: #495057;\n  padding: 8px 16px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  border: none;\n}\n\n.secondary-btn:hover {\n  background-color: #e9ecef;\n}\n\n/* 回复输入框样式 */\n.reply-input {\n  margin-top: 10px;\n}\n.reply-textarea {\n  width: 100%;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  padding: 5px;\n  margin-bottom: 5px;\n}\n.publish-reply {\n  background-color: #0f88eb;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n/* 回复列表样式 */\n.reply-list {\n  margin-top: 10px;\n  padding-left: 20px;\n}\n.reply-item {\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 10px;\n}\n.reply-avatar {\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  margin-right: 10px;\n}\n.reply-content {\n  flex: 1;\n}\n.reply-header {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 5px;\n}\n.reply-actions {\n  margin-top: 5px;\n}\n\n/* 嵌套回复样式 */\n.nested-reply-list {\n  margin-top: 10px;\n  padding-left: 30px;\n  border-left: 2px solid #f1f3f5;\n}\n.nested-reply-item {\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 10px;\n}\n.reply-content {\n  flex: 1;\n}\n.reply-header {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 5px;\n}\n.reply-actions {\n  margin-top: 5px;\n}\n\n/* @提及样式 */\n.reply-mention {\n  color: #0f88eb;\n  font-weight: 500;\n}\n\n/* 删除按钮样式 */\n.delete-comment-btn {\n  background-color: rgba(255, 255, 255, 0) !important;\n  color: #dc2626 !important;\n  padding: 4px 12px;\n  border-radius: 9999px;\n  font-size: 12px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  border: none;\n  display: flex;\n  align-items: center;\n}\n\n.delete-comment-btn:hover {\n  background-color: #dc2626 !important;\n  color: white !important;\n  transform: translateY(-1px);\n  box-shadow: 0 2px 4px rgba(239, 68, 68, 0.2);\n}\n\n/* 删除确认弹窗样式 */\n.delete-modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  animation: fadeIn 0.2s ease-out;\n}\n\n.delete-modal {\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\n  max-width: 400px;\n  width: 90%;\n  animation: slideIn 0.3s ease-out;\n}\n\n.delete-modal-header {\n  padding: 20px 20px 0;\n  border-bottom: 1px solid #f1f3f5;\n}\n\n.delete-modal-title {\n  font-size: 18px;\n  font-weight: 600;\n  color: #1a1a1a;\n  margin: 0 0 16px 0;\n}\n\n.delete-modal-body {\n  padding: 20px;\n}\n\n.delete-modal-body p {\n  margin: 0 0 8px 0;\n  color: #333;\n  line-height: 1.5;\n}\n\n.delete-modal-warning {\n  color: #dc2626;\n  font-size: 14px;\n}\n\n.delete-modal-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n  padding: 0 20px 20px;\n}\n\n.cancel-btn {\n  background-color: #f8f9fa;\n  color: #495057;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.cancel-btn:hover {\n  background-color: #e9ecef;\n}\n\n.confirm-delete-btn {\n  background-color: #dc2626;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.confirm-delete-btn:hover {\n  background-color: #b91c1c;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes slideIn {\n  from {\n    opacity: 0;\n    transform: translateY(-20px) scale(0.95);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n/* 响应式调整 */\n@media (max-width: 768px) {\n  .post-detail {\n    padding: 20px 16px;\n  }\n\n  .post-title {\n    font-size: 20px;\n  }\n\n  .action-group {\n    gap: 20px;\n  }\n\n  .action-btn,\n  .share-btn {\n    font-size: 14px;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}