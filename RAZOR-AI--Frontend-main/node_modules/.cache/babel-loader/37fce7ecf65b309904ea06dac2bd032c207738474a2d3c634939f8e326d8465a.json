{"ast":null,"code":"import { adminLogin as apiAdminLogin } from '../utils/api';\nimport Storage from '../utils/storage';\nconst state = {\n  adminToken: Storage.get('admin_token'),\n  adminId: Storage.get('admin_id'),\n  adminName: Storage.get('admin_name'),\n  isAdminLoggedIn: !!Storage.get('admin_token')\n};\nconst mutations = {\n  SET_ADMIN_INFO(state, {\n    token,\n    adminId,\n    adminName\n  }) {\n    state.adminToken = token;\n    state.adminId = adminId;\n    state.adminName = adminName;\n    state.isAdminLoggedIn = !!token;\n    const TTL = 1 * 24 * 60 * 60 * 1000; // 1天过期\n    Storage.set('admin_token', token, TTL);\n    Storage.set('admin_id', adminId, TTL);\n    Storage.set('admin_name', adminName, TTL);\n  },\n  ADMIN_LOGOUT(state) {\n    state.adminToken = null;\n    state.adminId = null;\n    state.adminName = null;\n    state.isAdminLoggedIn = false;\n    Storage.remove('admin_token');\n    Storage.remove('admin_id');\n    Storage.remove('admin_name');\n  }\n};\nconst actions = {\n  async adminLogin({\n    commit\n  }, payload) {\n    try {\n      const response = await apiAdminLogin(payload);\n      const {\n        token,\n        adminId,\n        adminName\n      } = response.data;\n      commit('SET_ADMIN_INFO', {\n        token,\n        adminId,\n        adminName\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message\n      };\n    }\n  },\n  adminLogout({\n    commit\n  }) {\n    commit('ADMIN_LOGOUT');\n    return {\n      success: true\n    };\n  }\n};\nconst getters = {\n  isAdminLoggedIn: state => state.isAdminLoggedIn,\n  adminId: state => state.adminId,\n  adminName: state => state.adminName\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["adminLogin","apiAdminLogin","Storage","state","adminToken","get","adminId","adminName","isAdminLoggedIn","mutations","SET_ADMIN_INFO","token","TTL","set","ADMIN_LOGOUT","remove","actions","commit","payload","response","data","success","error","message","adminLogout","getters","namespaced"],"sources":["D:/aa/databaseRobot/RAZOR-AI--Frontend-main/src/store/admin.js"],"sourcesContent":["import { adminLogin as apiAdminLogin } from '../utils/api';\nimport Storage from '../utils/storage';\n\nconst state = {\n  adminToken: Storage.get('admin_token'),\n  adminId: Storage.get('admin_id'),\n  adminName: Storage.get('admin_name'),\n  isAdminLoggedIn: !!Storage.get('admin_token'),\n};\n\nconst mutations = {\n  SET_ADMIN_INFO(state, { token, adminId, adminName }) {\n    state.adminToken = token;\n    state.adminId = adminId;\n    state.adminName = adminName;\n    state.isAdminLoggedIn = !!token;\n\n    const TTL = 1 * 24 * 60 * 60 * 1000; // 1天过期\n    Storage.set('admin_token', token, TTL);\n    Storage.set('admin_id', adminId, TTL);\n    Storage.set('admin_name', adminName, TTL);\n  },\n  ADMIN_LOGOUT(state) {\n    state.adminToken = null;\n    state.adminId = null;\n    state.adminName = null;\n    state.isAdminLoggedIn = false;\n    Storage.remove('admin_token');\n    Storage.remove('admin_id');\n    Storage.remove('admin_name');\n  },\n};\n\nconst actions = {\n  async adminLogin({ commit }, payload) {\n    try {\n      const response = await apiAdminLogin(payload);\n      const { token, adminId, adminName } = response.data;\n      commit('SET_ADMIN_INFO', { token, adminId, adminName });\n      return { success: true };\n    } catch (error) {\n      return { success: false, message: error.message };\n    }\n  },\n  adminLogout({ commit }) {\n    commit('ADMIN_LOGOUT');\n    return { success: true };\n  },\n};\n\nconst getters = {\n  isAdminLoggedIn: (state) => state.isAdminLoggedIn,\n  adminId: (state) => state.adminId,\n  adminName: (state) => state.adminName,\n};\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters,\n};\n"],"mappings":"AAAA,SAASA,UAAU,IAAIC,aAAa,QAAQ,cAAc;AAC1D,OAAOC,OAAO,MAAM,kBAAkB;AAEtC,MAAMC,KAAK,GAAG;EACZC,UAAU,EAAEF,OAAO,CAACG,GAAG,CAAC,aAAa,CAAC;EACtCC,OAAO,EAAEJ,OAAO,CAACG,GAAG,CAAC,UAAU,CAAC;EAChCE,SAAS,EAAEL,OAAO,CAACG,GAAG,CAAC,YAAY,CAAC;EACpCG,eAAe,EAAE,CAAC,CAACN,OAAO,CAACG,GAAG,CAAC,aAAa;AAC9C,CAAC;AAED,MAAMI,SAAS,GAAG;EAChBC,cAAcA,CAACP,KAAK,EAAE;IAAEQ,KAAK;IAAEL,OAAO;IAAEC;EAAU,CAAC,EAAE;IACnDJ,KAAK,CAACC,UAAU,GAAGO,KAAK;IACxBR,KAAK,CAACG,OAAO,GAAGA,OAAO;IACvBH,KAAK,CAACI,SAAS,GAAGA,SAAS;IAC3BJ,KAAK,CAACK,eAAe,GAAG,CAAC,CAACG,KAAK;IAE/B,MAAMC,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;IACrCV,OAAO,CAACW,GAAG,CAAC,aAAa,EAAEF,KAAK,EAAEC,GAAG,CAAC;IACtCV,OAAO,CAACW,GAAG,CAAC,UAAU,EAAEP,OAAO,EAAEM,GAAG,CAAC;IACrCV,OAAO,CAACW,GAAG,CAAC,YAAY,EAAEN,SAAS,EAAEK,GAAG,CAAC;EAC3C,CAAC;EACDE,YAAYA,CAACX,KAAK,EAAE;IAClBA,KAAK,CAACC,UAAU,GAAG,IAAI;IACvBD,KAAK,CAACG,OAAO,GAAG,IAAI;IACpBH,KAAK,CAACI,SAAS,GAAG,IAAI;IACtBJ,KAAK,CAACK,eAAe,GAAG,KAAK;IAC7BN,OAAO,CAACa,MAAM,CAAC,aAAa,CAAC;IAC7Bb,OAAO,CAACa,MAAM,CAAC,UAAU,CAAC;IAC1Bb,OAAO,CAACa,MAAM,CAAC,YAAY,CAAC;EAC9B;AACF,CAAC;AAED,MAAMC,OAAO,GAAG;EACd,MAAMhB,UAAUA,CAAC;IAAEiB;EAAO,CAAC,EAAEC,OAAO,EAAE;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMlB,aAAa,CAACiB,OAAO,CAAC;MAC7C,MAAM;QAAEP,KAAK;QAAEL,OAAO;QAAEC;MAAU,CAAC,GAAGY,QAAQ,CAACC,IAAI;MACnDH,MAAM,CAAC,gBAAgB,EAAE;QAAEN,KAAK;QAAEL,OAAO;QAAEC;MAAU,CAAC,CAAC;MACvD,OAAO;QAAEc,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEE,OAAO,EAAED,KAAK,CAACC;MAAQ,CAAC;IACnD;EACF,CAAC;EACDC,WAAWA,CAAC;IAAEP;EAAO,CAAC,EAAE;IACtBA,MAAM,CAAC,cAAc,CAAC;IACtB,OAAO;MAAEI,OAAO,EAAE;IAAK,CAAC;EAC1B;AACF,CAAC;AAED,MAAMI,OAAO,GAAG;EACdjB,eAAe,EAAGL,KAAK,IAAKA,KAAK,CAACK,eAAe;EACjDF,OAAO,EAAGH,KAAK,IAAKA,KAAK,CAACG,OAAO;EACjCC,SAAS,EAAGJ,KAAK,IAAKA,KAAK,CAACI;AAC9B,CAAC;AAED,eAAe;EACbmB,UAAU,EAAE,IAAI;EAChBvB,KAAK;EACLM,SAAS;EACTO,OAAO;EACPS;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}