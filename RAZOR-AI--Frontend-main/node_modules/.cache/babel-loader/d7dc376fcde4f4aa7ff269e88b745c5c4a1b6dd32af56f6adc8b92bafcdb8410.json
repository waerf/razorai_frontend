{"ast":null,"code":"export default {\n  name: 'SubscriptionSelector',\n  props: {\n    robotId: {\n      type: Number,\n      required: true\n    },\n    requiredPoints: {\n      type: Number,\n      default: 1\n    },\n    onClose: {\n      type: Function,\n      required: true\n    },\n    onConfirm: {\n      type: Function,\n      required: true\n    }\n  },\n  data() {\n    return {\n      form: {\n        duration: 1,\n        // 默认选择1天\n        points: this.requiredPoints,\n        // 使用机器人的积分费率\n        customDays: null // 自定义天数\n      },\n      rules: {\n        duration: [{\n          required: true,\n          message: '请选择订阅时长',\n          trigger: 'change'\n        }],\n        customDays: [{\n          required: true,\n          message: '请输入自定义天数',\n          trigger: 'blur'\n        }, {\n          type: 'number',\n          min: 1,\n          message: '天数必须大于0',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted() {\n    // 组件挂载时初始化积分\n    this.updatePoints();\n  },\n  methods: {\n    // 更新积分\n    updatePoints() {\n      // 如果是自定义天数\n      if (this.form.duration === 0) {\n        if (this.form.customDays && this.form.customDays > 0) {\n          this.form.points = this.form.customDays * this.requiredPoints; // 使用机器人的积分费率\n        } else {\n          this.form.points = 0;\n        }\n      } else if (this.form.duration) {\n        // 默认选择的时长，自动计算积分\n        this.form.points = this.form.duration * this.requiredPoints; // 使用机器人的积分费率\n      }\n    },\n    // 确认订阅操作\n    async handleConfirm() {\n      // 表单验证\n      this.$refs.formRef.validate(async valid => {\n        if (valid) {\n          // 如果是自定义模式，需要额外验证自定义天数\n          if (this.form.duration === 0) {\n            if (!this.form.customDays || this.form.customDays <= 0) {\n              this.$message.error('请输入有效的自定义天数');\n              return;\n            }\n          }\n          try {\n            // 获取实际的订阅天数\n            const actualDuration = this.form.duration === 0 ? this.form.customDays : this.form.duration;\n            // 调用父组件的确认方法\n            await this.onConfirm(actualDuration, this.form.points);\n            this.handleClose();\n          } catch (error) {\n            console.error('订阅失败：', error);\n            this.$message.error('订阅失败，请稍后重试！');\n          }\n        }\n      });\n    },\n    // 关闭弹窗\n    handleClose() {\n      this.onClose();\n    }\n  }\n};","map":{"version":3,"names":["name","props","robotId","type","Number","required","requiredPoints","default","onClose","Function","onConfirm","data","form","duration","points","customDays","rules","message","trigger","min","mounted","updatePoints","methods","handleConfirm","$refs","formRef","validate","valid","$message","error","actualDuration","handleClose","console"],"sources":["src/components/SubscriptionSelector.vue"],"sourcesContent":["<template>\n  <div class=\"subscription-selector\">\n    <div class=\"subscription-info\">\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\" label-width=\"80px\">\n        <el-form-item label=\"订阅时长\" prop=\"duration\">\n          <el-radio-group v-model=\"form.duration\" @change=\"updatePoints\">\n            <el-radio :label=\"1\">1 天</el-radio>\n            <el-radio :label=\"7\">1 周</el-radio>\n            <el-radio :label=\"30\">1 月</el-radio>\n            <el-radio :label=\"180\">6 月</el-radio>\n            <el-radio :label=\"365\">12 月</el-radio>\n            <el-radio :label=\"0\">自定义</el-radio>\n          </el-radio-group>\n        </el-form-item>\n\n        <!-- 自定义输入天数 -->\n        <el-form-item\n          v-if=\"form.duration === 0\"\n          label=\"自定义天数\"\n          prop=\"customDays\"\n        >\n          <el-input\n            v-model=\"form.customDays\"\n            placeholder=\"请输入天数\"\n            type=\"number\"\n            @input=\"updatePoints\"\n          />\n        </el-form-item>\n\n        <el-form-item label=\"积分消耗\">\n          <el-input :value=\"form.points + ' 积分'\" disabled />\n        </el-form-item>\n      </el-form>\n    </div>\n\n    <!-- 按钮区域 -->\n    <div class=\"action-buttons\">\n      <el-button @click=\"handleClose\">取消</el-button>\n      <el-button type=\"primary\" @click=\"handleConfirm\">确认</el-button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SubscriptionSelector',\n  props: {\n    robotId: {\n      type: Number,\n      required: true,\n    },\n    requiredPoints: {\n      type: Number,\n      default: 1,\n    },\n    onClose: {\n      type: Function,\n      required: true,\n    },\n    onConfirm: {\n      type: Function,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      form: {\n        duration: 1, // 默认选择1天\n        points: this.requiredPoints, // 使用机器人的积分费率\n        customDays: null, // 自定义天数\n      },\n      rules: {\n        duration: [\n          { required: true, message: '请选择订阅时长', trigger: 'change' },\n        ],\n        customDays: [\n          { required: true, message: '请输入自定义天数', trigger: 'blur' },\n          { type: 'number', min: 1, message: '天数必须大于0', trigger: 'blur' },\n        ],\n      },\n    };\n  },\n  mounted() {\n    // 组件挂载时初始化积分\n    this.updatePoints();\n  },\n  methods: {\n    // 更新积分\n    updatePoints() {\n      // 如果是自定义天数\n      if (this.form.duration === 0) {\n        if (this.form.customDays && this.form.customDays > 0) {\n          this.form.points = this.form.customDays * this.requiredPoints; // 使用机器人的积分费率\n        } else {\n          this.form.points = 0;\n        }\n      } else if (this.form.duration) {\n        // 默认选择的时长，自动计算积分\n        this.form.points = this.form.duration * this.requiredPoints; // 使用机器人的积分费率\n      }\n    },\n\n    // 确认订阅操作\n    async handleConfirm() {\n      // 表单验证\n      this.$refs.formRef.validate(async (valid) => {\n        if (valid) {\n          // 如果是自定义模式，需要额外验证自定义天数\n          if (this.form.duration === 0) {\n            if (!this.form.customDays || this.form.customDays <= 0) {\n              this.$message.error('请输入有效的自定义天数');\n              return;\n            }\n          }\n\n          try {\n            // 获取实际的订阅天数\n            const actualDuration =\n              this.form.duration === 0\n                ? this.form.customDays\n                : this.form.duration;\n            // 调用父组件的确认方法\n            await this.onConfirm(actualDuration, this.form.points);\n            this.handleClose();\n          } catch (error) {\n            console.error('订阅失败：', error);\n            this.$message.error('订阅失败，请稍后重试！');\n          }\n        }\n      });\n    },\n\n    // 关闭弹窗\n    handleClose() {\n      this.onClose();\n    },\n  },\n};\n</script>\n\n<style scoped>\n.subscription-selector {\n  padding: 0;\n}\n\n.subscription-info {\n  .el-form {\n    .el-form-item {\n      margin-bottom: 2vw;\n    }\n\n    .el-radio-group {\n      margin-top: 3.5vw;\n      margin-bottom: 0vw;\n      .el-radio {\n        display: block;\n        margin-bottom: 0.5vw;\n        margin-right: 0;\n      }\n    }\n  }\n}\n\n.action-buttons {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n  margin-top: 20px;\n  padding-top: 10px;\n  border-top: 1px solid #ebeef5;\n}\n</style>\n"],"mappings":"AA4CA;EACAA,IAAA;EACAC,KAAA;IACAC,OAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;IACAC,cAAA;MACAH,IAAA,EAAAC,MAAA;MACAG,OAAA;IACA;IACAC,OAAA;MACAL,IAAA,EAAAM,QAAA;MACAJ,QAAA;IACA;IACAK,SAAA;MACAP,IAAA,EAAAM,QAAA;MACAJ,QAAA;IACA;EACA;EACAM,KAAA;IACA;MACAC,IAAA;QACAC,QAAA;QAAA;QACAC,MAAA,OAAAR,cAAA;QAAA;QACAS,UAAA;MACA;MACAC,KAAA;QACAH,QAAA,GACA;UAAAR,QAAA;UAAAY,OAAA;UAAAC,OAAA;QAAA,EACA;QACAH,UAAA,GACA;UAAAV,QAAA;UAAAY,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAf,IAAA;UAAAgB,GAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAE,QAAA;IACA;IACA,KAAAC,YAAA;EACA;EACAC,OAAA;IACA;IACAD,aAAA;MACA;MACA,SAAAT,IAAA,CAAAC,QAAA;QACA,SAAAD,IAAA,CAAAG,UAAA,SAAAH,IAAA,CAAAG,UAAA;UACA,KAAAH,IAAA,CAAAE,MAAA,QAAAF,IAAA,CAAAG,UAAA,QAAAT,cAAA;QACA;UACA,KAAAM,IAAA,CAAAE,MAAA;QACA;MACA,gBAAAF,IAAA,CAAAC,QAAA;QACA;QACA,KAAAD,IAAA,CAAAE,MAAA,QAAAF,IAAA,CAAAC,QAAA,QAAAP,cAAA;MACA;IACA;IAEA;IACA,MAAAiB,cAAA;MACA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACA,SAAAf,IAAA,CAAAC,QAAA;YACA,UAAAD,IAAA,CAAAG,UAAA,SAAAH,IAAA,CAAAG,UAAA;cACA,KAAAa,QAAA,CAAAC,KAAA;cACA;YACA;UACA;UAEA;YACA;YACA,MAAAC,cAAA,GACA,KAAAlB,IAAA,CAAAC,QAAA,SACA,KAAAD,IAAA,CAAAG,UAAA,GACA,KAAAH,IAAA,CAAAC,QAAA;YACA;YACA,WAAAH,SAAA,CAAAoB,cAAA,OAAAlB,IAAA,CAAAE,MAAA;YACA,KAAAiB,WAAA;UACA,SAAAF,KAAA;YACAG,OAAA,CAAAH,KAAA,UAAAA,KAAA;YACA,KAAAD,QAAA,CAAAC,KAAA;UACA;QACA;MACA;IACA;IAEA;IACAE,YAAA;MACA,KAAAvB,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}