{"ast":null,"code":"import { getNotifications, sendNotification, createNotification, deleteNotification } from '@/utils/api';\nexport default {\n  name: 'AdminNotificationsPage',\n  data() {\n    return {\n      notifications: [],\n      newNotification: {\n        title: '',\n        content: ''\n      }\n    };\n  },\n  async created() {\n    await this.fetchNotifications();\n  },\n  methods: {\n    async fetchNotifications() {\n      try {\n        const response = await getNotifications();\n        this.notifications = response.data;\n      } catch (error) {\n        console.error('获取通知列表失败:', error);\n      }\n    },\n    async sendNotification(id) {\n      try {\n        await sendNotification(id);\n        this.$message.success('发送通知成功');\n        await this.fetchNotifications();\n      } catch (error) {\n        console.error('发送通知失败:', error);\n        this.$message.error('发送通知失败');\n      }\n    },\n    async deleteNotification(id) {\n      try {\n        await deleteNotification(id);\n        this.$message.success('删除通知成功');\n        await this.fetchNotifications();\n      } catch (error) {\n        console.error('删除通知失败:', error);\n        this.$message.error('删除通知失败');\n      }\n    },\n    async addNotification() {\n      try {\n        if (!this.newNotification.title || !this.newNotification.content) {\n          this.$message.warning('请填写标题和内容');\n          return;\n        }\n        await createNotification(this.newNotification);\n        this.$message.success('添加通知成功');\n        this.newNotification = {\n          title: '',\n          content: ''\n        };\n        await this.fetchNotifications();\n      } catch (error) {\n        console.error('添加通知失败:', error);\n        this.$message.error('添加通知失败');\n      }\n    }\n  }\n};","map":{"version":3,"names":["getNotifications","sendNotification","createNotification","deleteNotification","name","data","notifications","newNotification","title","content","created","fetchNotifications","methods","response","error","console","id","$message","success","addNotification","warning"],"sources":["src/views/AdminNotificationsPage.vue"],"sourcesContent":["<template>\n  <div class=\"admin-notifications\">\n    <h2>通知管理</h2>\n    <div class=\"notification-list\">\n      <div\n        v-for=\"notification in notifications\"\n        :key=\"notification.id\"\n        class=\"notification-item\"\n      >\n        <h3>{{ notification.title }}</h3>\n        <p>{{ notification.content }}</p>\n        <div class=\"meta\">\n          <span>发送时间: {{ notification.time }}</span>\n          <span>状态: {{ notification.status }}</span>\n        </div>\n        <div class=\"actions\">\n          <button @click=\"sendNotification(notification.id)\">发送</button>\n          <button @click=\"editNotification(notification.id)\">编辑</button>\n          <button @click=\"deleteNotification(notification.id)\">删除</button>\n        </div>\n      </div>\n    </div>\n    <div class=\"add-notification\">\n      <h3>添加新通知</h3>\n      <input v-model=\"newNotification.title\" placeholder=\"标题\" />\n      <textarea v-model=\"newNotification.content\" placeholder=\"内容\"></textarea>\n      <button @click=\"addNotification\">添加</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  getNotifications,\n  sendNotification,\n  createNotification,\n  deleteNotification,\n} from '@/utils/api';\n\nexport default {\n  name: 'AdminNotificationsPage',\n  data() {\n    return {\n      notifications: [],\n      newNotification: {\n        title: '',\n        content: '',\n      },\n    };\n  },\n  async created() {\n    await this.fetchNotifications();\n  },\n  methods: {\n    async fetchNotifications() {\n      try {\n        const response = await getNotifications();\n        this.notifications = response.data;\n      } catch (error) {\n        console.error('获取通知列表失败:', error);\n      }\n    },\n    async sendNotification(id) {\n      try {\n        await sendNotification(id);\n        this.$message.success('发送通知成功');\n        await this.fetchNotifications();\n      } catch (error) {\n        console.error('发送通知失败:', error);\n        this.$message.error('发送通知失败');\n      }\n    },\n    async deleteNotification(id) {\n      try {\n        await deleteNotification(id);\n        this.$message.success('删除通知成功');\n        await this.fetchNotifications();\n      } catch (error) {\n        console.error('删除通知失败:', error);\n        this.$message.error('删除通知失败');\n      }\n    },\n    async addNotification() {\n      try {\n        if (!this.newNotification.title || !this.newNotification.content) {\n          this.$message.warning('请填写标题和内容');\n          return;\n        }\n        await createNotification(this.newNotification);\n        this.$message.success('添加通知成功');\n        this.newNotification = { title: '', content: '' };\n        await this.fetchNotifications();\n      } catch (error) {\n        console.error('添加通知失败:', error);\n        this.$message.error('添加通知失败');\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.admin-notifications {\n  padding: 20px;\n}\n.notification-list {\n  margin-top: 20px;\n}\n.notification-item {\n  padding: 15px;\n  margin-bottom: 15px;\n  border: 1px solid #eee;\n  border-radius: 4px;\n}\n.meta {\n  display: flex;\n  justify-content: space-between;\n  margin: 10px 0;\n  color: #666;\n  font-size: 14px;\n}\n.actions {\n  margin-top: 10px;\n}\nbutton {\n  margin-right: 10px;\n  padding: 5px 10px;\n}\n.add-notification {\n  margin-top: 30px;\n  padding: 15px;\n  border: 1px dashed #ccc;\n  border-radius: 4px;\n}\ninput,\ntextarea {\n  display: block;\n  width: 100%;\n  margin: 10px 0;\n  padding: 8px;\n}\ntextarea {\n  height: 100px;\n}\n</style>\n"],"mappings":"AAgCA,SACAA,gBAAA,EACAC,gBAAA,EACAC,kBAAA,EACAC,kBAAA,QACA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,aAAA;MACAC,eAAA;QACAC,KAAA;QACAC,OAAA;MACA;IACA;EACA;EACA,MAAAC,QAAA;IACA,WAAAC,kBAAA;EACA;EACAC,OAAA;IACA,MAAAD,mBAAA;MACA;QACA,MAAAE,QAAA,SAAAb,gBAAA;QACA,KAAAM,aAAA,GAAAO,QAAA,CAAAR,IAAA;MACA,SAAAS,KAAA;QACAC,OAAA,CAAAD,KAAA,cAAAA,KAAA;MACA;IACA;IACA,MAAAb,iBAAAe,EAAA;MACA;QACA,MAAAf,gBAAA,CAAAe,EAAA;QACA,KAAAC,QAAA,CAAAC,OAAA;QACA,WAAAP,kBAAA;MACA,SAAAG,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;QACA,KAAAG,QAAA,CAAAH,KAAA;MACA;IACA;IACA,MAAAX,mBAAAa,EAAA;MACA;QACA,MAAAb,kBAAA,CAAAa,EAAA;QACA,KAAAC,QAAA,CAAAC,OAAA;QACA,WAAAP,kBAAA;MACA,SAAAG,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;QACA,KAAAG,QAAA,CAAAH,KAAA;MACA;IACA;IACA,MAAAK,gBAAA;MACA;QACA,UAAAZ,eAAA,CAAAC,KAAA,UAAAD,eAAA,CAAAE,OAAA;UACA,KAAAQ,QAAA,CAAAG,OAAA;UACA;QACA;QACA,MAAAlB,kBAAA,MAAAK,eAAA;QACA,KAAAU,QAAA,CAAAC,OAAA;QACA,KAAAX,eAAA;UAAAC,KAAA;UAAAC,OAAA;QAAA;QACA,WAAAE,kBAAA;MACA,SAAAG,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;QACA,KAAAG,QAAA,CAAAH,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}