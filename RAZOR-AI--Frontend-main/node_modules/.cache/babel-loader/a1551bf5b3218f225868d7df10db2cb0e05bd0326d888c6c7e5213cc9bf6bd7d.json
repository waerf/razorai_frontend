{"ast":null,"code":"export default {\n  name: 'SubscriptionSelector',\n  props: {\n    robotId: {\n      type: Number,\n      required: true\n    },\n    onClose: {\n      type: Function,\n      required: true\n    },\n    onConfirm: {\n      type: Function,\n      required: true\n    }\n  },\n  data() {\n    return {\n      form: {\n        duration: null,\n        // 订阅时长\n        points: null,\n        // 所需积分\n        customDays: null // 自定义天数\n      },\n      rules: {\n        duration: [{\n          required: true,\n          message: '请选择订阅时长',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  methods: {\n    // 更新积分\n    updatePoints() {\n      // 如果是自定义天数\n      if (this.form.duration === 0 && this.form.customDays) {\n        this.form.points = this.form.customDays * 1.5; // 每天1.5积分\n      } else if (this.form.duration) {\n        // 默认选择的时长，自动计算积分\n        this.form.points = this.form.duration * 1.5; // 每天1.5积分\n      }\n    },\n    // 确认订阅操作\n    async handleConfirm() {\n      // 表单验证\n      this.$refs.formRef.validate(async valid => {\n        if (valid) {\n          try {\n            // 调用父组件的确认方法\n            await this.onConfirm(this.form.duration, this.form.points);\n            this.handleClose();\n          } catch (error) {\n            console.error('订阅失败：', error);\n            this.$message.error('订阅失败，请稍后重试！');\n          }\n        }\n      });\n    },\n    // 关闭弹窗\n    handleClose() {\n      this.onClose();\n    }\n  }\n};","map":{"version":3,"names":["name","props","robotId","type","Number","required","onClose","Function","onConfirm","data","form","duration","points","customDays","rules","message","trigger","methods","updatePoints","handleConfirm","$refs","formRef","validate","valid","handleClose","error","console","$message"],"sources":["src/components/SubscriptionSelector.vue"],"sourcesContent":["<template>\n  <div class=\"subscription-selector\">\n    <!-- 选择订阅时长 -->\n    <div class=\"duration-selection\">\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\" label-width=\"80px\">\n        <!-- 选择订阅时长 -->\n        <el-form-item label=\"订阅时长\" prop=\"duration\">\n          <el-radio-group v-model=\"form.duration\" @change=\"updatePoints\">\n            <el-radio :label=\"7\">1 个周</el-radio>\n            <el-radio :label=\"30\">1 个月</el-radio>\n            <el-radio :label=\"180\">6 个月</el-radio>\n            <el-radio :label=\"365\">12 个月</el-radio>\n            <el-radio :label=\"0\">自定义</el-radio>\n          </el-radio-group>\n        </el-form-item>\n\n        <!-- 自定义输入天数 -->\n        <el-form-item\n          v-if=\"form.duration === 0\"\n          label=\"自定义\"\n          prop=\"customDays\"\n        >\n          <el-input\n            v-model=\"form.customDays\"\n            placeholder=\"请输入天数\"\n            type=\"number\"\n            @input=\"updatePoints\"\n          />\n        </el-form-item>\n\n        <!-- 计算积分 -->\n        <el-form-item label=\"积分消耗\" prop=\"points\">\n          <el-input :value=\"form.points\" placeholder=\"自动计算积分\" disabled />\n        </el-form-item>\n      </el-form>\n    </div>\n\n    <!-- 按钮区域 -->\n    <div class=\"action-buttons\">\n      <el-button type=\"primary\" @click=\"handleConfirm\">确认</el-button>\n      <el-button @click=\"handleClose\">取消</el-button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SubscriptionSelector',\n  props: {\n    robotId: {\n      type: Number,\n      required: true,\n    },\n    onClose: {\n      type: Function,\n      required: true,\n    },\n    onConfirm: {\n      type: Function,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      form: {\n        duration: null, // 订阅时长\n        points: null, // 所需积分\n        customDays: null, // 自定义天数\n      },\n      rules: {\n        duration: [\n          { required: true, message: '请选择订阅时长', trigger: 'change' },\n        ],\n      },\n    };\n  },\n  methods: {\n    // 更新积分\n    updatePoints() {\n      // 如果是自定义天数\n      if (this.form.duration === 0 && this.form.customDays) {\n        this.form.points = this.form.customDays * 1.5; // 每天1.5积分\n      } else if (this.form.duration) {\n        // 默认选择的时长，自动计算积分\n        this.form.points = this.form.duration * 1.5; // 每天1.5积分\n      }\n    },\n\n    // 确认订阅操作\n    async handleConfirm() {\n      // 表单验证\n      this.$refs.formRef.validate(async (valid) => {\n        if (valid) {\n          try {\n            // 调用父组件的确认方法\n            await this.onConfirm(this.form.duration, this.form.points);\n            this.handleClose();\n          } catch (error) {\n            console.error('订阅失败：', error);\n            this.$message.error('订阅失败，请稍后重试！');\n          }\n        }\n      });\n    },\n\n    // 关闭弹窗\n    handleClose() {\n      this.onClose();\n    },\n  },\n};\n</script>\n\n<style scoped>\n.form-footer {\n  display: flex;\n  justify-content: space-between; /* 在左右两边对齐 */\n  align-items: center; /* 垂直居中对齐 */\n}\n.duration-selection {\n  margin-bottom: 20px;\n}\n.action-buttons {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n}\n</style>\n"],"mappings":"AA8CA;EACAA,IAAA;EACAC,KAAA;IACAC,OAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;IACAC,OAAA;MACAH,IAAA,EAAAI,QAAA;MACAF,QAAA;IACA;IACAG,SAAA;MACAL,IAAA,EAAAI,QAAA;MACAF,QAAA;IACA;EACA;EACAI,KAAA;IACA;MACAC,IAAA;QACAC,QAAA;QAAA;QACAC,MAAA;QAAA;QACAC,UAAA;MACA;MACAC,KAAA;QACAH,QAAA,GACA;UAAAN,QAAA;UAAAU,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,OAAA;IACA;IACAC,aAAA;MACA;MACA,SAAAR,IAAA,CAAAC,QAAA,eAAAD,IAAA,CAAAG,UAAA;QACA,KAAAH,IAAA,CAAAE,MAAA,QAAAF,IAAA,CAAAG,UAAA;MACA,gBAAAH,IAAA,CAAAC,QAAA;QACA;QACA,KAAAD,IAAA,CAAAE,MAAA,QAAAF,IAAA,CAAAC,QAAA;MACA;IACA;IAEA;IACA,MAAAQ,cAAA;MACA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UACA;YACA;YACA,WAAAf,SAAA,MAAAE,IAAA,CAAAC,QAAA,OAAAD,IAAA,CAAAE,MAAA;YACA,KAAAY,WAAA;UACA,SAAAC,KAAA;YACAC,OAAA,CAAAD,KAAA,UAAAA,KAAA;YACA,KAAAE,QAAA,CAAAF,KAAA;UACA;QACA;MACA;IACA;IAEA;IACAD,YAAA;MACA,KAAAlB,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}