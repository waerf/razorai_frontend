{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { MessageBox } from 'element-ui';\nimport { mapActions } from 'vuex';\nimport user from '@/store/user';\nexport default {\n  name: 'UserProfile',\n  data() {\n    return {\n      avatar: 'https://via.placeholder.com/150',\n      username: '',\n      email: '666@example.com',\n      bio: '喜欢编程和旅游。',\n      interestModules: ['编程', '旅游', '健身'],\n      friends: ['何雯宏', '许昕格', '王加添'],\n      favoriteRobots: ['R2-D2', 'C-3PO', 'Optimus Prime'],\n      favoriteTools: ['VS Code', 'Sublime Text', 'WebStorm']\n    };\n  },\n  created() {\n    this.username = user.state.userName;\n    console.log('user:', user);\n  },\n  methods: {\n    editAvatar() {\n      this.$message.info('修改头像功能待实现');\n    },\n    editInterest() {\n      this.$message.info('编辑兴趣模块功能待实现');\n    },\n    addFriend() {\n      this.$message.info('添加好友功能待实现');\n    },\n    saveProfile() {\n      console.log('个人信息保存:', {\n        username: this.username,\n        email: this.email,\n        bio: this.bio,\n        interestModules: this.interestModules,\n        friends: this.friends,\n        favoriteRobots: this.favoriteRobots,\n        favoriteTools: this.favoriteTools\n      });\n      this.$message.success('个人信息已保存！');\n    },\n    confirmLogout() {\n      // 弹出确认对话框\n      MessageBox.confirm('您确定要登出吗？', '确认登出', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        // 用户点击“确定”后执行登出操作\n        this.outSubmit();\n      }).catch(() => {\n        // 用户点击“取消”时不做任何操作\n        console.log('取消登出');\n      });\n    },\n    ...mapActions('user', ['logout']),\n    // 映射 user 模块中的 logout 方法\n    async outSubmit() {\n      this.isLoading = true; // 显示加载状态\n      try {\n        // 调用 Vuex 中的 logout 动作\n        const result = await this.logout();\n        console.log(result);\n        // 清除本地存储的用户信息（如 token）\n        this.$message.success('登出成功！'); // 提示登出成功\n        // 跳转到登录页面\n        if (this.$route.name !== 'Home') {\n          this.$router.push({\n            name: 'Home'\n          });\n          location.reload(); // 强制刷新页面\n        }\n      } catch (error) {\n        console.error(error); // 打印错误信息\n        this.$message.error(error.message || '登出失败');\n      } finally {\n        // 无论成功或失败都会执行\n        this.isLoading = false; // 结束加载状态\n      }\n    }\n  }\n};","map":{"version":3,"names":["MessageBox","mapActions","user","name","data","avatar","username","email","bio","interestModules","friends","favoriteRobots","favoriteTools","created","state","userName","console","log","methods","editAvatar","$message","info","editInterest","addFriend","saveProfile","success","confirmLogout","confirm","confirmButtonText","cancelButtonText","type","then","outSubmit","catch","isLoading","result","logout","$route","$router","push","location","reload","error","message"],"sources":["src/views/PersonalHomePage.vue"],"sourcesContent":["<!--personalHomePage.vue-->\r\n<template>\r\n  <div class=\"profile-page\">\r\n    <h1 class=\"title\">个人主页</h1>\r\n    <p class=\"description\">\r\n      欢迎来到您的个人主页，您可以在此修改个人信息和查看好友。\r\n    </p>\r\n\r\n    <div class=\"profile-container\">\r\n      <div class=\"profile-header\">\r\n        <div class=\"avatar-section\">\r\n          <img :src=\"avatar\" alt=\"用户头像\" class=\"avatar\" />\r\n          <el-button @click=\"editAvatar\" size=\"mini\">修改头像</el-button>\r\n        </div>\r\n        <div class=\"user-info\">\r\n          <h2>{{ username }}</h2>\r\n          <p>邮箱：{{ email }}</p>\r\n          <p>个人简介：{{ bio }}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"info-container\">\r\n        <!-- 感兴趣的模块 -->\r\n        <div class=\"info-group\">\r\n          <h3>感兴趣的模块</h3>\r\n          <ul class=\"interest-list\">\r\n            <li v-for=\"module in interestModules\" :key=\"module\">\r\n              {{ module }}\r\n            </li>\r\n          </ul>\r\n          <el-button @click=\"editInterest\" size=\"mini\">编辑兴趣模块</el-button>\r\n        </div>\r\n\r\n        <!-- 我的好友 -->\r\n        <div class=\"info-group\">\r\n          <h3>我的好友</h3>\r\n          <ul class=\"friend-list\">\r\n            <li v-for=\"friend in friends\" :key=\"friend\">{{ friend }}</li>\r\n          </ul>\r\n          <el-button @click=\"addFriend\" size=\"mini\">添加好友</el-button>\r\n        </div>\r\n\r\n        <!-- 我喜欢的机器人 -->\r\n        <div class=\"info-group\">\r\n          <h3>我喜欢的机器人</h3>\r\n          <ul class=\"robot-list\">\r\n            <li v-for=\"robot in favoriteRobots\" :key=\"robot\">{{ robot }}</li>\r\n          </ul>\r\n        </div>\r\n\r\n        <!-- 我常用的编辑工具 -->\r\n        <div class=\"info-group\">\r\n          <h3>我常用的编辑工具</h3>\r\n          <ul class=\"tool-list\">\r\n            <li v-for=\"tool in favoriteTools\" :key=\"tool\">{{ tool }}</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"button-group\">\r\n      <el-button type=\"primary\" @click=\"saveProfile\">保存个人信息</el-button>\r\n      <el-button @click=\"confirmLogout\" size=\"mini\" type=\"danger\"\r\n        >登出</el-button\r\n      >\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { MessageBox } from 'element-ui';\r\nimport { mapActions } from 'vuex';\r\nimport user from '@/store/user';\r\nexport default {\r\n  name: 'UserProfile',\r\n  data() {\r\n    return {\r\n      avatar: 'https://via.placeholder.com/150',\r\n      username: '',\r\n      email: '666@example.com',\r\n      bio: '喜欢编程和旅游。',\r\n      interestModules: ['编程', '旅游', '健身'],\r\n      friends: ['何雯宏', '许昕格', '王加添'],\r\n      favoriteRobots: ['R2-D2', 'C-3PO', 'Optimus Prime'],\r\n      favoriteTools: ['VS Code', 'Sublime Text', 'WebStorm'],\r\n    };\r\n  },\r\n  created() {\r\n    this.username = user.state.userName;\r\n    console.log('user:', user);\r\n  },\r\n  methods: {\r\n    editAvatar() {\r\n      this.$message.info('修改头像功能待实现');\r\n    },\r\n    editInterest() {\r\n      this.$message.info('编辑兴趣模块功能待实现');\r\n    },\r\n    addFriend() {\r\n      this.$message.info('添加好友功能待实现');\r\n    },\r\n    saveProfile() {\r\n      console.log('个人信息保存:', {\r\n        username: this.username,\r\n        email: this.email,\r\n        bio: this.bio,\r\n        interestModules: this.interestModules,\r\n        friends: this.friends,\r\n        favoriteRobots: this.favoriteRobots,\r\n        favoriteTools: this.favoriteTools,\r\n      });\r\n      this.$message.success('个人信息已保存！');\r\n    },\r\n    confirmLogout() {\r\n      // 弹出确认对话框\r\n      MessageBox.confirm('您确定要登出吗？', '确认登出', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      })\r\n        .then(() => {\r\n          // 用户点击“确定”后执行登出操作\r\n          this.outSubmit();\r\n        })\r\n        .catch(() => {\r\n          // 用户点击“取消”时不做任何操作\r\n          console.log('取消登出');\r\n        });\r\n    },\r\n    ...mapActions('user', ['logout']), // 映射 user 模块中的 logout 方法\r\n    async outSubmit() {\r\n      this.isLoading = true; // 显示加载状态\r\n      try {\r\n        // 调用 Vuex 中的 logout 动作\r\n        const result = await this.logout();\r\n        console.log(result);\r\n        // 清除本地存储的用户信息（如 token）\r\n        this.$message.success('登出成功！'); // 提示登出成功\r\n        // 跳转到登录页面\r\n        if (this.$route.name !== 'Home') {\r\n          this.$router.push({ name: 'Home' });\r\n          location.reload(); // 强制刷新页面\r\n        }\r\n      } catch (error) {\r\n        console.error(error); // 打印错误信息\r\n        this.$message.error(error.message || '登出失败');\r\n      } finally {\r\n        // 无论成功或失败都会执行\r\n        this.isLoading = false; // 结束加载状态\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n@use '@/assets/styles/mixins.scss' as *;\r\n@use '@/assets/styles/variables.scss' as *;\r\n.html-body {\r\n  height: 100%; /* 设置 html 和 body 高度为 100% */\r\n  margin: 0; /* 去除默认边距 */\r\n  padding: 0; /* 去除默认内边距 */\r\n  overflow: hidden;\r\n}\r\n\r\n.profile-page {\r\n  height: auto; /* 使用视口高度 */\r\n  max-width: 100%;\r\n  padding: 20px;\r\n  background-color: $background-color; /* 深色背景 */\r\n  color: $text-color; /* 白色文字 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n}\r\n\r\n.title {\r\n  font-size: 2em;\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.description {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  color: #aaa; /* 灰色文字 */\r\n}\r\n\r\n.profile-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n}\r\n\r\n.profile-header {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.avatar-section {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.avatar {\r\n  width: 120px;\r\n  height: 120px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  margin-right: 10px;\r\n}\r\n\r\n.user-info h2 {\r\n  font-size: 1.5em;\r\n  font-weight: bold;\r\n}\r\n\r\n.user-info p {\r\n  font-size: 1.1em;\r\n  color: #aaa;\r\n  margin-top: 5px;\r\n}\r\n\r\n.info-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.info-group {\r\n  width: 45%; /* 每个信息组的宽度 */\r\n  margin: 0 10px;\r\n  padding: 15px;\r\n  background-color: #3a3a3a;\r\n  border-radius: 5px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.info-group h3 {\r\n  font-size: 1.3em;\r\n  color: #ffffff;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.interest-list,\r\n.friend-list,\r\n.robot-list,\r\n.tool-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.interest-list li,\r\n.friend-list li,\r\n.robot-list li,\r\n.tool-list li {\r\n  color: #aaa;\r\n  font-size: 1.1em;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":";AAsEA,SAAAA,UAAA;AACA,SAAAC,UAAA;AACA,OAAAC,IAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,QAAA;MACAC,KAAA;MACAC,GAAA;MACAC,eAAA;MACAC,OAAA;MACAC,cAAA;MACAC,aAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAP,QAAA,GAAAJ,IAAA,CAAAY,KAAA,CAAAC,QAAA;IACAC,OAAA,CAAAC,GAAA,UAAAf,IAAA;EACA;EACAgB,OAAA;IACAC,WAAA;MACA,KAAAC,QAAA,CAAAC,IAAA;IACA;IACAC,aAAA;MACA,KAAAF,QAAA,CAAAC,IAAA;IACA;IACAE,UAAA;MACA,KAAAH,QAAA,CAAAC,IAAA;IACA;IACAG,YAAA;MACAR,OAAA,CAAAC,GAAA;QACAX,QAAA,OAAAA,QAAA;QACAC,KAAA,OAAAA,KAAA;QACAC,GAAA,OAAAA,GAAA;QACAC,eAAA,OAAAA,eAAA;QACAC,OAAA,OAAAA,OAAA;QACAC,cAAA,OAAAA,cAAA;QACAC,aAAA,OAAAA;MACA;MACA,KAAAQ,QAAA,CAAAK,OAAA;IACA;IACAC,cAAA;MACA;MACA1B,UAAA,CAAA2B,OAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GACAC,IAAA;QACA;QACA,KAAAC,SAAA;MACA,GACAC,KAAA;QACA;QACAjB,OAAA,CAAAC,GAAA;MACA;IACA;IACA,GAAAhB,UAAA;IAAA;IACA,MAAA+B,UAAA;MACA,KAAAE,SAAA;MACA;QACA;QACA,MAAAC,MAAA,cAAAC,MAAA;QACApB,OAAA,CAAAC,GAAA,CAAAkB,MAAA;QACA;QACA,KAAAf,QAAA,CAAAK,OAAA;QACA;QACA,SAAAY,MAAA,CAAAlC,IAAA;UACA,KAAAmC,OAAA,CAAAC,IAAA;YAAApC,IAAA;UAAA;UACAqC,QAAA,CAAAC,MAAA;QACA;MACA,SAAAC,KAAA;QACA1B,OAAA,CAAA0B,KAAA,CAAAA,KAAA;QACA,KAAAtB,QAAA,CAAAsB,KAAA,CAAAA,KAAA,CAAAC,OAAA;MACA;QACA;QACA,KAAAT,SAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}