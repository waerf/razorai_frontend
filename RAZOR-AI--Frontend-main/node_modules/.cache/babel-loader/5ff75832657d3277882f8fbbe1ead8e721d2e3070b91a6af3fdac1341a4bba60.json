{"ast":null,"code":"// src/utils/api.js\n//api.js 文件用于封装 API 请求，方便在项目中进行统一管理和调用。\nimport axios from 'axios';\nimport MyStorage from './storage'; // 引入 Storage 工具类\n\nconst api = axios.create({\n  baseURL: '/api',\n  timeout: 1000\n});\n\n// 请求拦截器\napi.interceptors.request.use(config => {\n  if (config.method === 'post' && !config.headers.get('Content-Type')) {\n    config.headers.set('Content-Type', 'application/json');\n  }\n  const skipAuth = config.headers.get('skipAuth');\n  if (!skipAuth) {\n    const token = MyStorage.get('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    } else {\n      console.warn('Token is missing; Authorization header not set.');\n    }\n  }\n  // 移除自定义标志以免发送到服务器\n  config.headers.delete('skipAuth');\n  return config;\n}, error => {\n  return Promise.reject(error); // 请求错误直接返回\n});\n\n// 响应拦截器\napi.interceptors.response.use(response => response,\n// 正常响应直接返回\nerror => {\n  // 处理错误响应\n  if (error.response) {\n    console.log('Error response in api.js:', error.response);\n    const {\n      status,\n      data\n    } = error.response;\n    return Promise.reject({\n      code: status,\n      message: data.message\n    }); // 返回错误状态码和消息\n  } else {\n    return Promise.reject({\n      code: 500,\n      message: '哈哈哈出错咯，debug咯'\n    }); // 返回默认错误消息\n  }\n});\n\n// API 请求方法\nexport const login = payload => api.post('/user/login', payload, {\n  headers: {\n    skipAuth: true\n  } // 跳过 Authorization 头\n});\nexport const register = payload => api.post('/user/register', payload, {\n  headers: {\n    skipAuth: true\n  } // 跳过 Authorization 头\n});\nexport const fetchAllAgentsData = () => api.get('/market', {\n  headers: {\n    skipAuth: true\n  }\n}); // 跳过 Authorization 头\n\nexport const fetchAgentDetail = agentId => api.get(`/market/agentdetail/${agentId}`, {\n  headers: {\n    skipAuth: true\n  }\n}); // 跳过 Authorization 头\n\nexport const fetchUserSubscriptions = async userId => {\n  const response = await api.get(`/market/user/subs/${userId}`, {\n    headers: {\n      skipAuth: false\n    }\n  });\n  return response;\n};\nexport const fetchChatDetailedHistory = async chat_id => {\n  console.log('chat_id in api.js:', chat_id);\n  const response = await api.get(`/agent/user/chat/${chat_id.chat_id}`, {\n    headers: {\n      skipAuth: false\n    }\n  });\n  return response;\n};\nexport const fetchAllChats = user_id => api.post('/agent/user/chat/all', user_id, {\n  headers: {\n    skipAuth: false\n  }\n});\nexport const subscribeAgent = payload => api.post('/market/user/agent/subscribe', payload, {\n  headers: {\n    skipAuth: false\n  }\n});\nexport const createAI = payload => api.post('/agent/user/creation', payload, {\n  headers: {\n    skipAuth: false\n  }\n});\nexport const createChat = payload => api.post('/agent/user/chat/creation', payload, {\n  headers: {\n    skipAuth: false\n  }\n});\nexport const sendMessage = payload => api.post(`/agent/user/chat/${payload.chat_id}`, {\n  question: payload.content\n}, {\n  headers: {\n    skipAuth: false\n  },\n  timeout: 30000 // 设置 30 秒超时时间\n});\nexport const saveChatHistory = chatId => api.post(`/agent/chat/save/${chatId.chat_id}`, {\n  headers: {\n    skipAuth: true\n  }\n});\nexport const closeChat = chatId => api.delete(`/agent/user/chat/${chatId.chat_id}`, {\n  headers: {\n    skipAuth: false\n  }\n});\nexport const deleteChat = chatId => api.delete(`/agent/user/chat/delete/${chatId.chat_id}`, {\n  headers: {\n    skipAuth: false\n  }\n});","map":{"version":3,"names":["axios","MyStorage","api","create","baseURL","timeout","interceptors","request","use","config","method","headers","get","set","skipAuth","token","console","warn","delete","error","Promise","reject","response","log","status","data","code","message","login","payload","post","register","fetchAllAgentsData","fetchAgentDetail","agentId","fetchUserSubscriptions","userId","fetchChatDetailedHistory","chat_id","fetchAllChats","user_id","subscribeAgent","createAI","createChat","sendMessage","question","content","saveChatHistory","chatId","closeChat","deleteChat"],"sources":["C:/Users/HP/Desktop/数据库课设/RAZOR-AI--Frontend-main/src/utils/api.js"],"sourcesContent":["// src/utils/api.js\n//api.js 文件用于封装 API 请求，方便在项目中进行统一管理和调用。\nimport axios from 'axios';\nimport MyStorage from './storage'; // 引入 Storage 工具类\n\nconst api = axios.create({\n  baseURL: '/api',\n  timeout: 1000,\n});\n\n// 请求拦截器\napi.interceptors.request.use(\n  (config) => {\n    if (config.method === 'post' && !config.headers.get('Content-Type')) {\n      config.headers.set('Content-Type', 'application/json');\n    }\n    const skipAuth = config.headers.get('skipAuth');\n    if (!skipAuth) {\n      const token = MyStorage.get('token');\n      if (token) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n      } else {\n        console.warn('Token is missing; Authorization header not set.');\n      }\n    }\n    // 移除自定义标志以免发送到服务器\n    config.headers.delete('skipAuth');\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error); // 请求错误直接返回\n  }\n);\n\n// 响应拦截器\napi.interceptors.response.use(\n  (response) => response, // 正常响应直接返回\n  (error) => {\n    // 处理错误响应\n    if (error.response) {\n      console.log('Error response in api.js:', error.response);\n      const { status, data } = error.response;\n      return Promise.reject({ code: status, message: data.message }); // 返回错误状态码和消息\n    } else {\n      return Promise.reject({ code: 500, message: '哈哈哈出错咯，debug咯' }); // 返回默认错误消息\n    }\n  }\n);\n\n// API 请求方法\nexport const login = (payload) =>\n  api.post('/user/login', payload, {\n    headers: { skipAuth: true }, // 跳过 Authorization 头\n  });\n\nexport const register = (payload) =>\n  api.post('/user/register', payload, {\n    headers: { skipAuth: true }, // 跳过 Authorization 头\n  });\n\nexport const fetchAllAgentsData = () =>\n  api.get('/market', { headers: { skipAuth: true } }); // 跳过 Authorization 头\n\nexport const fetchAgentDetail = (agentId) =>\n  api.get(`/market/agentdetail/${agentId}`, { headers: { skipAuth: true } }); // 跳过 Authorization 头\n\nexport const fetchUserSubscriptions = async (userId) => {\n  const response = await api.get(`/market/user/subs/${userId}`, {\n    headers: { skipAuth: false },\n  });\n  return response;\n};\n\nexport const fetchChatDetailedHistory = async (chat_id) => {\n  console.log('chat_id in api.js:', chat_id);\n  const response = await api.get(`/agent/user/chat/${chat_id.chat_id}`, {\n    headers: { skipAuth: false },\n  });\n  return response;\n};\n\nexport const fetchAllChats = (user_id) =>\n  api.post('/agent/user/chat/all', user_id, {\n    headers: { skipAuth: false },\n  });\n\nexport const subscribeAgent = (payload) =>\n  api.post('/market/user/agent/subscribe', payload, {\n    headers: { skipAuth: false },\n  });\n\nexport const createAI = (payload) =>\n  api.post('/agent/user/creation', payload, {\n    headers: { skipAuth: false },\n  });\n\nexport const createChat = (payload) =>\n  api.post('/agent/user/chat/creation', payload, {\n    headers: { skipAuth: false },\n  });\n\nexport const sendMessage = (payload) =>\n  api.post(\n    `/agent/user/chat/${payload.chat_id}`,\n    { question: payload.content },\n    {\n      headers: { skipAuth: false },\n      timeout: 30000, // 设置 30 秒超时时间\n    }\n  );\n\nexport const saveChatHistory = (chatId) =>\n  api.post(`/agent/chat/save/${chatId.chat_id}`, {\n    headers: { skipAuth: true },\n  });\n\nexport const closeChat = (chatId) =>\n  api.delete(`/agent/user/chat/${chatId.chat_id}`, {\n    headers: { skipAuth: false },\n  });\n\nexport const deleteChat = (chatId) =>\n  api.delete(`/agent/user/chat/delete/${chatId.chat_id}`, {\n    headers: { skipAuth: false },\n  });\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}