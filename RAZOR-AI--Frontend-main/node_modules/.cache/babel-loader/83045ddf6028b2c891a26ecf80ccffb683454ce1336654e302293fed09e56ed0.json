{"ast":null,"code":"// src/store/user.js\nimport { login as apiLogin } from '../utils/api'; // 引入 API 请求\nimport { register as apiRegister } from '../utils/api'; // 引入 API 请求\nimport Storage from '../utils/storage'; // 引入 Storage 工具类\nconst state = {\n  token: Storage.get('token'),\n  userId: Storage.get('user_id'),\n  userName: Storage.get('userName'),\n  isLoggedIn: !!Storage.get('token')\n};\nconst mutations = {\n  SET_USER_INFO(state, {\n    token,\n    userId,\n    username\n  }) {\n    state.token = token;\n    state.userId = userId;\n    state.userName = username;\n    state.isLoggedIn = !!token;\n\n    // 设置过期时间为 1 天（单位：毫秒）\n    const TTL = 1 * 24 * 60 * 60 * 1000;\n    Storage.set('token', token, TTL);\n    Storage.set('user_id', userId, TTL);\n    Storage.set('userName', username, TTL);\n  },\n  LOGOUT(state) {\n    state.token = null;\n    state.userId = null;\n    state.userName = null;\n    state.isLoggedIn = false;\n\n    // Storage.remove('token');\n    // Storage.remove('user_id');\n    // Storage.remove('userName');\n  },\n  REGISTER() {} // 注册逻辑 commit 一个空的函数\n};\nconst actions = {\n  // 登录逻辑\n  async login({\n    commit\n  }, payload) {\n    try {\n      console.log('payload:', payload);\n      const response = await apiLogin(payload); // 调用登录接口 response是来自api.js的login函数的返回值\n      const {\n        token,\n        message,\n        username\n      } = response.data; // 从响应中解构出 token 和 user_id 和userName\n      commit('SET_USER_INFO', {\n        token,\n        userId: payload.user_id,\n        username\n      }); // 保存 token 和 userId 和userName 到 store\n      return {\n        success: true,\n        message\n      }; // 返回成功信息给LoginForm组件\n    } catch (error) {\n      console.log('Error occurred in user.js:', error);\n      return {\n        success: false,\n        message: error.message\n      };\n    }\n  },\n  // 退出登录逻辑\n  async logout({\n    commit\n  }) {\n    commit('LOGOUT');\n    localStorage.clear(); // 清除所有缓存\n    return {\n      success: true,\n      message: '成功退出登录'\n    }; // 返回成功信息给Logout组件\n  },\n  // 注册逻辑\n  async register({\n    commit\n  }, payload) {\n    try {\n      console.log('payload:', payload);\n      const response = await apiRegister(payload);\n      console.log('response:', response);\n      const {\n        user_id,\n        message\n      } = response.data;\n      commit('REGISTER', {}); // 进行一个空的commit，否则payload不会被提交\n      return {\n        success: true,\n        message,\n        user_id\n      }; // 返回成功信息给RegisterPage\n    } catch (error) {\n      console.log('Error occurred in user.js:', error);\n      return {\n        success: false,\n        message: error.message\n      };\n    }\n  }\n};\nconst getters = {\n  isLoggedIn: state => state.isLoggedIn,\n  userId: state => state.userId,\n  userName: state => state.userName\n};\nexport default {\n  namespaced: true,\n  // 启动命名空间\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["login","apiLogin","register","apiRegister","Storage","state","token","get","userId","userName","isLoggedIn","mutations","SET_USER_INFO","username","TTL","set","LOGOUT","REGISTER","actions","commit","payload","console","log","response","message","data","user_id","success","error","logout","localStorage","clear","getters","namespaced"],"sources":["D:/1/adminBlock/razorai_frontend-main/razorai_frontend-main/RAZOR-AI--Frontend-main/src/store/user.js"],"sourcesContent":["// src/store/user.js\nimport { login as apiLogin } from '../utils/api'; // 引入 API 请求\nimport { register as apiRegister } from '../utils/api'; // 引入 API 请求\nimport Storage from '../utils/storage'; // 引入 Storage 工具类\nconst state = {\n  token: Storage.get('token'),\n  userId: Storage.get('user_id'),\n  userName: Storage.get('userName'),\n  isLoggedIn: !!Storage.get('token'),\n};\n\nconst mutations = {\n  SET_USER_INFO(state, { token, userId, username }) {\n    state.token = token;\n    state.userId = userId;\n    state.userName = username;\n    state.isLoggedIn = !!token;\n\n    // 设置过期时间为 1 天（单位：毫秒）\n    const TTL = 1 * 24 * 60 * 60 * 1000;\n    Storage.set('token', token, TTL);\n    Storage.set('user_id', userId, TTL);\n    Storage.set('userName', username, TTL);\n  },\n  LOGOUT(state) {\n    state.token = null;\n    state.userId = null;\n    state.userName = null;\n    state.isLoggedIn = false;\n\n    // Storage.remove('token');\n    // Storage.remove('user_id');\n    // Storage.remove('userName');\n  },\n\n  REGISTER() {}, // 注册逻辑 commit 一个空的函数\n};\n\nconst actions = {\n  // 登录逻辑\n  async login({ commit }, payload) {\n    try {\n      console.log('payload:', payload);\n      const response = await apiLogin(payload); // 调用登录接口 response是来自api.js的login函数的返回值\n      const { token, message, username } = response.data; // 从响应中解构出 token 和 user_id 和userName\n      commit('SET_USER_INFO', { token, userId: payload.user_id, username }); // 保存 token 和 userId 和userName 到 store\n      return { success: true, message }; // 返回成功信息给LoginForm组件\n    } catch (error) {\n      console.log('Error occurred in user.js:', error);\n      return { success: false, message: error.message };\n    }\n  },\n\n  // 退出登录逻辑\n  async logout({ commit }) {\n    commit('LOGOUT');\n    localStorage.clear(); // 清除所有缓存\n    return { success: true, message: '成功退出登录' }; // 返回成功信息给Logout组件\n  },\n\n  // 注册逻辑\n  async register({ commit }, payload) {\n    try {\n      console.log('payload:', payload);\n      const response = await apiRegister(payload);\n      console.log('response:', response);\n      const { user_id, message } = response.data;\n      commit('REGISTER', {}); // 进行一个空的commit，否则payload不会被提交\n      return { success: true, message, user_id }; // 返回成功信息给RegisterPage\n    } catch (error) {\n      console.log('Error occurred in user.js:', error);\n      return { success: false, message: error.message };\n    }\n  },\n};\n\nconst getters = {\n  isLoggedIn: (state) => state.isLoggedIn,\n  userId: (state) => state.userId,\n  userName: (state) => state.userName,\n};\n\nexport default {\n  namespaced: true, // 启动命名空间\n  state,\n  mutations,\n  actions,\n  getters,\n};\n"],"mappings":"AAAA;AACA,SAASA,KAAK,IAAIC,QAAQ,QAAQ,cAAc,CAAC,CAAC;AAClD,SAASC,QAAQ,IAAIC,WAAW,QAAQ,cAAc,CAAC,CAAC;AACxD,OAAOC,OAAO,MAAM,kBAAkB,CAAC,CAAC;AACxC,MAAMC,KAAK,GAAG;EACZC,KAAK,EAAEF,OAAO,CAACG,GAAG,CAAC,OAAO,CAAC;EAC3BC,MAAM,EAAEJ,OAAO,CAACG,GAAG,CAAC,SAAS,CAAC;EAC9BE,QAAQ,EAAEL,OAAO,CAACG,GAAG,CAAC,UAAU,CAAC;EACjCG,UAAU,EAAE,CAAC,CAACN,OAAO,CAACG,GAAG,CAAC,OAAO;AACnC,CAAC;AAED,MAAMI,SAAS,GAAG;EAChBC,aAAaA,CAACP,KAAK,EAAE;IAAEC,KAAK;IAAEE,MAAM;IAAEK;EAAS,CAAC,EAAE;IAChDR,KAAK,CAACC,KAAK,GAAGA,KAAK;IACnBD,KAAK,CAACG,MAAM,GAAGA,MAAM;IACrBH,KAAK,CAACI,QAAQ,GAAGI,QAAQ;IACzBR,KAAK,CAACK,UAAU,GAAG,CAAC,CAACJ,KAAK;;IAE1B;IACA,MAAMQ,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;IACnCV,OAAO,CAACW,GAAG,CAAC,OAAO,EAAET,KAAK,EAAEQ,GAAG,CAAC;IAChCV,OAAO,CAACW,GAAG,CAAC,SAAS,EAAEP,MAAM,EAAEM,GAAG,CAAC;IACnCV,OAAO,CAACW,GAAG,CAAC,UAAU,EAAEF,QAAQ,EAAEC,GAAG,CAAC;EACxC,CAAC;EACDE,MAAMA,CAACX,KAAK,EAAE;IACZA,KAAK,CAACC,KAAK,GAAG,IAAI;IAClBD,KAAK,CAACG,MAAM,GAAG,IAAI;IACnBH,KAAK,CAACI,QAAQ,GAAG,IAAI;IACrBJ,KAAK,CAACK,UAAU,GAAG,KAAK;;IAExB;IACA;IACA;EACF,CAAC;EAEDO,QAAQA,CAAA,EAAG,CAAC,CAAC,CAAE;AACjB,CAAC;AAED,MAAMC,OAAO,GAAG;EACd;EACA,MAAMlB,KAAKA,CAAC;IAAEmB;EAAO,CAAC,EAAEC,OAAO,EAAE;IAC/B,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,OAAO,CAAC;MAChC,MAAMG,QAAQ,GAAG,MAAMtB,QAAQ,CAACmB,OAAO,CAAC,CAAC,CAAC;MAC1C,MAAM;QAAEd,KAAK;QAAEkB,OAAO;QAAEX;MAAS,CAAC,GAAGU,QAAQ,CAACE,IAAI,CAAC,CAAC;MACpDN,MAAM,CAAC,eAAe,EAAE;QAAEb,KAAK;QAAEE,MAAM,EAAEY,OAAO,CAACM,OAAO;QAAEb;MAAS,CAAC,CAAC,CAAC,CAAC;MACvE,OAAO;QAAEc,OAAO,EAAE,IAAI;QAAEH;MAAQ,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdP,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEM,KAAK,CAAC;MAChD,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEH,OAAO,EAAEI,KAAK,CAACJ;MAAQ,CAAC;IACnD;EACF,CAAC;EAED;EACA,MAAMK,MAAMA,CAAC;IAAEV;EAAO,CAAC,EAAE;IACvBA,MAAM,CAAC,QAAQ,CAAC;IAChBW,YAAY,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IACtB,OAAO;MAAEJ,OAAO,EAAE,IAAI;MAAEH,OAAO,EAAE;IAAS,CAAC,CAAC,CAAC;EAC/C,CAAC;EAED;EACA,MAAMtB,QAAQA,CAAC;IAAEiB;EAAO,CAAC,EAAEC,OAAO,EAAE;IAClC,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,OAAO,CAAC;MAChC,MAAMG,QAAQ,GAAG,MAAMpB,WAAW,CAACiB,OAAO,CAAC;MAC3CC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,QAAQ,CAAC;MAClC,MAAM;QAAEG,OAAO;QAAEF;MAAQ,CAAC,GAAGD,QAAQ,CAACE,IAAI;MAC1CN,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACxB,OAAO;QAAEQ,OAAO,EAAE,IAAI;QAAEH,OAAO;QAAEE;MAAQ,CAAC,CAAC,CAAC;IAC9C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdP,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEM,KAAK,CAAC;MAChD,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEH,OAAO,EAAEI,KAAK,CAACJ;MAAQ,CAAC;IACnD;EACF;AACF,CAAC;AAED,MAAMQ,OAAO,GAAG;EACdtB,UAAU,EAAGL,KAAK,IAAKA,KAAK,CAACK,UAAU;EACvCF,MAAM,EAAGH,KAAK,IAAKA,KAAK,CAACG,MAAM;EAC/BC,QAAQ,EAAGJ,KAAK,IAAKA,KAAK,CAACI;AAC7B,CAAC;AAED,eAAe;EACbwB,UAAU,EAAE,IAAI;EAAE;EAClB5B,KAAK;EACLM,SAAS;EACTO,OAAO;EACPc;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}