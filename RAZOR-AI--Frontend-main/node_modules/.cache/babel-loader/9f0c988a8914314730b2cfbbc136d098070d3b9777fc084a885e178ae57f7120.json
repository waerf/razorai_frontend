{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport LoginForm from '@/components/LoginForm.vue'; // 引入登录表单组件\nimport { mapGetters, mapState, mapActions } from 'vuex'; // 引入 mapGetters, mapActions\nimport user from '@/store/user';\nexport default {\n  components: {\n    LoginForm\n  },\n  data() {\n    return {\n      loginDialogVisible: false,\n      isSidebarHidden: false // 控制菜单栏是否隐藏\n    };\n  },\n  created() {\n    this.getAllChats();\n  },\n  computed: {\n    ...mapGetters('user', ['isLoggedIn', 'userId', 'userName']),\n    // 映射 getters\n    ...mapState('chat', {\n      chatlists: state => state.chats\n    }),\n    ...mapState('user', ['isLoggedIn', 'userName', 'userId', 'token']),\n    // 绑定 Vuex 状态，当信息改变时，自动更新\n    headername() {\n      // 从当前路由的 meta 信息中获取标题\n      console.log('当前路由：', this.$route);\n      this.$message('当前路由：' + this.$route.path);\n      return this.$route.meta.title || '默认标题';\n    }\n  },\n  methods: {\n    ...mapActions('chat', ['fetchChats']),\n    // 映射 actions, 用于获取聊天列表\n    async getAllChats() {\n      try {\n        const response = await this.fetchChats({\n          user_id: user.state.userId\n        });\n        console.log('获取聊天列表成功：', response);\n      } catch (error) {\n        console.error('获取聊天列表失败：', error);\n      }\n    },\n    toggleSidebar() {\n      this.isSidebarHidden = !this.isSidebarHidden;\n    },\n    navigateTo(route) {\n      if (this.$route.name !== route) {\n        this.$router.push({\n          name: route\n        });\n      }\n    },\n    openLoginDialog() {\n      this.loginDialogVisible = true;\n    },\n    // 跳转到聊天详情页\n    navigateToChat(chatId) {\n      // 如果当前页面的id和chatId相同，则不跳转\n      if (this.$route.params.id === chatId) {\n        return;\n      }\n      this.$router.push({\n        name: 'ChatRobot',\n        params: {\n          id: chatId\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["LoginForm","mapGetters","mapState","mapActions","user","components","data","loginDialogVisible","isSidebarHidden","created","getAllChats","computed","chatlists","state","chats","headername","console","log","$route","$message","path","meta","title","methods","response","fetchChats","user_id","userId","error","toggleSidebar","navigateTo","route","name","$router","push","openLoginDialog","navigateToChat","chatId","params","id"],"sources":["src/layouts/defaultLayout.vue"],"sourcesContent":["<!-- src/layouts/defaultLayout.vue -->\n<template>\n  <div class=\"layout-container\">\n    <!-- 左侧菜单栏 -->\n    <aside class=\"sidebar\" :class=\"{ hidden: isSidebarHidden }\">\n      <div class=\"logo-button-container\">\n        <img class=\"logo\" src=\"@/assets/images/logo.png\" alt=\"Logo\" />\n        <div class=\"company-name\">RAZOR-AI</div>\n        <!-- 菜单栏收缩按钮 -->\n        <button\n          class=\"toggle-sidebar-btn\"\n          v-if=\"!isSidebarHidden\"\n          @click=\"toggleSidebar\"\n        >\n          <el-icon name=\"s-fold\"></el-icon>\n        </button>\n      </div>\n\n      <!-- 主要功能区域 -->\n      <!-- \n      <div class=\"main-section\">\n        <div class=\"main-section-item\" @click=\"navigateTo('Home')\">\n          <el-icon name=\"s-home\"></el-icon>首页\n        </div>\n        <div class=\"main-section-item\" @click=\"navigateTo('SubscribedBots')\">\n          <el-icon name=\"s-opportunity\"></el-icon>已订阅机器人\n        </div>\n      </div>\n      -->\n      <div class=\"menu-item\" @click=\"navigateTo('Home')\">\n        <el-icon name=\"s-home\" class=\"menu-item-icon\"></el-icon>首页\n      </div>\n      <div class=\"menu-item\" @click=\"navigateTo('Home')\">\n        <el-icon name=\"menu-item-icon\"></el-icon>已订阅机器人\n      </div>\n      <!-- <div class=\"menu-item\" @click=\"navigateTo('Explorer')\">\n        <el-icon name=\"goods\" class=\"menu-item-icon\"></el-icon>探索机器人\n      </div> -->\n      <!-- <div class=\"menu-item\" @click=\"navigateTo('DeveloperCenter')\">\n        <el-icon name=\"coordinate\" class=\"menu-item-icon\"></el-icon>开发者中心\n      </div> -->\n      <div class=\"menu-item\" @click=\"navigateTo('CreateBots')\">\n        <el-icon name=\"coordinate\" class=\"menu-item-icon\"></el-icon>创造机器人\n      </div>\n      <div class=\"menu-item\" @click=\"navigateTo('PersonalHome')\">\n        <el-icon name=\"s-custom\" class=\"menu-item-icon\"></el-icon>个人主页\n      </div>\n      <!-- <div class=\"menu-item\" @click=\"navigateTo('Test')\">\n        <el-icon name=\"chat-line-round\" class=\"menu-item-icon\"></el-icon\n        >睿择社区\n      </div> -->\n      <!-- <div class=\"menu-item\" @click=\"navigateTo('Setting')\">\n        <el-icon name=\"setting\" class=\"menu-item-icon\"></el-icon>系统设置\n      </div> -->\n      <!-- <div class=\"menu-item\" @click=\"navigateTo('About')\">\n        <el-icon name=\"info\" class=\"menu-item-icon\"></el-icon>关于我们\n      </div> -->\n      <!-- <div class=\"divider\"></div> -->\n      <div class=\"menu-item\" @click=\"navigateTo('Test')\">\n        <el-icon name=\"loading\" class=\"menu-item-icon\"></el-icon>测试页面\n      </div>\n      <div class=\"menu-item\" ==\n        <el-icon name=\"loading\" class=\"menu-item-icon\"></el-icon>测试页面\n      </div>\n      <!-- <div class=\"menu-item\" @click=\"navigateTo('HelperCenter')\">\n        <el-icon name=\"question\" class=\"menu-item-icon\"></el-icon>帮助中心\n      </div> -->\n      <div class=\"chat-history\">\n        <div\n          class=\"chat-item\"\n          v-for=\"chat in chatlists\"\n          :key=\"chat.id\"\n          @click=\"navigateToChat(chat.id)\"\n        >\n          <el-icon name=\"chat-dot-square\" class=\"chat-icon\"></el-icon\n          >{{ chat.name }}\n          <span>{{ chat.agent_name }}</span>\n        </div>\n      </div>\n    </aside>\n\n    <!-- 右侧内容区域 -->\n    <el-main>\n      <!-- 页头部分 -->\n      <el-header class=\"ourHeader\">\n        <!-- 在侧边栏隐藏时，显示控制按钮 -->\n        <button\n          v-if=\"isSidebarHidden\"\n          class=\"toggle-sidebar-btn in-header\"\n          @click=\"toggleSidebar\"\n        >\n          <el-icon name=\"s-unfold\"></el-icon>\n        </button>\n        <h2 class=\"header-name\">{{ headername }}</h2>\n        <div class=\"user-info\">\n          <el-icon name=\"user\"></el-icon>\n          <span v-if=\"!isLoggedIn\" @click=\"openLoginDialog\">用户登录</span>\n          <span v-else @click=\"navigateTo('PersonalHome')\"\n            >你好，{{ userName }}</span\n          >\n        </div>\n      </el-header>\n      <router-view></router-view>\n    </el-main>\n\n    <!-- 登录对话框 -->\n    <el-dialog\n      :visible.sync=\"loginDialogVisible\"\n      name=\"用户登录\"\n      :modal=\"true\"\n      :close-on-click-modal=\"false\"\n      center\n      width=\"30%\"\n    >\n      <LoginForm @close=\"loginDialogVisible = false\" />\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport LoginForm from '@/components/LoginForm.vue'; // 引入登录表单组件\nimport { mapGetters, mapState, mapActions } from 'vuex'; // 引入 mapGetters, mapActions\nimport user from '@/store/user';\nexport default {\n  components: {\n    LoginForm,\n  },\n  data() {\n    return {\n      loginDialogVisible: false,\n      isSidebarHidden: false, // 控制菜单栏是否隐藏\n    };\n  },\n  created() {\n    this.getAllChats();\n  },\n  computed: {\n    ...mapGetters('user', ['isLoggedIn', 'userId', 'userName']), // 映射 getters\n    ...mapState('chat', {\n      chatlists: (state) => state.chats,\n    }),\n    ...mapState('user', ['isLoggedIn', 'userName', 'userId', 'token']), // 绑定 Vuex 状态，当信息改变时，自动更新\n    headername() {\n      // 从当前路由的 meta 信息中获取标题\n      console.log('当前路由：', this.$route);\n      this.$message('当前路由：' + this.$route.path);\n      return this.$route.meta.title || '默认标题';\n    },\n  },\n  methods: {\n    ...mapActions('chat', ['fetchChats']), // 映射 actions, 用于获取聊天列表\n    async getAllChats() {\n      try {\n        const response = await this.fetchChats({\n          user_id: user.state.userId,\n        });\n        console.log('获取聊天列表成功：', response);\n      } catch (error) {\n        console.error('获取聊天列表失败：', error);\n      }\n    },\n    toggleSidebar() {\n      this.isSidebarHidden = !this.isSidebarHidden;\n    },\n    navigateTo(route) {\n      if (this.$route.name !== route) {\n        this.$router.push({ name: route });\n      }\n    },\n    openLoginDialog() {\n      this.loginDialogVisible = true;\n    },\n    // 跳转到聊天详情页\n    navigateToChat(chatId) {\n      // 如果当前页面的id和chatId相同，则不跳转\n      if (this.$route.params.id === chatId) {\n        return;\n      }\n      this.$router.push({ name: 'ChatRobot', params: { id: chatId } });\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n@use '@/assets/styles/layout.scss' as *;\n.el-main {\n  padding: 0px;\n}\n\n.toggle-sidebar-btn {\n  cursor: pointer;\n  font-size: 1.5rem;\n}\n</style>\n"],"mappings":";AAwHA,OAAAA,SAAA;AACA,SAAAC,UAAA,EAAAC,QAAA,EAAAC,UAAA;AACA,OAAAC,IAAA;AACA;EACAC,UAAA;IACAL;EACA;EACAM,KAAA;IACA;MACAC,kBAAA;MACAC,eAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,WAAA;EACA;EACAC,QAAA;IACA,GAAAV,UAAA;IAAA;IACA,GAAAC,QAAA;MACAU,SAAA,EAAAC,KAAA,IAAAA,KAAA,CAAAC;IACA;IACA,GAAAZ,QAAA;IAAA;IACAa,WAAA;MACA;MACAC,OAAA,CAAAC,GAAA,eAAAC,MAAA;MACA,KAAAC,QAAA,gBAAAD,MAAA,CAAAE,IAAA;MACA,YAAAF,MAAA,CAAAG,IAAA,CAAAC,KAAA;IACA;EACA;EACAC,OAAA;IACA,GAAApB,UAAA;IAAA;IACA,MAAAO,YAAA;MACA;QACA,MAAAc,QAAA,cAAAC,UAAA;UACAC,OAAA,EAAAtB,IAAA,CAAAS,KAAA,CAAAc;QACA;QACAX,OAAA,CAAAC,GAAA,cAAAO,QAAA;MACA,SAAAI,KAAA;QACAZ,OAAA,CAAAY,KAAA,cAAAA,KAAA;MACA;IACA;IACAC,cAAA;MACA,KAAArB,eAAA,SAAAA,eAAA;IACA;IACAsB,WAAAC,KAAA;MACA,SAAAb,MAAA,CAAAc,IAAA,KAAAD,KAAA;QACA,KAAAE,OAAA,CAAAC,IAAA;UAAAF,IAAA,EAAAD;QAAA;MACA;IACA;IACAI,gBAAA;MACA,KAAA5B,kBAAA;IACA;IACA;IACA6B,eAAAC,MAAA;MACA;MACA,SAAAnB,MAAA,CAAAoB,MAAA,CAAAC,EAAA,KAAAF,MAAA;QACA;MACA;MACA,KAAAJ,OAAA,CAAAC,IAAA;QAAAF,IAAA;QAAAM,MAAA;UAAAC,EAAA,EAAAF;QAAA;MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}