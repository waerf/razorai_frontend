{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { MessageBox } from 'element-ui';\nimport { mapActions } from 'vuex';\nimport user from '@/store/user';\nexport default {\n  name: 'UserProfile',\n  data() {\n    return {\n      avatar: 'https://via.placeholder.com/150',\n      username: '',\n      email: '666@example.com',\n      bio: '喜欢编程和旅游。',\n      interestModules: ['编程', '旅游', '健身'],\n      friends: ['何雯宏', '许昕格', '王加添'],\n      favoriteRobots: ['R2-D2', 'C-3PO', 'Optimus Prime'],\n      favoriteTools: ['VS Code', 'Sublime Text', 'WebStorm']\n    };\n  },\n  created() {\n    this.username = user.state.userName;\n    console.log('user:', user);\n  },\n  methods: {\n    editAvatar() {\n      this.$message.info('修改头像功能待实现');\n    },\n    editInterest() {\n      this.$message.info('编辑兴趣模块功能待实现');\n    },\n    addFriend() {\n      this.$message.info('添加好友功能待实现');\n    },\n    saveProfile() {\n      console.log('个人信息保存:', {\n        username: this.username,\n        email: this.email,\n        bio: this.bio,\n        interestModules: this.interestModules,\n        friends: this.friends,\n        favoriteRobots: this.favoriteRobots,\n        favoriteTools: this.favoriteTools\n      });\n      this.$message.success('个人信息已保存！');\n    },\n    confirmLogout() {\n      // 弹出确认对话框\n      MessageBox.confirm('您确定要登出吗？', '确认登出', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        // 用户点击“确定”后执行登出操作\n        this.outSubmit();\n      }).catch(() => {\n        // 用户点击“取消”时不做任何操作\n        console.log('取消登出');\n      });\n    },\n    ...mapActions('user', ['logout']),\n    // 映射 user 模块中的 logout 方法\n    async outSubmit() {\n      this.isLoading = true; // 显示加载状态\n      try {\n        // 调用 Vuex 中的 logout 动作\n        const result = await this.logout();\n        console.log(result);\n        // 清除本地存储的用户信息（如 token）\n        this.$message.success('登出成功！'); // 提示登出成功\n        // 跳转到登录页面\n        if (this.$route.name !== 'Home') {\n          this.$router.push({\n            name: 'Home'\n          });\n          location.reload(); // 强制刷新页面\n        }\n      } catch (error) {\n        console.error(error); // 打印错误信息\n        this.$message.error(error.message || '登出失败');\n      } finally {\n        // 无论成功或失败都会执行\n        this.isLoading = false; // 结束加载状态\n      }\n    }\n  }\n};","map":{"version":3,"names":["MessageBox","mapActions","user","name","data","avatar","username","email","bio","interestModules","friends","favoriteRobots","favoriteTools","created","state","userName","console","log","methods","editAvatar","$message","info","editInterest","addFriend","saveProfile","success","confirmLogout","confirm","confirmButtonText","cancelButtonText","type","then","outSubmit","catch","isLoading","result","logout","$route","$router","push","location","reload","error","message"],"sources":["src/views/PersonalHomePage.vue"],"sourcesContent":["<!--personalHomePage.vue-->\n<template>\n  <div class=\"profile-page\">\n    <h1 class=\"title\">个人主页</h1>\n    <p class=\"description\">\n      欢迎来到您的个人主页，您可以在此修改个人信息和查看好友。\n    </p>\n\n    <div class=\"profile-container\">\n      <div class=\"profile-header\">\n        <div class=\"avatar-section\">\n          <img :src=\"avatar\" alt=\"用户头像\" class=\"avatar\" />\n          <el-button @click=\"editAvatar\" size=\"mini\">修改头像</el-button>\n        </div>\n        <div class=\"user-info\">\n          <h2>{{ username }}</h2>\n          <p>邮箱：{{ email }}</p>\n          <p>个人简介：{{ bio }}</p>\n        </div>\n      </div>\n\n      <div class=\"info-container\">\n        <!-- 感兴趣的模块 -->\n        <div class=\"info-group\">\n          <h3>感兴趣的模块</h3>\n          <ul class=\"interest-list\">\n            <li v-for=\"module in interestModules\" :key=\"module\">\n              {{ module }}\n            </li>\n          </ul>\n          <el-button @click=\"editInterest\" size=\"mini\">编辑兴趣模块</el-button>\n        </div>\n\n        <!-- 我的好友 -->\n        <div class=\"info-group\">\n          <h3>我的好友</h3>\n          <ul class=\"friend-list\">\n            <li v-for=\"friend in friends\" :key=\"friend\">{{ friend }}</li>\n          </ul>\n          <el-button @click=\"addFriend\" size=\"mini\">添加好友</el-button>\n        </div>\n\n        <!-- 我喜欢的机器人 -->\n        <div class=\"info-group\">\n          <h3>我喜欢的机器人</h3>\n          <ul class=\"robot-list\">\n            <li v-for=\"robot in favoriteRobots\" :key=\"robot\">{{ robot }}</li>\n          </ul>\n        </div>\n\n        <!-- 我常用的编辑工具 -->\n        <div class=\"info-group\">\n          <h3>我常用的编辑工具</h3>\n          <ul class=\"tool-list\">\n            <li v-for=\"tool in favoriteTools\" :key=\"tool\">{{ tool }}</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"button-group\">\n      <el-button type=\"primary\" @click=\"saveProfile\">保存个人信息</el-button>\n      <el-button @click=\"confirmLogout\" size=\"mini\" type=\"danger\"\n        >登出</el-button\n      >\n    </div>\n  </div>\n</template>\n\n<script>\nimport { MessageBox } from 'element-ui';\nimport { mapActions } from 'vuex';\nimport user from '@/store/user';\nexport default {\n  name: 'UserProfile',\n  data() {\n    return {\n      avatar: 'https://via.placeholder.com/150',\n      username: '',\n      email: '666@example.com',\n      bio: '喜欢编程和旅游。',\n      interestModules: ['编程', '旅游', '健身'],\n      friends: ['何雯宏', '许昕格', '王加添'],\n      favoriteRobots: ['R2-D2', 'C-3PO', 'Optimus Prime'],\n      favoriteTools: ['VS Code', 'Sublime Text', 'WebStorm'],\n    };\n  },\n  created() {\n    this.username = user.state.userName;\n    console.log('user:', user);\n  },\n  methods: {\n    editAvatar() {\n      this.$message.info('修改头像功能待实现');\n    },\n    editInterest() {\n      this.$message.info('编辑兴趣模块功能待实现');\n    },\n    addFriend() {\n      this.$message.info('添加好友功能待实现');\n    },\n    saveProfile() {\n      console.log('个人信息保存:', {\n        username: this.username,\n        email: this.email,\n        bio: this.bio,\n        interestModules: this.interestModules,\n        friends: this.friends,\n        favoriteRobots: this.favoriteRobots,\n        favoriteTools: this.favoriteTools,\n      });\n      this.$message.success('个人信息已保存！');\n    },\n    confirmLogout() {\n      // 弹出确认对话框\n      MessageBox.confirm('您确定要登出吗？', '确认登出', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n      })\n        .then(() => {\n          // 用户点击“确定”后执行登出操作\n          this.outSubmit();\n        })\n        .catch(() => {\n          // 用户点击“取消”时不做任何操作\n          console.log('取消登出');\n        });\n    },\n    ...mapActions('user', ['logout']), // 映射 user 模块中的 logout 方法\n    async outSubmit() {\n      this.isLoading = true; // 显示加载状态\n      try {\n        // 调用 Vuex 中的 logout 动作\n        const result = await this.logout();\n        console.log(result);\n        // 清除本地存储的用户信息（如 token）\n        this.$message.success('登出成功！'); // 提示登出成功\n        // 跳转到登录页面\n        if (this.$route.name !== 'Home') {\n          this.$router.push({ name: 'Home' });\n          location.reload(); // 强制刷新页面\n        }\n      } catch (error) {\n        console.error(error); // 打印错误信息\n        this.$message.error(error.message || '登出失败');\n      } finally {\n        // 无论成功或失败都会执行\n        this.isLoading = false; // 结束加载状态\n      }\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n@use '@/assets/styles/mixins.scss' as *;\n@use '@/assets/styles/variables.scss' as *;\n.html-body {\n  height: 100%; /* 设置 html 和 body 高度为 100% */\n  margin: 0; /* 去除默认边距 */\n  padding: 0; /* 去除默认内边距 */\n  overflow: hidden;\n}\n\n.profile-page {\n  height: auto; /* 使用视口高度 */\n  max-width: 100%;\n  padding: 20px;\n  background-color: $background-color; /* 深色背景 */\n  color: $text-color; /* 白色文字 */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n}\n\n.title {\n  font-size: 2em;\n  text-align: center;\n  margin-bottom: 10px;\n}\n\n.description {\n  text-align: center;\n  margin-bottom: 20px;\n  color: #aaa; /* 灰色文字 */\n}\n\n.profile-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n}\n\n.profile-header {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.avatar-section {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.avatar {\n  width: 120px;\n  height: 120px;\n  border-radius: 50%;\n  object-fit: cover;\n  margin-right: 10px;\n}\n\n.user-info h2 {\n  font-size: 1.5em;\n  font-weight: bold;\n}\n\n.user-info p {\n  font-size: 1.1em;\n  color: #aaa;\n  margin-top: 5px;\n}\n\n.info-container {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  flex-wrap: wrap;\n}\n\n.info-group {\n  width: 45%; /* 每个信息组的宽度 */\n  margin: 0 10px;\n  padding: 15px;\n  background-color: #3a3a3a;\n  border-radius: 5px;\n  margin-bottom: 20px;\n}\n\n.info-group h3 {\n  font-size: 1.3em;\n  color: #ffffff;\n  margin-bottom: 10px;\n}\n\n.interest-list,\n.friend-list,\n.robot-list,\n.tool-list {\n  list-style-type: none;\n  padding: 0;\n}\n\n.interest-list li,\n.friend-list li,\n.robot-list li,\n.tool-list li {\n  color: #aaa;\n  font-size: 1.1em;\n  margin-bottom: 5px;\n}\n\n.button-group {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n</style>\n"],"mappings":";AAsEA,SAAAA,UAAA;AACA,SAAAC,UAAA;AACA,OAAAC,IAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,QAAA;MACAC,KAAA;MACAC,GAAA;MACAC,eAAA;MACAC,OAAA;MACAC,cAAA;MACAC,aAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAP,QAAA,GAAAJ,IAAA,CAAAY,KAAA,CAAAC,QAAA;IACAC,OAAA,CAAAC,GAAA,UAAAf,IAAA;EACA;EACAgB,OAAA;IACAC,WAAA;MACA,KAAAC,QAAA,CAAAC,IAAA;IACA;IACAC,aAAA;MACA,KAAAF,QAAA,CAAAC,IAAA;IACA;IACAE,UAAA;MACA,KAAAH,QAAA,CAAAC,IAAA;IACA;IACAG,YAAA;MACAR,OAAA,CAAAC,GAAA;QACAX,QAAA,OAAAA,QAAA;QACAC,KAAA,OAAAA,KAAA;QACAC,GAAA,OAAAA,GAAA;QACAC,eAAA,OAAAA,eAAA;QACAC,OAAA,OAAAA,OAAA;QACAC,cAAA,OAAAA,cAAA;QACAC,aAAA,OAAAA;MACA;MACA,KAAAQ,QAAA,CAAAK,OAAA;IACA;IACAC,cAAA;MACA;MACA1B,UAAA,CAAA2B,OAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GACAC,IAAA;QACA;QACA,KAAAC,SAAA;MACA,GACAC,KAAA;QACA;QACAjB,OAAA,CAAAC,GAAA;MACA;IACA;IACA,GAAAhB,UAAA;IAAA;IACA,MAAA+B,UAAA;MACA,KAAAE,SAAA;MACA;QACA;QACA,MAAAC,MAAA,cAAAC,MAAA;QACApB,OAAA,CAAAC,GAAA,CAAAkB,MAAA;QACA;QACA,KAAAf,QAAA,CAAAK,OAAA;QACA;QACA,SAAAY,MAAA,CAAAlC,IAAA;UACA,KAAAmC,OAAA,CAAAC,IAAA;YAAApC,IAAA;UAAA;UACAqC,QAAA,CAAAC,MAAA;QACA;MACA,SAAAC,KAAA;QACA1B,OAAA,CAAA0B,KAAA,CAAAA,KAAA;QACA,KAAAtB,QAAA,CAAAsB,KAAA,CAAAA,KAAA,CAAAC,OAAA;MACA;QACA;QACA,KAAAT,SAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}