{"ast":null,"code":"import { mapState, mapActions } from 'vuex';\nimport user from '@/store/user';\nimport RobotDetailDialog from './RobotDetailPage.vue';\nimport { UnsubscribeAgent as apiUnSubscribeAgent } from '../utils/api';\nexport default {\n  name: 'SubscribedBotsPage',\n  components: {\n    RobotDetailDialog\n  },\n  data() {\n    return {\n      searchQuery: '',\n      // 搜索关键字\n      robotDetailVisible: false,\n      currentRobotId: null\n    };\n  },\n  computed: {\n    ...mapState('agent', {\n      haveSubscribedRobots: state => state.haveSubscribed\n    }),\n    filteredRobots() {\n      if (!this.searchQuery) {\n        return this.haveSubscribedRobots;\n      }\n      return this.haveSubscribedRobots.filter(robot => robot.agent_name.toLowerCase().includes(this.searchQuery.toLowerCase()));\n    }\n  },\n  methods: {\n    ...mapActions('agent', ['fetchUserSubscriptions']),\n    // 取消订阅机器人\n    async unsubscribe(robotId) {\n      const userId = this.$store.state.user.userId;\n      try {\n        const payload = {\n          userId,\n          robotId\n        };\n        const response = await apiUnSubscribeAgent(payload);\n        if (response.status === 200) {\n          this.$message.success(`取消订阅机器人${robotId}成功！`);\n          this.getUserSubscriptions();\n        } else {\n          this.$message.error(`取消订阅机器人${robotId}失败，请稍后重试`);\n        }\n      } catch (error) {\n        console.error('取消订阅失败:', error);\n        this.$message.error(`取消订阅机器人${robotId}失败，请稍后重试`);\n      }\n    },\n    async getUserSubscriptions() {\n      try {\n        const user_id = user.state.userId;\n        await this.fetchUserSubscriptions(user_id);\n      } catch (error) {\n        console.error('error in getUserSubscriptions:', error);\n      }\n    },\n    viewDetails(agentId) {\n      if (!agentId) {\n        this.$message.error('无效的机器人信息');\n        return;\n      }\n      this.currentRobotId = agentId;\n      this.robotDetailVisible = true;\n    },\n    getRemainingDays(endtime) {\n      const endDate = new Date(endtime);\n      const today = new Date();\n      const timeDiff = endDate - today;\n      const daysRemaining = Math.ceil(timeDiff / (1000 * 60 * 60 * 24)); // 转换为天数\n      return daysRemaining >= 0 ? daysRemaining : 0; // 如果小于0，则返回0\n    }\n  },\n  created() {\n    this.getUserSubscriptions(); // 获取用户订阅列表\n  }\n};","map":{"version":3,"names":["mapState","mapActions","user","RobotDetailDialog","UnsubscribeAgent","apiUnSubscribeAgent","name","components","data","searchQuery","robotDetailVisible","currentRobotId","computed","haveSubscribedRobots","state","haveSubscribed","filteredRobots","filter","robot","agent_name","toLowerCase","includes","methods","unsubscribe","robotId","userId","$store","payload","response","status","$message","success","getUserSubscriptions","error","console","user_id","fetchUserSubscriptions","viewDetails","agentId","getRemainingDays","endtime","endDate","Date","today","timeDiff","daysRemaining","Math","ceil","created"],"sources":["src/views/SubscribedBotsPage.vue"],"sourcesContent":["<template>\n  <div class=\"subscribed-page\">\n    <h1 class=\"title\">已订阅的机器人</h1>\n\n    <div class=\"search-container\">\n      <input\n        type=\"text\"\n        v-model=\"searchQuery\"\n        class=\"search-input\"\n        placeholder=\"搜索机器人名称...\"\n      />\n    </div>\n\n    <div class=\"robot-list\">\n      <div\n        v-for=\"robot in filteredRobots\"\n        :key=\"robot.agent_id\"\n        class=\"robot-card\"\n      >\n        <!-- 条件渲染过期标签 -->\n        <div v-if=\"!robot.status\" class=\"expired-tag\">\n          <el-icon name=\"warning\"></el-icon>已过期\n        </div>\n        <div class=\"robot-info-container\">\n          <h2 class=\"robot-name\">{{ robot.agent_name }}</h2>\n          <img\n            :src=\"require('@/assets/images/Agents/subsAgent.png')\"\n            alt=\"机器人图片\"\n            class=\"robot-image\"\n          />\n        </div>\n        <div class=\"robot-details\">\n          <p class=\"robot-info\">开始时间: {{ robot.startime }}</p>\n          <p class=\"robot-info\">结束时间: {{ robot.endtime }}</p>\n          <p class=\"robot-info\">\n            <el-icon name=\"s-data\"></el-icon>\n            剩余天数: {{ getRemainingDays(robot.endtime) }} 天\n          </p>\n        </div>\n        <button class=\"unsubscribe-button\" @click=\"unsubscribe(robot.agent_id)\">\n          <el-icon name=\"delete\"></el-icon>\n          取消订阅\n        </button>\n        <button class=\"details-button\" @click=\"viewDetails(robot.agent_id)\">\n          <el-icon name=\"info\"></el-icon>\n          查看详情\n        </button>\n      </div>\n    </div>\n\n    <!-- 机器人详情弹窗 -->\n    <robot-detail-dialog\n      :visible=\"robotDetailVisible\"\n      :robotId=\"currentRobotId\"\n      @close=\"robotDetailVisible = false\"\n      @show-robot=\"viewDetails\"\n    />\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex';\nimport user from '@/store/user';\nimport RobotDetailDialog from './RobotDetailPage.vue';\nimport { UnsubscribeAgent as apiUnSubscribeAgent } from '../utils/api';\n\nexport default {\n  name: 'SubscribedBotsPage',\n  components: {\n    RobotDetailDialog,\n  },\n  data() {\n    return {\n      searchQuery: '', // 搜索关键字\n      robotDetailVisible: false,\n      currentRobotId: null,\n    };\n  },\n  computed: {\n    ...mapState('agent', {\n      haveSubscribedRobots: (state) => state.haveSubscribed,\n    }),\n    filteredRobots() {\n      if (!this.searchQuery) {\n        return this.haveSubscribedRobots;\n      }\n      return this.haveSubscribedRobots.filter((robot) =>\n        robot.agent_name.toLowerCase().includes(this.searchQuery.toLowerCase())\n      );\n    },\n  },\n  methods: {\n    ...mapActions('agent', ['fetchUserSubscriptions']),\n    // 取消订阅机器人\n    async unsubscribe(robotId) {\n      const userId = this.$store.state.user.userId;\n      try {\n        const payload = { userId, robotId };\n        const response = await apiUnSubscribeAgent(payload);\n        if (response.status === 200) {\n          this.$message.success(`取消订阅机器人${robotId}成功！`);\n          this.getUserSubscriptions();\n        } else {\n          this.$message.error(`取消订阅机器人${robotId}失败，请稍后重试`);\n        }\n      } catch (error) {\n        console.error('取消订阅失败:', error);\n        this.$message.error(`取消订阅机器人${robotId}失败，请稍后重试`);\n      }\n    },\n    async getUserSubscriptions() {\n      try {\n        const user_id = user.state.userId;\n        await this.fetchUserSubscriptions(user_id);\n      } catch (error) {\n        console.error('error in getUserSubscriptions:', error);\n      }\n    },\n    viewDetails(agentId) {\n      if (!agentId) {\n        this.$message.error('无效的机器人信息');\n        return;\n      }\n      this.currentRobotId = agentId;\n      this.robotDetailVisible = true;\n    },\n    getRemainingDays(endtime) {\n      const endDate = new Date(endtime);\n      const today = new Date();\n      const timeDiff = endDate - today;\n      const daysRemaining = Math.ceil(timeDiff / (1000 * 60 * 60 * 24)); // 转换为天数\n      return daysRemaining >= 0 ? daysRemaining : 0; // 如果小于0，则返回0\n    },\n  },\n  created() {\n    this.getUserSubscriptions(); // 获取用户订阅列表\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@use '@/assets/styles/mixins.scss' as *;\n@use '@/assets/styles/variables.scss' as *;\n.subscribed-page {\n  position: relative;\n  padding: 20px;\n  background-color: $background-color;\n  color: $text-color;\n  max-width: 100%; /* 填满整个宽度 */\n  height: 100%; /* 填满整个高度 */\n  overflow: hidden; /* 隐藏溢出内容 */\n}\n\n.title {\n  font-size: 3.5em;\n  margin-bottom: 20px;\n  animation: fadeIn 3s ease;\n  text-align: center;\n}\n\n.search-container {\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n.search-input {\n  width: 60%;\n  padding: 12px;\n  font-size: 1.2em;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\n}\n\n.robot-list {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n  max-height: 80vh; /* 设置最大高度 */\n  overflow-y: auto; /* 允许垂直滚动 */\n}\n\n.robot-card {\n  margin-top: 2%;\n  background-color: lighten($background-color, 2%);\n  padding: 20px;\n  border-radius: 12px;\n  position: relative; /* 为绝对定位的标签提供参考 */\n  transition:\n    transform 0.3s ease,\n    box-shadow 0.3s ease;\n}\n\n.robot-card:hover {\n  background-color: lighten($background-color, 30%);\n  transform: translateY(-5px);\n}\n\n.robot-info-container {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\n\n.robot-name {\n  font-size: 1.8em;\n  margin-bottom: 10px;\n  color: #ffdd57;\n}\n\n.robot-image {\n  width: 50px; /* 设置适中的宽度 */\n  height: 50px; /* 设置高度与名字相同 */\n  border-radius: 50%; /* 圆形图片 */\n  margin-left: 10px; /* 图片与名字之间的间距 */\n}\n\n.robot-info {\n  font-size: 1em;\n  margin-bottom: 10px;\n  color: $text-color;\n}\n\n.robot-details {\n  margin-top: 10px;\n}\n\n.unsubscribe-button {\n  padding: 10px 15px;\n  background-color: $primary-color;\n  border: none;\n  border-radius: 5px;\n  color: $text-color;\n  font-size: 1em;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.unsubscribe-button:hover {\n  background: #138496;\n  border-color: #117a8b;\n}\n\n.details-button {\n  padding: 10px 15px;\n  background-color: $primary-color;\n  border: none;\n  border-radius: 5px;\n  color: $text-color;\n  font-size: 1em;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  margin-left: 10px;\n}\n\n.details-button:hover {\n  background: #138496;\n  border-color: #117a8b;\n}\n\n.expired-tag {\n  position: absolute; /* 绝对定位 */\n  top: 10px; /* 距离卡片顶部10px */\n  right: 10px; /* 距离卡片右侧10px */\n  background-color: #ff4d4f; /* 背景颜色 */\n  color: white; /* 字体颜色 */\n  padding: 5px 10px; /* 内边距 */\n  border-radius: 5px; /* 圆角 */\n  font-size: 0.9em; /* 字体大小 */\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(-20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n</style>\n"],"mappings":"AA6DA,SAAAA,QAAA,EAAAC,UAAA;AACA,OAAAC,IAAA;AACA,OAAAC,iBAAA;AACA,SAAAC,gBAAA,IAAAC,mBAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAJ;EACA;EACAK,KAAA;IACA;MACAC,WAAA;MAAA;MACAC,kBAAA;MACAC,cAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAZ,QAAA;MACAa,oBAAA,EAAAC,KAAA,IAAAA,KAAA,CAAAC;IACA;IACAC,eAAA;MACA,UAAAP,WAAA;QACA,YAAAI,oBAAA;MACA;MACA,YAAAA,oBAAA,CAAAI,MAAA,CAAAC,KAAA,IACAA,KAAA,CAAAC,UAAA,CAAAC,WAAA,GAAAC,QAAA,MAAAZ,WAAA,CAAAW,WAAA,GACA;IACA;EACA;EACAE,OAAA;IACA,GAAArB,UAAA;IACA;IACA,MAAAsB,YAAAC,OAAA;MACA,MAAAC,MAAA,QAAAC,MAAA,CAAAZ,KAAA,CAAAZ,IAAA,CAAAuB,MAAA;MACA;QACA,MAAAE,OAAA;UAAAF,MAAA;UAAAD;QAAA;QACA,MAAAI,QAAA,SAAAvB,mBAAA,CAAAsB,OAAA;QACA,IAAAC,QAAA,CAAAC,MAAA;UACA,KAAAC,QAAA,CAAAC,OAAA,WAAAP,OAAA;UACA,KAAAQ,oBAAA;QACA;UACA,KAAAF,QAAA,CAAAG,KAAA,WAAAT,OAAA;QACA;MACA,SAAAS,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;QACA,KAAAH,QAAA,CAAAG,KAAA,WAAAT,OAAA;MACA;IACA;IACA,MAAAQ,qBAAA;MACA;QACA,MAAAG,OAAA,GAAAjC,IAAA,CAAAY,KAAA,CAAAW,MAAA;QACA,WAAAW,sBAAA,CAAAD,OAAA;MACA,SAAAF,KAAA;QACAC,OAAA,CAAAD,KAAA,mCAAAA,KAAA;MACA;IACA;IACAI,YAAAC,OAAA;MACA,KAAAA,OAAA;QACA,KAAAR,QAAA,CAAAG,KAAA;QACA;MACA;MACA,KAAAtB,cAAA,GAAA2B,OAAA;MACA,KAAA5B,kBAAA;IACA;IACA6B,iBAAAC,OAAA;MACA,MAAAC,OAAA,OAAAC,IAAA,CAAAF,OAAA;MACA,MAAAG,KAAA,OAAAD,IAAA;MACA,MAAAE,QAAA,GAAAH,OAAA,GAAAE,KAAA;MACA,MAAAE,aAAA,GAAAC,IAAA,CAAAC,IAAA,CAAAH,QAAA;MACA,OAAAC,aAAA,QAAAA,aAAA;IACA;EACA;EACAG,QAAA;IACA,KAAAhB,oBAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}