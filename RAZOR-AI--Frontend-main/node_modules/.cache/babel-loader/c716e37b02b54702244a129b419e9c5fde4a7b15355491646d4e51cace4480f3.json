{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { changeAdminPassword, adminLogout, getAdminInfo } from '@/utils/api';\nexport default {\n  name: 'AdminPostReviewPage',\n  data() {\n    return {\n      isSidebarCollapsed: false,\n      showChangePwd: false,\n      adminName: '',\n      pwdForm: {\n        oldPwd: '',\n        newPwd: '',\n        confirmPwd: ''\n      },\n      pwdRules: {\n        oldPwd: [{\n          required: true,\n          message: '请输入旧密码',\n          trigger: 'blur'\n        }],\n        newPwd: [{\n          required: true,\n          message: '请输入新密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          message: '新密码至少6位',\n          trigger: 'blur'\n        }],\n        confirmPwd: [{\n          required: true,\n          message: '请确认新密码',\n          trigger: 'blur'\n        }, {\n          validator: (rule, value, callback) => {\n            if (value !== this.pwdForm.newPwd) {\n              callback(new Error('两次输入的新密码不一致'));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }]\n      },\n      searchQuery: '',\n      statusFilter: 'all',\n      typeFilter: 'all',\n      pageSize: 10,\n      currentPage: 1,\n      posts: [{\n        id: 1,\n        title: '违规内容举报',\n        subtitle: '举报用户ID:123456发布不当内容',\n        author: '李四',\n        time: '2025-07-15 14:30',\n        type: '举报内容',\n        status: 'pending',\n        selected: false\n      }, {\n        id: 2,\n        title: '敏感词检测',\n        subtitle: '检测到敏感词\"政治\"',\n        author: '王五',\n        time: '2025-07-15 10:45',\n        type: '敏感词检测',\n        status: 'pending',\n        selected: false\n      }, {\n        id: 3,\n        title: '关于机器人API的使用问题',\n        subtitle: '如何调用情感分析API?',\n        author: '赵六',\n        time: '2025-07-14 18:20',\n        type: '普通帖子',\n        status: 'approved',\n        selected: false\n      }]\n    };\n  },\n  computed: {\n    filteredPosts() {\n      let filtered = this.posts;\n      if (this.searchQuery) {\n        const query = this.searchQuery.toLowerCase();\n        filtered = filtered.filter(post => post.title.toLowerCase().includes(query) || post.subtitle.toLowerCase().includes(query));\n      }\n      if (this.statusFilter !== 'all') {\n        filtered = filtered.filter(post => post.status === this.statusFilter);\n      }\n      if (this.typeFilter !== 'all') {\n        filtered = filtered.filter(post => post.type.includes(this.typeFilter));\n      }\n      return filtered;\n    },\n    currentPageStart() {\n      return (this.currentPage - 1) * this.pageSize + 1;\n    },\n    currentPageEnd() {\n      return Math.min(this.currentPage * this.pageSize, this.posts.length);\n    }\n  },\n  methods: {\n    getStatusTagType(status) {\n      switch (status) {\n        case 'pending':\n          return 'warning';\n        case 'approved':\n          return 'success';\n        case 'rejected':\n          return 'danger';\n        default:\n          return '';\n      }\n    },\n    getStatusText(status) {\n      switch (status) {\n        case 'pending':\n          return '待审核';\n        case 'approved':\n          return '已通过';\n        case 'rejected':\n          return '已拒绝';\n        default:\n          return '';\n      }\n    },\n    selectAll() {\n      const allSelected = this.filteredPosts.every(post => post.selected);\n      this.filteredPosts.forEach(post => {\n        post.selected = !allSelected;\n      });\n    },\n    batchApprove() {\n      const selectedPosts = this.posts.filter(post => post.selected && post.status === 'pending');\n      if (selectedPosts.length === 0) {\n        this.$message.warning('请至少选择一条待审核的帖子');\n        return;\n      }\n      this.$confirm(`确定要通过选中的 ${selectedPosts.length} 条帖子吗？`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        selectedPosts.forEach(post => {\n          post.status = 'approved';\n          post.selected = false;\n        });\n        this.$message.success(`已通过 ${selectedPosts.length} 条帖子`);\n      });\n    },\n    batchReject() {\n      const selectedPosts = this.posts.filter(post => post.selected && post.status === 'pending');\n      if (selectedPosts.length === 0) {\n        this.$message.warning('请至少选择一条待审核的帖子');\n        return;\n      }\n      this.$confirm(`确定要拒绝选中的 ${selectedPosts.length} 条帖子吗？`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        selectedPosts.forEach(post => {\n          post.status = 'rejected';\n          post.selected = false;\n        });\n        this.$message.success(`已拒绝 ${selectedPosts.length} 条帖子`);\n      });\n    },\n    viewPost(post) {\n      // 查看帖子详情逻辑\n      console.log('查看帖子:', post);\n    },\n    approvePost(post) {\n      post.status = 'approved';\n      this.$message.success('帖子已通过审核');\n    },\n    rejectPost(post) {\n      post.status = 'rejected';\n      this.$message.success('帖子已拒绝审核');\n    },\n    handleCurrentChange(page) {\n      this.currentPage = page;\n    },\n    async fetchAdminInfo() {\n      try {\n        const res = await getAdminInfo();\n        if (res.data && res.data.success) {\n          this.adminName = res.data.adminInfo.adminName;\n        } else {\n          this.$message.error(res.data.message || '获取管理员信息失败');\n        }\n      } catch (err) {\n        this.$message.error(err.message || '获取管理员信息失败');\n      }\n    },\n    toggleSidebar() {\n      this.isSidebarCollapsed = !this.isSidebarCollapsed;\n      const sidebar = document.querySelector('.sidebar');\n      sidebar.classList.toggle('hidden');\n    },\n    logout() {\n      this.$confirm('确定要退出登录吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          const res = await adminLogout();\n          if (res.data && res.data.success) {\n            this.$message.success(res.data.message || '登出成功');\n            if (window.localStorage) {\n              localStorage.removeItem('admin_token');\n            }\n            this.$router.push('/');\n          } else {\n            this.$message.error(res.data.message || '登出失败');\n          }\n        } catch (err) {\n          this.$message.error(err.message || '登出失败，请重试');\n        }\n      }).catch(() => {\n        // 用户取消\n      });\n    },\n    async submitPwdForm() {\n      this.$refs.pwdFormRef.validate(async valid => {\n        if (!valid) return;\n        try {\n          const res = await changeAdminPassword({\n            oldPassword: this.pwdForm.oldPwd,\n            newPassword: this.pwdForm.newPwd\n          });\n          if (res.data && res.data.success) {\n            this.$message({\n              type: 'success',\n              message: res.data.message || '密码修改成功'\n            });\n            this.showChangePwd = false;\n            this.resetPwdForm();\n          } else {\n            this.$message({\n              type: 'error',\n              message: res.data.message || '密码修改失败'\n            });\n          }\n        } catch (err) {\n          this.$message({\n            type: 'error',\n            message: err.response?.data?.message || '密码修改失败，请重试'\n          });\n        }\n      });\n    },\n    resetPwdForm() {\n      this.pwdForm.oldPwd = '';\n      this.pwdForm.newPwd = '';\n      this.pwdForm.confirmPwd = '';\n      if (this.$refs.pwdFormRef) this.$refs.pwdFormRef.clearValidate();\n    }\n  },\n  mounted() {\n    this.fetchAdminInfo();\n  }\n};","map":{"version":3,"names":["changeAdminPassword","adminLogout","getAdminInfo","name","data","isSidebarCollapsed","showChangePwd","adminName","pwdForm","oldPwd","newPwd","confirmPwd","pwdRules","required","message","trigger","min","validator","rule","value","callback","Error","searchQuery","statusFilter","typeFilter","pageSize","currentPage","posts","id","title","subtitle","author","time","type","status","selected","computed","filteredPosts","filtered","query","toLowerCase","filter","post","includes","currentPageStart","currentPageEnd","Math","length","methods","getStatusTagType","getStatusText","selectAll","allSelected","every","forEach","batchApprove","selectedPosts","$message","warning","$confirm","confirmButtonText","cancelButtonText","then","success","batchReject","viewPost","console","log","approvePost","rejectPost","handleCurrentChange","page","fetchAdminInfo","res","adminInfo","error","err","toggleSidebar","sidebar","document","querySelector","classList","toggle","logout","window","localStorage","removeItem","$router","push","catch","submitPwdForm","$refs","pwdFormRef","validate","valid","oldPassword","newPassword","resetPwdForm","response","clearValidate","mounted"],"sources":["src/views/AdminPostReviewPage.vue"],"sourcesContent":["<template>\n  <div class=\"admin-post-review\">\n    <!-- 侧边导航栏 -->\n    <aside class=\"sidebar\">\n      <button class=\"toggle-sidebar-btn\" @click=\"toggleSidebar\">\n        <i class=\"el-icon-s-fold\"></i>\n      </button>\n      <div class=\"user-info\">\n        <div class=\"avatar\">{{ adminName ? adminName.charAt(0) : '管' }}</div>\n        <div>\n          <p class=\"username\">{{ adminName || '管理员' }}</p>\n          <p class=\"role\">系统管理员</p>\n        </div>\n      </div>\n\n      <nav class=\"nav-menu\">\n        <div class=\"nav-item\" @click=\"$router.push('/admin')\">\n          <i class=\"el-icon-menu\"></i>\n          <span>控制台概览</span>\n        </div>\n        <div class=\"nav-item\" @click=\"$router.push('/admin/admin-review')\">\n          <i class=\"el-icon-user-solid\"></i>\n          <span>管理员审核</span>\n        </div>\n        <div class=\"nav-item\" @click=\"$router.push('/admin/review')\">\n          <i class=\"el-icon-cpu\"></i>\n          <span>机器人审核</span>\n        </div>\n        <div class=\"nav-item active\">\n          <i class=\"el-icon-document\"></i>\n          <span>帖子审核</span>\n        </div>\n        <div class=\"nav-item\" @click=\"$router.push('/admin/feedback')\">\n          <i class=\"el-icon-chat-dot-round\"></i>\n          <span>用户反馈</span>\n        </div>\n      </nav>\n    </aside>\n\n    <!-- 主内容区 -->\n    <main class=\"main-content\">\n      <!-- 顶部导航栏 -->\n      <header class=\"header\">\n        <h1 class=\"title\">帖子审核</h1>\n        <div style=\"display: flex; align-items: center; margin-left: auto\">\n          <el-button\n            type=\"warning\"\n            style=\"margin-right: 8px\"\n            @click=\"showChangePwd = true\"\n            >修改密码</el-button\n          >\n          <el-button type=\"primary\" @click=\"logout\">退出登录</el-button>\n        </div>\n        <el-dialog\n          title=\"修改密码\"\n          :visible.sync=\"showChangePwd\"\n          width=\"400px\"\n          @close=\"resetPwdForm\"\n        >\n          <el-form\n            :model=\"pwdForm\"\n            :rules=\"pwdRules\"\n            ref=\"pwdFormRef\"\n            label-width=\"90px\"\n          >\n            <el-form-item label=\"旧密码\" prop=\"oldPwd\">\n              <el-input\n                v-model=\"pwdForm.oldPwd\"\n                type=\"password\"\n                autocomplete=\"off\"\n              />\n            </el-form-item>\n            <el-form-item label=\"新密码\" prop=\"newPwd\">\n              <el-input\n                v-model=\"pwdForm.newPwd\"\n                type=\"password\"\n                autocomplete=\"off\"\n              />\n            </el-form-item>\n            <el-form-item label=\"确认新密码\" prop=\"confirmPwd\">\n              <el-input\n                v-model=\"pwdForm.confirmPwd\"\n                type=\"password\"\n                autocomplete=\"off\"\n              />\n            </el-form-item>\n          </el-form>\n          <span slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"showChangePwd = false\">取消</el-button>\n            <el-button type=\"primary\" @click=\"submitPwdForm\"\n              >确认修改</el-button\n            >\n          </span>\n        </el-dialog>\n      </header>\n\n      <!-- 主要内容 -->\n      <div class=\"content\">\n        <!-- 搜索和筛选 -->\n        <el-card class=\"search-card\" shadow=\"hover\">\n          <div class=\"search-container\">\n            <el-input\n              placeholder=\"搜索帖子标题或内容...\"\n              prefix-icon=\"el-icon-search\"\n              v-model=\"searchQuery\"\n              class=\"search-input\"\n            ></el-input>\n            <div class=\"filter-container\">\n              <el-select v-model=\"statusFilter\" placeholder=\"全部状态\">\n                <el-option label=\"全部状态\" value=\"all\"></el-option>\n                <el-option label=\"待审核\" value=\"pending\"></el-option>\n                <el-option label=\"已通过\" value=\"approved\"></el-option>\n                <el-option label=\"已拒绝\" value=\"rejected\"></el-option>\n              </el-select>\n              <el-select v-model=\"typeFilter\" placeholder=\"全部类型\">\n                <el-option label=\"全部类型\" value=\"all\"></el-option>\n                <el-option label=\"普通帖子\" value=\"normal\"></el-option>\n                <el-option label=\"举报内容\" value=\"report\"></el-option>\n                <el-option label=\"敏感词检测\" value=\"sensitive\"></el-option>\n              </el-select>\n            </div>\n          </div>\n        </el-card>\n\n        <!-- 帖子列表 -->\n        <el-card class=\"post-list-card\" shadow=\"hover\">\n          <div class=\"card-header\">\n            <h2 class=\"card-title\">待审核帖子列表</h2>\n            <div class=\"action-buttons\">\n              <el-button type=\"text\" @click=\"selectAll\">全选</el-button>\n              <el-button type=\"text\" @click=\"batchApprove\">批量通过</el-button>\n              <el-button type=\"text\" @click=\"batchReject\">批量拒绝</el-button>\n              <span class=\"record-count\">共 {{ posts.length }} 条记录</span>\n              <el-select v-model=\"pageSize\" class=\"page-size-select\">\n                <el-option label=\"10 条/页\" value=\"10\"></el-option>\n                <el-option label=\"20 条/页\" value=\"20\"></el-option>\n                <el-option label=\"50 条/页\" value=\"50\"></el-option>\n              </el-select>\n            </div>\n          </div>\n\n          <el-table :data=\"filteredPosts\" style=\"width: 100%\">\n            <el-table-column width=\"50\">\n              <template #default=\"scope\">\n                <el-checkbox v-model=\"scope.row.selected\"></el-checkbox>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"帖子标题\" width=\"300\">\n              <template #default=\"scope\">\n                <p class=\"post-title\">{{ scope.row.title }}</p>\n                <p class=\"post-subtitle\">{{ scope.row.subtitle }}</p>\n              </template>\n            </el-table-column>\n            <el-table-column\n              prop=\"author\"\n              label=\"作者\"\n              width=\"120\"\n            ></el-table-column>\n            <el-table-column\n              prop=\"time\"\n              label=\"提交时间\"\n              width=\"180\"\n            ></el-table-column>\n            <el-table-column\n              prop=\"type\"\n              label=\"类型\"\n              width=\"120\"\n            ></el-table-column>\n            <el-table-column label=\"状态\" width=\"120\">\n              <template #default=\"scope\">\n                <el-tag :type=\"getStatusTagType(scope.row.status)\" size=\"small\">\n                  {{ getStatusText(scope.row.status) }}\n                </el-tag>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" width=\"200\" align=\"right\">\n              <template #default=\"scope\">\n                <el-button type=\"text\" @click=\"viewPost(scope.row)\"\n                  >查看</el-button\n                >\n                <el-button\n                  type=\"text\"\n                  @click=\"approvePost(scope.row)\"\n                  :disabled=\"scope.row.status !== 'pending'\"\n                >\n                  通过\n                </el-button>\n                <el-button\n                  type=\"text\"\n                  @click=\"rejectPost(scope.row)\"\n                  :disabled=\"scope.row.status !== 'pending'\"\n                >\n                  拒绝\n                </el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n\n          <!-- 分页 -->\n          <div class=\"pagination-container\">\n            <span class=\"pagination-info\">\n              显示 {{ currentPageStart }} 到 {{ currentPageEnd }} 条，共\n              {{ posts.length }} 条\n            </span>\n            <el-pagination\n              layout=\"prev, pager, next\"\n              :total=\"posts.length\"\n              :page-size=\"pageSize\"\n              @current-change=\"handleCurrentChange\"\n            ></el-pagination>\n          </div>\n        </el-card>\n      </div>\n    </main>\n  </div>\n</template>\n\n<script>\nimport { changeAdminPassword, adminLogout, getAdminInfo } from '@/utils/api';\nexport default {\n  name: 'AdminPostReviewPage',\n  data() {\n    return {\n      isSidebarCollapsed: false,\n      showChangePwd: false,\n      adminName: '',\n      pwdForm: {\n        oldPwd: '',\n        newPwd: '',\n        confirmPwd: '',\n      },\n      pwdRules: {\n        oldPwd: [{ required: true, message: '请输入旧密码', trigger: 'blur' }],\n        newPwd: [\n          { required: true, message: '请输入新密码', trigger: 'blur' },\n          { min: 6, message: '新密码至少6位', trigger: 'blur' },\n        ],\n        confirmPwd: [\n          { required: true, message: '请确认新密码', trigger: 'blur' },\n          {\n            validator: (rule, value, callback) => {\n              if (value !== this.pwdForm.newPwd) {\n                callback(new Error('两次输入的新密码不一致'));\n              } else {\n                callback();\n              }\n            },\n            trigger: 'blur',\n          },\n        ],\n      },\n      searchQuery: '',\n      statusFilter: 'all',\n      typeFilter: 'all',\n      pageSize: 10,\n      currentPage: 1,\n      posts: [\n        {\n          id: 1,\n          title: '违规内容举报',\n          subtitle: '举报用户ID:123456发布不当内容',\n          author: '李四',\n          time: '2025-07-15 14:30',\n          type: '举报内容',\n          status: 'pending',\n          selected: false,\n        },\n        {\n          id: 2,\n          title: '敏感词检测',\n          subtitle: '检测到敏感词\"政治\"',\n          author: '王五',\n          time: '2025-07-15 10:45',\n          type: '敏感词检测',\n          status: 'pending',\n          selected: false,\n        },\n        {\n          id: 3,\n          title: '关于机器人API的使用问题',\n          subtitle: '如何调用情感分析API?',\n          author: '赵六',\n          time: '2025-07-14 18:20',\n          type: '普通帖子',\n          status: 'approved',\n          selected: false,\n        },\n      ],\n    };\n  },\n  computed: {\n    filteredPosts() {\n      let filtered = this.posts;\n\n      if (this.searchQuery) {\n        const query = this.searchQuery.toLowerCase();\n        filtered = filtered.filter(\n          (post) =>\n            post.title.toLowerCase().includes(query) ||\n            post.subtitle.toLowerCase().includes(query)\n        );\n      }\n\n      if (this.statusFilter !== 'all') {\n        filtered = filtered.filter((post) => post.status === this.statusFilter);\n      }\n\n      if (this.typeFilter !== 'all') {\n        filtered = filtered.filter((post) =>\n          post.type.includes(this.typeFilter)\n        );\n      }\n\n      return filtered;\n    },\n    currentPageStart() {\n      return (this.currentPage - 1) * this.pageSize + 1;\n    },\n    currentPageEnd() {\n      return Math.min(this.currentPage * this.pageSize, this.posts.length);\n    },\n  },\n  methods: {\n    getStatusTagType(status) {\n      switch (status) {\n        case 'pending':\n          return 'warning';\n        case 'approved':\n          return 'success';\n        case 'rejected':\n          return 'danger';\n        default:\n          return '';\n      }\n    },\n    getStatusText(status) {\n      switch (status) {\n        case 'pending':\n          return '待审核';\n        case 'approved':\n          return '已通过';\n        case 'rejected':\n          return '已拒绝';\n        default:\n          return '';\n      }\n    },\n    selectAll() {\n      const allSelected = this.filteredPosts.every((post) => post.selected);\n      this.filteredPosts.forEach((post) => {\n        post.selected = !allSelected;\n      });\n    },\n    batchApprove() {\n      const selectedPosts = this.posts.filter(\n        (post) => post.selected && post.status === 'pending'\n      );\n      if (selectedPosts.length === 0) {\n        this.$message.warning('请至少选择一条待审核的帖子');\n        return;\n      }\n\n      this.$confirm(\n        `确定要通过选中的 ${selectedPosts.length} 条帖子吗？`,\n        '提示',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning',\n        }\n      ).then(() => {\n        selectedPosts.forEach((post) => {\n          post.status = 'approved';\n          post.selected = false;\n        });\n        this.$message.success(`已通过 ${selectedPosts.length} 条帖子`);\n      });\n    },\n    batchReject() {\n      const selectedPosts = this.posts.filter(\n        (post) => post.selected && post.status === 'pending'\n      );\n      if (selectedPosts.length === 0) {\n        this.$message.warning('请至少选择一条待审核的帖子');\n        return;\n      }\n\n      this.$confirm(\n        `确定要拒绝选中的 ${selectedPosts.length} 条帖子吗？`,\n        '提示',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning',\n        }\n      ).then(() => {\n        selectedPosts.forEach((post) => {\n          post.status = 'rejected';\n          post.selected = false;\n        });\n        this.$message.success(`已拒绝 ${selectedPosts.length} 条帖子`);\n      });\n    },\n    viewPost(post) {\n      // 查看帖子详情逻辑\n      console.log('查看帖子:', post);\n    },\n    approvePost(post) {\n      post.status = 'approved';\n      this.$message.success('帖子已通过审核');\n    },\n    rejectPost(post) {\n      post.status = 'rejected';\n      this.$message.success('帖子已拒绝审核');\n    },\n    handleCurrentChange(page) {\n      this.currentPage = page;\n    },\n    async fetchAdminInfo() {\n      try {\n        const res = await getAdminInfo();\n        if (res.data && res.data.success) {\n          this.adminName = res.data.adminInfo.adminName;\n        } else {\n          this.$message.error(res.data.message || '获取管理员信息失败');\n        }\n      } catch (err) {\n        this.$message.error(err.message || '获取管理员信息失败');\n      }\n    },\n    toggleSidebar() {\n      this.isSidebarCollapsed = !this.isSidebarCollapsed;\n      const sidebar = document.querySelector('.sidebar');\n      sidebar.classList.toggle('hidden');\n    },\n    logout() {\n      this.$confirm('确定要退出登录吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n      })\n        .then(async () => {\n          try {\n            const res = await adminLogout();\n            if (res.data && res.data.success) {\n              this.$message.success(res.data.message || '登出成功');\n              if (window.localStorage) {\n                localStorage.removeItem('admin_token');\n              }\n              this.$router.push('/');\n            } else {\n              this.$message.error(res.data.message || '登出失败');\n            }\n          } catch (err) {\n            this.$message.error(err.message || '登出失败，请重试');\n          }\n        })\n        .catch(() => {\n          // 用户取消\n        });\n    },\n    async submitPwdForm() {\n      this.$refs.pwdFormRef.validate(async (valid) => {\n        if (!valid) return;\n        try {\n          const res = await changeAdminPassword({\n            oldPassword: this.pwdForm.oldPwd,\n            newPassword: this.pwdForm.newPwd,\n          });\n          if (res.data && res.data.success) {\n            this.$message({\n              type: 'success',\n              message: res.data.message || '密码修改成功',\n            });\n            this.showChangePwd = false;\n            this.resetPwdForm();\n          } else {\n            this.$message({\n              type: 'error',\n              message: res.data.message || '密码修改失败',\n            });\n          }\n        } catch (err) {\n          this.$message({\n            type: 'error',\n            message: err.response?.data?.message || '密码修改失败，请重试',\n          });\n        }\n      });\n    },\n    resetPwdForm() {\n      this.pwdForm.oldPwd = '';\n      this.pwdForm.newPwd = '';\n      this.pwdForm.confirmPwd = '';\n      if (this.$refs.pwdFormRef) this.$refs.pwdFormRef.clearValidate();\n    },\n  },\n  mounted() {\n    this.fetchAdminInfo();\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.admin-post-review {\n  display: flex;\n  min-height: 100vh;\n  background-color: #f5f5f5;\n\n  .sidebar {\n    position: relative;\n    transition: all 0.3s ease;\n\n    .toggle-sidebar-btn {\n      position: absolute;\n      top: 10px;\n      right: 10px;\n      cursor: pointer;\n      font-size: 16px;\n      background: none;\n      border: none;\n      color: #606266;\n      padding: 5px;\n\n      &:hover {\n        background-color: rgba(0, 0, 0, 0.05);\n        border-radius: 4px;\n      }\n    }\n\n    &.hidden {\n      width: 60px !important;\n\n      .nav-item {\n        span {\n          display: none;\n        }\n\n        i {\n          margin-right: 0;\n        }\n      }\n\n      .user-info {\n        flex-direction: column;\n        align-items: center;\n        padding: 10px;\n\n        .avatar {\n          margin-right: 0;\n          margin-bottom: 5px;\n        }\n\n        .username,\n        .role {\n          display: none;\n        }\n      }\n    }\n    width: 250px;\n    background-color: white;\n    border-right: 1px solid #e6e6e6;\n    padding: 20px 0;\n\n    .user-info {\n      display: flex;\n      align-items: center;\n      padding: 0 20px 20px;\n      border-bottom: 1px solid #e6e6e6;\n\n      .avatar {\n        width: 40px;\n        height: 40px;\n        border-radius: 50%;\n        background-color: #165dff;\n        color: white;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin-right: 12px;\n        font-weight: bold;\n      }\n\n      .username {\n        font-weight: 500;\n        margin-bottom: 4px;\n      }\n\n      .role {\n        font-size: 12px;\n        color: #999;\n      }\n    }\n\n    .nav-menu {\n      padding: 10px 0;\n\n      .nav-item {\n        display: flex;\n        align-items: center;\n        padding: 12px 20px;\n        margin: 4px 0;\n        cursor: pointer;\n        transition: all 0.3s;\n\n        i {\n          margin-right: 12px;\n          font-size: 18px;\n        }\n\n        &:hover {\n          background-color: #f6f6f6;\n        }\n\n        &.active {\n          background-color: #e8f3ff;\n          color: #165dff;\n          border-left: 3px solid #165dff;\n        }\n      }\n    }\n  }\n\n  .main-content {\n    flex: 1;\n    overflow: auto;\n\n    .header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 16px 24px;\n      background-color: white;\n      border-bottom: 1px solid #e6e6e6;\n      position: sticky;\n      top: 0;\n      z-index: 10;\n\n      .title {\n        font-size: 20px;\n        font-weight: 600;\n      }\n    }\n\n    .content {\n      padding: 24px;\n\n      .search-card {\n        margin-bottom: 24px;\n\n        .search-container {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n\n          .search-input {\n            width: 400px;\n          }\n\n          .filter-container {\n            display: flex;\n            gap: 12px;\n          }\n        }\n      }\n\n      .post-list-card {\n        .card-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 16px;\n\n          .card-title {\n            font-size: 18px;\n            font-weight: 600;\n          }\n\n          .action-buttons {\n            display: flex;\n            align-items: center;\n            gap: 12px;\n\n            .record-count {\n              font-size: 14px;\n              color: #666;\n              margin: 0 8px;\n            }\n\n            .page-size-select {\n              width: 120px;\n            }\n          }\n        }\n\n        .post-title {\n          font-weight: 500;\n        }\n\n        .post-subtitle {\n          font-size: 12px;\n          color: #999;\n          margin-top: 4px;\n        }\n\n        .pagination-container {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-top: 24px;\n          padding-top: 24px;\n          border-top: 1px solid #e6e6e6;\n\n          .pagination-info {\n            font-size: 14px;\n            color: #666;\n          }\n        }\n      }\n    }\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}