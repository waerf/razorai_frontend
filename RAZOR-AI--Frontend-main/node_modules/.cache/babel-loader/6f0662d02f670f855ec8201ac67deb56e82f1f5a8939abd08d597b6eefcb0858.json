{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions } from 'vuex';\nexport default {\n  name: 'AdminLoginPage',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          message: '请输入管理员账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      },\n      isLoading: false\n    };\n  },\n  methods: {\n    ...mapActions('admin', ['login']),\n    async onSubmit() {\n      this.$refs.loginForm.validate(async valid => {\n        if (valid) {\n          this.isLoading = true;\n          try {\n            const result = await this.login({\n              username: this.loginForm.username,\n              password: this.loginForm.password\n            });\n            if (result.success) {\n              this.$message.success(result.message || '登录成功！');\n              this.$router.push('/admin');\n            } else {\n              this.$message.error(result.message || '登录失败，请检查账号和密码');\n            }\n          } catch (error) {\n            console.error(error);\n            this.$message.error(error.message || '登录失败，打开控制台检查');\n          } finally {\n            this.isLoading = false;\n          }\n        } else {\n          this.$message.error('请正确填写表单');\n        }\n      });\n    },\n    closeDialog() {\n      this.$emit('close');\n      this.resetForm();\n    },\n    resetForm() {\n      this.loginForm.username = '';\n      this.loginForm.password = '';\n    }\n  }\n};","map":{"version":3,"names":["mapActions","name","data","loginForm","username","password","loginRules","required","message","trigger","isLoading","methods","onSubmit","$refs","validate","valid","result","login","success","$message","$router","push","error","console","closeDialog","$emit","resetForm"],"sources":["src/views/AdminLoginPage.vue"],"sourcesContent":["<template>\n  <el-form\n    :model=\"loginForm\"\n    :rules=\"loginRules\"\n    ref=\"loginForm\"\n    @keyup.enter.native=\"onSubmit\"\n    v-loading=\"isLoading\"\n  >\n    <el-form-item label=\"管理员账号\" prop=\"username\">\n      <el-input\n        v-model=\"loginForm.username\"\n        placeholder=\"管理员账号\"\n        prefix-icon=\"el-icon-user\"\n      ></el-input>\n    </el-form-item>\n    <el-form-item label=\"密码\" prop=\"password\">\n      <el-input\n        v-model=\"loginForm.password\"\n        type=\"password\"\n        placeholder=\"密码\"\n        prefix-icon=\"el-icon-lock\"\n      ></el-input>\n    </el-form-item>\n    <el-form-item>\n      <el-button\n        type=\"primary\"\n        @click=\"onSubmit\"\n        class=\"login-button\"\n        :loading=\"isLoading\"\n        >登录</el-button\n      >\n      <el-button class=\"login-button\" @click=\"closeDialog\">取消</el-button>\n    </el-form-item>\n  </el-form>\n</template>\n\n<script>\nimport { mapActions } from 'vuex';\n\nexport default {\n  name: 'AdminLoginPage',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: '',\n      },\n      loginRules: {\n        username: [\n          { required: true, message: '请输入管理员账号', trigger: 'blur' },\n        ],\n        password: [{ required: true, message: '请输入密码', trigger: 'blur' }],\n      },\n      isLoading: false,\n    };\n  },\n  methods: {\n    ...mapActions('admin', ['login']),\n    async onSubmit() {\n      this.$refs.loginForm.validate(async (valid) => {\n        if (valid) {\n          this.isLoading = true;\n          try {\n            const result = await this.login({\n              username: this.loginForm.username,\n              password: this.loginForm.password,\n            });\n            if (result.success) {\n              this.$message.success(result.message || '登录成功！');\n              this.$router.push('/admin');\n            } else {\n              this.$message.error(\n                result.message || '登录失败，请检查账号和密码'\n              );\n            }\n          } catch (error) {\n            console.error(error);\n            this.$message.error(error.message || '登录失败，打开控制台检查');\n          } finally {\n            this.isLoading = false;\n          }\n        } else {\n          this.$message.error('请正确填写表单');\n        }\n      });\n    },\n    closeDialog() {\n      this.$emit('close');\n      this.resetForm();\n    },\n    resetForm() {\n      this.loginForm.username = '';\n      this.loginForm.password = '';\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@use '@/assets/styles/mixins.scss' as *;\n@use '@/assets/styles/variables.scss' as *;\n.login-button {\n  margin-right: 10px;\n  color: $text-color;\n  background-color: $primary-color;\n  border-color: $text-color;\n  &:hover {\n    color: $text-color;\n    background-color: $hover-text-color;\n    border-color: $text-color;\n  }\n}\n</style>\n"],"mappings":";AAqCA,SAAAA,UAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,UAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;MACAC,SAAA;IACA;EACA;EACAC,OAAA;IACA,GAAAX,UAAA;IACA,MAAAY,SAAA;MACA,KAAAC,KAAA,CAAAV,SAAA,CAAAW,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAL,SAAA;UACA;YACA,MAAAM,MAAA,cAAAC,KAAA;cACAb,QAAA,OAAAD,SAAA,CAAAC,QAAA;cACAC,QAAA,OAAAF,SAAA,CAAAE;YACA;YACA,IAAAW,MAAA,CAAAE,OAAA;cACA,KAAAC,QAAA,CAAAD,OAAA,CAAAF,MAAA,CAAAR,OAAA;cACA,KAAAY,OAAA,CAAAC,IAAA;YACA;cACA,KAAAF,QAAA,CAAAG,KAAA,CACAN,MAAA,CAAAR,OAAA,mBACA;YACA;UACA,SAAAc,KAAA;YACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;YACA,KAAAH,QAAA,CAAAG,KAAA,CAAAA,KAAA,CAAAd,OAAA;UACA;YACA,KAAAE,SAAA;UACA;QACA;UACA,KAAAS,QAAA,CAAAG,KAAA;QACA;MACA;IACA;IACAE,YAAA;MACA,KAAAC,KAAA;MACA,KAAAC,SAAA;IACA;IACAA,UAAA;MACA,KAAAvB,SAAA,CAAAC,QAAA;MACA,KAAAD,SAAA,CAAAE,QAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}